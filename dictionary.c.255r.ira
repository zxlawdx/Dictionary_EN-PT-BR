
;; Function CreateEmpty (CreateEmpty, funcdef_no=17, decl_uid=2593, cgraph_uid=17, symbol_order=17)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8

   Insn 9(l0): point = 0
   Insn 6(l0): point = 2
   Insn 5(l0): point = 4
 a0(r87): [3..4]
Compressing live ranges: from 7 to 2 - 28%
Ranges after the compression:
 a0(r87): [0..1]
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1
Disposition:
    0:r87  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


CreateEmpty

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 6 [bp]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,2u} r20={1d,2u} r87={1d,1u} 
;;    total ref usage 17{8d,9u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 87)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 dictionary+0 S4 A32])) dictionary.c:5 79 {*movsi_internal}
     (nil))
(insn 6 5 9 2 (set (mem/f:SI (reg/f:SI 87) [3 dictionary_2(D)->Head+0 S4 A32])
        (const_int 0 [0])) dictionary.c:5 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 87)
        (nil)))
(insn 9 6 0 2 (const_int 0 [0]) dictionary.c:6 599 {nop}
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function Empty (Empty, funcdef_no=18, decl_uid=2595, cgraph_uid=18, symbol_order=18)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a2 (r87,l0) best Q_REGS, allocno Q_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4 DIREG:4 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4 GENERAL_REGS:4 MEM:6

   Insn 15(l0): point = 0
   Insn 14(l0): point = 2
   Insn 10(l0): point = 4
   Insn 7(l0): point = 6
   Insn 6(l0): point = 8
   Insn 5(l0): point = 10
 a0(r89): [3..4]
 a1(r88): [5..6]
 a2(r87): [7..8]
Compressing live ranges: from 13 to 6 - 46%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r88): [2..3]
 a2(r87): [4..5]
  regions=1, blocks=3, points=6
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    2:r87  l0     0    1:r88  l0     0    0:r89  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


Empty

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 6 [bp] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,2u} r17={1d,1u} r20={1d,2u} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 26{12d,14u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 17 [flags] 87 88 89
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (reg/f:SI 16 argp) [3 no+0 S4 A32])
            (const_int 0 [0]))) dictionary.c:10 3 {*cmpsi_ccno_1}
     (nil))
(insn 6 5 7 2 (set (reg:QI 87 [ _2 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) dictionary.c:10 529 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 7 6 10 2 (set (reg:SI 88 [ _3 ])
        (zero_extend:SI (reg:QI 87 [ _2 ]))) dictionary.c:10 123 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 87 [ _2 ])
        (nil)))
(insn 10 7 14 2 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ _3 ])) dictionary.c:10 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88 [ _3 ])
        (nil)))
(insn 14 10 15 2 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) dictionary.c:11 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89 [ <retval> ])
        (nil)))
(insn 15 14 0 2 (use (reg/i:SI 0 ax)) dictionary.c:11 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function CreateWord (CreateWord, funcdef_no=19, decl_uid=2597, cgraph_uid=19, symbol_order=19)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 14 count 10 (    1)
Building IRA IR
verify found no changes in insn with uid = 6.
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 67.
verify found no changes in insn with uid = 72.
verify found no changes in insn with uid = 74.
verify found no changes in insn with uid = 79.
verify found no changes in insn with uid = 81.
verify found no changes in insn with uid = 86.
verify found no changes in insn with uid = 88.
verify found no changes in insn with uid = 93.
verify found no changes in insn with uid = 95.
verify found no changes in insn with uid = 100.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r112,l0) best AREG, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r110,l0) best AREG, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a30 (r108,l0) best AREG, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a33 (r106,l0) best AREG, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a36 (r104,l0) best AREG, allocno GENERAL_REGS
    r103: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r103,l0) best AREG, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a2(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a3(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a4(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a5(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a6(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a7(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a8(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a9(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a10(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a11(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a12(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a13(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a14(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a15(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a16(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a17(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a18(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a19(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a20(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a21(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a22(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a23(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a24(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a25(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a26(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a27(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a28(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a29(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a30(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a31(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a32(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a33(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a34(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a35(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a36(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4

   Insn 109(l0): point = 0
   Insn 108(l0): point = 2
   Insn 104(l0): point = 4
   Insn 101(l0): point = 7
   Insn 100(l0): point = 9
   Insn 99(l0): point = 11
   Insn 98(l0): point = 13
   Insn 97(l0): point = 15
   Insn 96(l0): point = 17
   Insn 95(l0): point = 19
   Insn 94(l0): point = 21
   Insn 93(l0): point = 23
   Insn 92(l0): point = 25
   Insn 91(l0): point = 27
   Insn 90(l0): point = 29
   Insn 89(l0): point = 31
   Insn 88(l0): point = 33
   Insn 87(l0): point = 35
   Insn 86(l0): point = 37
   Insn 85(l0): point = 39
   Insn 84(l0): point = 41
   Insn 83(l0): point = 43
   Insn 82(l0): point = 45
   Insn 81(l0): point = 47
   Insn 80(l0): point = 49
   Insn 79(l0): point = 51
   Insn 78(l0): point = 53
   Insn 77(l0): point = 55
   Insn 76(l0): point = 57
   Insn 75(l0): point = 59
   Insn 74(l0): point = 61
   Insn 73(l0): point = 63
   Insn 72(l0): point = 65
   Insn 71(l0): point = 67
   Insn 70(l0): point = 69
   Insn 69(l0): point = 71
   Insn 68(l0): point = 73
   Insn 67(l0): point = 75
   Insn 66(l0): point = 77
   Insn 111(l0): point = 80
   Insn 61(l0): point = 82
   Insn 58(l0): point = 85
   Insn 57(l0): point = 87
   Insn 56(l0): point = 89
   Insn 55(l0): point = 91
   Insn 53(l0): point = 94
   Insn 52(l0): point = 96
   Insn 51(l0): point = 98
   Insn 50(l0): point = 100
   Insn 48(l0): point = 103
   Insn 47(l0): point = 105
   Insn 46(l0): point = 107
   Insn 45(l0): point = 109
   Insn 43(l0): point = 112
   Insn 42(l0): point = 114
   Insn 41(l0): point = 116
   Insn 40(l0): point = 118
   Insn 38(l0): point = 121
   Insn 37(l0): point = 123
   Insn 36(l0): point = 125
   Insn 35(l0): point = 127
   Insn 34(l0): point = 129
   Insn 33(l0): point = 131
   Insn 32(l0): point = 133
   Insn 31(l0): point = 135
   Insn 30(l0): point = 137
   Insn 29(l0): point = 139
   Insn 28(l0): point = 141
   Insn 27(l0): point = 143
   Insn 26(l0): point = 145
   Insn 25(l0): point = 147
   Insn 24(l0): point = 149
   Insn 23(l0): point = 151
   Insn 22(l0): point = 153
   Insn 21(l0): point = 155
   Insn 20(l0): point = 157
   Insn 19(l0): point = 159
   Insn 18(l0): point = 161
   Insn 17(l0): point = 163
   Insn 16(l0): point = 165
   Insn 15(l0): point = 167
   Insn 14(l0): point = 169
   Insn 13(l0): point = 171
   Insn 12(l0): point = 173
   Insn 11(l0): point = 175
   Insn 10(l0): point = 177
   Insn 9(l0): point = 179
   Insn 8(l0): point = 181
   Insn 7(l0): point = 183
   Insn 6(l0): point = 185
   Insn 5(l0): point = 187
 a0(r103): [3..4]
 a1(r87): [80..82] [5..7]
 a2(r102): [14..15]
 a3(r123): [16..17]
 a4(r101): [28..29]
 a5(r122): [30..31]
 a6(r100): [42..43]
 a7(r121): [44..45]
 a8(r99): [56..57]
 a9(r120): [58..59]
 a10(r98): [70..71]
 a11(r119): [72..73]
 a12(r97): [88..89]
 a13(r118): [90..91]
 a14(r96): [97..98]
 a15(r117): [99..100]
 a16(r95): [106..107]
 a17(r116): [108..109]
 a18(r94): [115..116]
 a19(r115): [117..118]
 a20(r93): [124..125]
 a21(r114): [126..127]
 a22(r113): [130..131]
 a23(r92): [130..133]
 a24(r112): [134..135]
 a25(r111): [142..143]
 a26(r91): [142..145]
 a27(r110): [146..147]
 a28(r109): [154..155]
 a29(r90): [154..157]
 a30(r108): [158..159]
 a31(r107): [166..167]
 a32(r89): [166..169]
 a33(r106): [170..171]
 a34(r105): [178..179]
 a35(r88): [178..181]
 a36(r104): [182..183]
Compressing live ranges: from 190 to 66 - 34%
Ranges after the compression:
 a0(r103): [0..1]
 a1(r87): [24..25] [2..3]
 a2(r102): [4..5]
 a3(r123): [6..7]
 a4(r101): [8..9]
 a5(r122): [10..11]
 a6(r100): [12..13]
 a7(r121): [14..15]
 a8(r99): [16..17]
 a9(r120): [18..19]
 a10(r98): [20..21]
 a11(r119): [22..23]
 a12(r97): [26..27]
 a13(r118): [28..29]
 a14(r96): [30..31]
 a15(r117): [32..33]
 a16(r95): [34..35]
 a17(r116): [36..37]
 a18(r94): [38..39]
 a19(r115): [40..41]
 a20(r93): [42..43]
 a21(r114): [44..45]
 a22(r113): [46..47]
 a23(r92): [46..47]
 a24(r112): [48..49]
 a25(r111): [50..51]
 a26(r91): [50..51]
 a27(r110): [52..53]
 a28(r109): [54..55]
 a29(r90): [54..55]
 a30(r108): [56..57]
 a31(r107): [58..59]
 a32(r89): [58..59]
 a33(r106): [60..61]
 a34(r105): [62..63]
 a35(r88): [62..63]
 a36(r104): [64..65]
  regions=1, blocks=10, points=66
    allocnos=37 (big 0), copies=0, conflicts=0, ranges=38
Disposition:
    1:r87  l0     0   35:r88  l0     1   32:r89  l0     1   29:r90  l0     1
   26:r91  l0     1   23:r92  l0     1   20:r93  l0     0   18:r94  l0     0
   16:r95  l0     0   14:r96  l0     0   12:r97  l0     0   10:r98  l0     0
    8:r99  l0     0    6:r100 l0     0    4:r101 l0     0    2:r102 l0     0
    0:r103 l0     0   36:r104 l0     0   34:r105 l0     0   33:r106 l0     0
   31:r107 l0     0   30:r108 l0     0   28:r109 l0     0   27:r110 l0     0
   25:r111 l0     0   24:r112 l0     0   22:r113 l0     0   21:r114 l0     0
   19:r115 l0     0   17:r116 l0     0   15:r117 l0     0   13:r118 l0     0
   11:r119 l0     0    9:r120 l0     0    7:r121 l0     0    5:r122 l0     0
    3:r123 l0     0
+++Costs: overall -6, reg -6, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


CreateWord

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={17d,7u} r1={16d} r2={16d} r6={1d,9u} r7={1d,64u} r8={15d} r9={15d} r10={15d} r11={15d} r12={15d} r13={15d} r14={15d} r15={15d} r16={1d,23u} r17={20d,5u} r18={15d} r19={15d} r20={1d,9u} r21={15d} r22={15d} r23={15d} r24={15d} r25={15d} r26={15d} r27={15d} r28={15d} r29={15d} r30={15d} r31={15d} r32={15d} r33={15d} r34={15d} r35={15d} r36={15d} r37={15d} r38={15d} r39={15d} r40={15d} r41={15d} r42={15d} r43={15d} r44={15d} r45={15d} r46={15d} r47={15d} r48={15d} r49={15d} r50={15d} r51={15d} r52={15d} r53={15d} r54={15d} r55={15d} r56={15d} r57={15d} r58={15d} r59={15d} r60={15d} r61={15d} r62={15d} r63={15d} r64={15d} r65={15d} r66={15d} r67={15d} r68={15d} r69={15d} r70={15d} r71={15d} r72={15d} r73={15d} r74={15d} r75={15d} r76={15d} r77={15d} r78={15d} r79={15d} r80={15d} r87={2d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} 
;;    total ref usage 1315{1161d,154u,0e} in 91{76 regular + 15 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 90 91 92 93 104 105 106 107 108 109 110 111 112 113 114
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (const_int 50 [0x32])) dictionary.c:15 79 {*movsi_internal}
     (nil))
(call_insn 6 5 7 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x43]  <function_decl 77ea8f00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 4 [0x4]))) dictionary.c:15 581 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 7 6 8 2 (set (reg/f:SI 104)
        (reg:SI 0 ax)) dictionary.c:15 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:SI 104)
            (nil))))
(insn 8 7 9 2 (set (reg/f:SI 88 [ _5 ])
        (reg/f:SI 104)) dictionary.c:15 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 104)
        (nil)))
(insn 9 8 10 2 (set (reg/f:SI 105)
        (mem/f/c:SI (reg/f:SI 16 argp) [4 word+0 S4 A32])) dictionary.c:15 79 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (mem/f:SI (reg/f:SI 105) [7 word_6(D)->verb+0 S4 A32])
        (reg/f:SI 88 [ _5 ])) dictionary.c:15 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 105)
        (expr_list:REG_DEAD (reg/f:SI 88 [ _5 ])
            (nil))))
(insn 11 10 12 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (const_int 50 [0x32])) dictionary.c:16 79 {*movsi_internal}
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x43]  <function_decl 77ea8f00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 4 [0x4]))) dictionary.c:16 581 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 13 12 14 2 (set (reg/f:SI 106)
        (reg:SI 0 ax)) dictionary.c:16 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:SI 106)
            (nil))))
(insn 14 13 15 2 (set (reg/f:SI 89 [ _9 ])
        (reg/f:SI 106)) dictionary.c:16 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106)
        (nil)))
(insn 15 14 16 2 (set (reg/f:SI 107)
        (mem/f/c:SI (reg/f:SI 16 argp) [4 word+0 S4 A32])) dictionary.c:16 79 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (mem/f:SI (plus:SI (reg/f:SI 107)
                (const_int 4 [0x4])) [7 word_6(D)->infinitive+0 S4 A32])
        (reg/f:SI 89 [ _9 ])) dictionary.c:16 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 107)
        (expr_list:REG_DEAD (reg/f:SI 89 [ _9 ])
            (nil))))
(insn 17 16 18 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (const_int 50 [0x32])) dictionary.c:17 79 {*movsi_internal}
     (nil))
(call_insn 18 17 19 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x43]  <function_decl 77ea8f00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 4 [0x4]))) dictionary.c:17 581 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 19 18 20 2 (set (reg/f:SI 108)
        (reg:SI 0 ax)) dictionary.c:17 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:SI 108)
            (nil))))
(insn 20 19 21 2 (set (reg/f:SI 90 [ _12 ])
        (reg/f:SI 108)) dictionary.c:17 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 108)
        (nil)))
(insn 21 20 22 2 (set (reg/f:SI 109)
        (mem/f/c:SI (reg/f:SI 16 argp) [4 word+0 S4 A32])) dictionary.c:17 79 {*movsi_internal}
     (nil))
(insn 22 21 23 2 (set (mem/f:SI (plus:SI (reg/f:SI 109)
                (const_int 8 [0x8])) [7 word_6(D)->simple_past+0 S4 A32])
        (reg/f:SI 90 [ _12 ])) dictionary.c:17 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 109)
        (expr_list:REG_DEAD (reg/f:SI 90 [ _12 ])
            (nil))))
(insn 23 22 24 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (const_int 50 [0x32])) dictionary.c:18 79 {*movsi_internal}
     (nil))
(call_insn 24 23 25 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x43]  <function_decl 77ea8f00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 4 [0x4]))) dictionary.c:18 581 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 25 24 26 2 (set (reg/f:SI 110)
        (reg:SI 0 ax)) dictionary.c:18 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:SI 110)
            (nil))))
(insn 26 25 27 2 (set (reg/f:SI 91 [ _15 ])
        (reg/f:SI 110)) dictionary.c:18 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 110)
        (nil)))
(insn 27 26 28 2 (set (reg/f:SI 111)
        (mem/f/c:SI (reg/f:SI 16 argp) [4 word+0 S4 A32])) dictionary.c:18 79 {*movsi_internal}
     (nil))
(insn 28 27 29 2 (set (mem/f:SI (plus:SI (reg/f:SI 111)
                (const_int 12 [0xc])) [7 word_6(D)->past_participle+0 S4 A32])
        (reg/f:SI 91 [ _15 ])) dictionary.c:18 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 111)
        (expr_list:REG_DEAD (reg/f:SI 91 [ _15 ])
            (nil))))
(insn 29 28 30 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (const_int 100 [0x64])) dictionary.c:19 79 {*movsi_internal}
     (nil))
(call_insn 30 29 31 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x43]  <function_decl 77ea8f00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 4 [0x4]))) dictionary.c:19 581 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 31 30 32 2 (set (reg/f:SI 112)
        (reg:SI 0 ax)) dictionary.c:19 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:SI 112)
            (nil))))
(insn 32 31 33 2 (set (reg/f:SI 92 [ _18 ])
        (reg/f:SI 112)) dictionary.c:19 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 112)
        (nil)))
(insn 33 32 34 2 (set (reg/f:SI 113)
        (mem/f/c:SI (reg/f:SI 16 argp) [4 word+0 S4 A32])) dictionary.c:19 79 {*movsi_internal}
     (nil))
(insn 34 33 35 2 (set (mem/f:SI (plus:SI (reg/f:SI 113)
                (const_int 16 [0x10])) [7 word_6(D)->meaning+0 S4 A32])
        (reg/f:SI 92 [ _18 ])) dictionary.c:19 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 113)
        (expr_list:REG_DEAD (reg/f:SI 92 [ _18 ])
            (nil))))
(insn 35 34 36 2 (set (reg/f:SI 114)
        (mem/f/c:SI (reg/f:SI 16 argp) [4 word+0 S4 A32])) dictionary.c:21 79 {*movsi_internal}
     (nil))
(insn 36 35 37 2 (set (reg/f:SI 93 [ _20 ])
        (mem/f:SI (plus:SI (reg/f:SI 114)
                (const_int 4 [0x4])) [7 word_6(D)->infinitive+0 S4 A32])) dictionary.c:21 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 114)
        (nil)))
(insn 37 36 38 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 93 [ _20 ])
            (const_int 0 [0]))) dictionary.c:21 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 93 [ _20 ])
        (nil)))
(jump_insn 38 37 39 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) dictionary.c:21 533 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 59)
;;  succ:       7
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 94 115
(note 39 38 40 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 3 (set (reg/f:SI 115)
        (mem/f/c:SI (reg/f:SI 16 argp) [4 word+0 S4 A32])) dictionary.c:21 79 {*movsi_internal}
     (nil))
(insn 41 40 42 3 (set (reg/f:SI 94 [ _21 ])
        (mem/f:SI (plus:SI (reg/f:SI 115)
                (const_int 8 [0x8])) [7 word_6(D)->simple_past+0 S4 A32])) dictionary.c:21 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 115)
        (nil)))
(insn 42 41 43 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 94 [ _21 ])
            (const_int 0 [0]))) dictionary.c:21 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 94 [ _21 ])
        (nil)))
(jump_insn 43 42 44 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) dictionary.c:21 533 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 59)
;;  succ:       7
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 95 116
(note 44 43 45 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 4 (set (reg/f:SI 116)
        (mem/f/c:SI (reg/f:SI 16 argp) [4 word+0 S4 A32])) dictionary.c:21 79 {*movsi_internal}
     (nil))
(insn 46 45 47 4 (set (reg/f:SI 95 [ _22 ])
        (mem/f:SI (plus:SI (reg/f:SI 116)
                (const_int 12 [0xc])) [7 word_6(D)->past_participle+0 S4 A32])) dictionary.c:21 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (nil)))
(insn 47 46 48 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 95 [ _22 ])
            (const_int 0 [0]))) dictionary.c:21 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 95 [ _22 ])
        (nil)))
(jump_insn 48 47 49 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) dictionary.c:21 533 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 59)
;;  succ:       7
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 96 117
(note 49 48 50 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 5 (set (reg/f:SI 117)
        (mem/f/c:SI (reg/f:SI 16 argp) [4 word+0 S4 A32])) dictionary.c:21 79 {*movsi_internal}
     (nil))
(insn 51 50 52 5 (set (reg/f:SI 96 [ _23 ])
        (mem/f:SI (plus:SI (reg/f:SI 117)
                (const_int 16 [0x10])) [7 word_6(D)->meaning+0 S4 A32])) dictionary.c:21 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 117)
        (nil)))
(insn 52 51 53 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 96 [ _23 ])
            (const_int 0 [0]))) dictionary.c:21 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 96 [ _23 ])
        (nil)))
(jump_insn 53 52 54 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) dictionary.c:21 533 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 59)
;;  succ:       7
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 97 118
(note 54 53 55 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 6 (set (reg/f:SI 118)
        (mem/f/c:SI (reg/f:SI 16 argp) [4 word+0 S4 A32])) dictionary.c:21 79 {*movsi_internal}
     (nil))
(insn 56 55 57 6 (set (reg/f:SI 97 [ _24 ])
        (mem/f:SI (reg/f:SI 118) [7 word_6(D)->verb+0 S4 A32])) dictionary.c:21 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 118)
        (nil)))
(insn 57 56 58 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 97 [ _24 ])
            (const_int 0 [0]))) dictionary.c:21 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 97 [ _24 ])
        (nil)))
(jump_insn 58 57 59 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) dictionary.c:21 533 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 64)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3
;;              4
;;              5
;;              6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 59 58 60 7 5 "" [4 uses])
(note 60 59 61 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 111 7 (set (reg:SI 87 [ _1 ])
        (const_int 0 [0])) dictionary.c:22 79 {*movsi_internal}
     (nil))
(jump_insn 111 61 112 7 (set (pc)
        (label_ref 102)) dictionary.c:22 565 {jump}
     (nil)
 -> 102)
;;  succ:       9 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 112 111 64)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 98 99 100 101 102 119 120 121 122 123
(code_label 64 112 65 8 6 "" [1 uses])
(note 65 64 66 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 8 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC0") [flags 0x2]  <var_decl 068ef420 *LC0>)) dictionary.c:23 79 {*movsi_internal}
     (nil))
(call_insn 67 66 68 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 4 [0x4]))) dictionary.c:23 581 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 68 67 69 8 (set (reg/f:SI 119)
        (mem/f/c:SI (reg/f:SI 16 argp) [4 word+0 S4 A32])) dictionary.c:24 79 {*movsi_internal}
     (nil))
(insn 69 68 70 8 (set (reg/f:SI 98 [ _26 ])
        (mem/f:SI (reg/f:SI 119) [7 word_6(D)->verb+0 S4 A32])) dictionary.c:24 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 119)
        (nil)))
(insn 70 69 71 8 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 98 [ _26 ])) dictionary.c:24 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 98 [ _26 ])
        (nil)))
(insn 71 70 72 8 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC1") [flags 0x2]  <var_decl 068ef5d8 *LC1>)) dictionary.c:24 79 {*movsi_internal}
     (nil))
(call_insn 72 71 73 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("scanf") [flags 0x43]  <function_decl 77ed4700 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 8 [0x8]))) dictionary.c:24 581 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 73 72 74 8 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC2") [flags 0x2]  <var_decl 06915c08 *LC2>)) dictionary.c:25 79 {*movsi_internal}
     (nil))
(call_insn 74 73 75 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 4 [0x4]))) dictionary.c:25 581 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 75 74 76 8 (set (reg/f:SI 120)
        (mem/f/c:SI (reg/f:SI 16 argp) [4 word+0 S4 A32])) dictionary.c:26 79 {*movsi_internal}
     (nil))
(insn 76 75 77 8 (set (reg/f:SI 99 [ _29 ])
        (mem/f:SI (plus:SI (reg/f:SI 120)
                (const_int 4 [0x4])) [7 word_6(D)->infinitive+0 S4 A32])) dictionary.c:26 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 120)
        (nil)))
(insn 77 76 78 8 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 99 [ _29 ])) dictionary.c:26 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 99 [ _29 ])
        (nil)))
(insn 78 77 79 8 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC1") [flags 0x2]  <var_decl 068ef5d8 *LC1>)) dictionary.c:26 79 {*movsi_internal}
     (nil))
(call_insn 79 78 80 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("scanf") [flags 0x43]  <function_decl 77ed4700 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 8 [0x8]))) dictionary.c:26 581 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 80 79 81 8 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC3") [flags 0x2]  <var_decl 06915c60 *LC3>)) dictionary.c:27 79 {*movsi_internal}
     (nil))
(call_insn 81 80 82 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 4 [0x4]))) dictionary.c:27 581 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 82 81 83 8 (set (reg/f:SI 121)
        (mem/f/c:SI (reg/f:SI 16 argp) [4 word+0 S4 A32])) dictionary.c:28 79 {*movsi_internal}
     (nil))
(insn 83 82 84 8 (set (reg/f:SI 100 [ _32 ])
        (mem/f:SI (plus:SI (reg/f:SI 121)
                (const_int 8 [0x8])) [7 word_6(D)->simple_past+0 S4 A32])) dictionary.c:28 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 121)
        (nil)))
(insn 84 83 85 8 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 100 [ _32 ])) dictionary.c:28 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 100 [ _32 ])
        (nil)))
(insn 85 84 86 8 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC1") [flags 0x2]  <var_decl 068ef5d8 *LC1>)) dictionary.c:28 79 {*movsi_internal}
     (nil))
(call_insn 86 85 87 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("scanf") [flags 0x43]  <function_decl 77ed4700 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 8 [0x8]))) dictionary.c:28 581 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 87 86 88 8 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC4") [flags 0x2]  <var_decl 06915cb8 *LC4>)) dictionary.c:29 79 {*movsi_internal}
     (nil))
(call_insn 88 87 89 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 4 [0x4]))) dictionary.c:29 581 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 89 88 90 8 (set (reg/f:SI 122)
        (mem/f/c:SI (reg/f:SI 16 argp) [4 word+0 S4 A32])) dictionary.c:30 79 {*movsi_internal}
     (nil))
(insn 90 89 91 8 (set (reg/f:SI 101 [ _35 ])
        (mem/f:SI (plus:SI (reg/f:SI 122)
                (const_int 12 [0xc])) [7 word_6(D)->past_participle+0 S4 A32])) dictionary.c:30 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 122)
        (nil)))
(insn 91 90 92 8 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 101 [ _35 ])) dictionary.c:30 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 101 [ _35 ])
        (nil)))
(insn 92 91 93 8 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC1") [flags 0x2]  <var_decl 068ef5d8 *LC1>)) dictionary.c:30 79 {*movsi_internal}
     (nil))
(call_insn 93 92 94 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("scanf") [flags 0x43]  <function_decl 77ed4700 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 8 [0x8]))) dictionary.c:30 581 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 94 93 95 8 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC5") [flags 0x2]  <var_decl 06915d10 *LC5>)) dictionary.c:31 79 {*movsi_internal}
     (nil))
(call_insn 95 94 96 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 4 [0x4]))) dictionary.c:31 581 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 96 95 97 8 (set (reg/f:SI 123)
        (mem/f/c:SI (reg/f:SI 16 argp) [4 word+0 S4 A32])) dictionary.c:32 79 {*movsi_internal}
     (nil))
(insn 97 96 98 8 (set (reg/f:SI 102 [ _38 ])
        (mem/f:SI (plus:SI (reg/f:SI 123)
                (const_int 16 [0x10])) [7 word_6(D)->meaning+0 S4 A32])) dictionary.c:32 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 123)
        (nil)))
(insn 98 97 99 8 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 102 [ _38 ])) dictionary.c:32 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 102 [ _38 ])
        (nil)))
(insn 99 98 100 8 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC6") [flags 0x2]  <var_decl 06915d68 *LC6>)) dictionary.c:32 79 {*movsi_internal}
     (nil))
(call_insn 100 99 101 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("scanf") [flags 0x43]  <function_decl 77ed4700 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 8 [0x8]))) dictionary.c:32 581 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 101 100 102 8 (set (reg:SI 87 [ _1 ])
        (const_int 1 [0x1])) dictionary.c:34 79 {*movsi_internal}
     (nil))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              7 [100,0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 103
(code_label 102 101 103 9 7 "" [1 uses])
(note 103 102 104 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 108 9 (set (reg:SI 103 [ <retval> ])
        (reg:SI 87 [ _1 ])) 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ _1 ])
        (nil)))
(insn 108 104 109 9 (set (reg/i:SI 0 ax)
        (reg:SI 103 [ <retval> ])) dictionary.c:35 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 103 [ <retval> ])
        (nil)))
(insn 109 108 0 9 (use (reg/i:SI 0 ax)) dictionary.c:35 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function InsertWord (InsertWord, funcdef_no=20, decl_uid=2600, cgraph_uid=20, symbol_order=20)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 10 (    1)
Building IRA IR
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 53.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r95,l0) best AREG, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a2(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a3(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a4(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a5(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a6(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a7(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a8(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a9(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a10(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a11(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a12(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a13(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a14(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a15(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8

   Insn 62(l0): point = 0
   Insn 61(l0): point = 2
   Insn 57(l0): point = 4
   Insn 54(l0): point = 7
   Insn 53(l0): point = 9
   Insn 52(l0): point = 11
   Insn 51(l0): point = 13
   Insn 50(l0): point = 15
   Insn 49(l0): point = 17
   Insn 48(l0): point = 19
   Insn 47(l0): point = 21
   Insn 68(l0): point = 24
   Insn 42(l0): point = 26
   Insn 41(l0): point = 28
   Insn 40(l0): point = 30
   Insn 39(l0): point = 32
   Insn 38(l0): point = 34
   Insn 37(l0): point = 36
   Insn 36(l0): point = 38
   Insn 35(l0): point = 40
   Insn 34(l0): point = 42
   Insn 66(l0): point = 45
   Insn 29(l0): point = 47
   Insn 27(l0): point = 50
   Insn 26(l0): point = 52
   Insn 25(l0): point = 54
   Insn 24(l0): point = 56
   Insn 23(l0): point = 58
   Insn 22(l0): point = 60
   Insn 64(l0): point = 63
   Insn 17(l0): point = 65
   Insn 15(l0): point = 68
   Insn 14(l0): point = 70
   Insn 13(l0): point = 72
   Insn 12(l0): point = 74
   Insn 11(l0): point = 76
   Insn 10(l0): point = 78
   Insn 8(l0): point = 81
   Insn 7(l0): point = 83
   Insn 6(l0): point = 85
   Insn 5(l0): point = 87
 a0(r92): [3..4]
 a1(r87): [63..65] [45..47] [24..26] [5..7]
 a2(r91): [12..17]
 a3(r102): [14..15]
 a4(r90): [18..19]
 a5(r101): [20..21]
 a6(r99): [29..32]
 a7(r100): [29..30]
 a8(r98): [35..36]
 a9(r96): [39..42]
 a10(r97): [39..40]
 a11(r95): [55..56]
 a12(r89): [71..72]
 a13(r94): [77..78]
 a14(r88): [84..85]
 a15(r93): [86..87]
Compressing live ranges: from 90 to 32 - 35%
Ranges after the compression:
 a0(r92): [0..1]
 a1(r87): [22..23] [18..19] [10..11] [2..3]
 a2(r91): [4..5]
 a3(r102): [4..5]
 a4(r90): [6..7]
 a5(r101): [8..9]
 a6(r99): [12..13]
 a7(r100): [12..13]
 a8(r98): [14..15]
 a9(r96): [16..17]
 a10(r97): [16..17]
 a11(r95): [20..21]
 a12(r89): [24..25]
 a13(r94): [26..27]
 a14(r88): [28..29]
 a15(r93): [30..31]
  regions=1, blocks=10, points=32
    allocnos=16 (big 0), copies=0, conflicts=0, ranges=19
Disposition:
    1:r87  l0     0   14:r88  l0     0   12:r89  l0     0    4:r90  l0     0
    2:r91  l0     1    0:r92  l0     0   15:r93  l0     0   13:r94  l0     0
   11:r95  l0     0    9:r96  l0     0   10:r97  l0     1    8:r98  l0     0
    6:r99  l0     0    7:r100 l0     1    5:r101 l0     0    3:r102 l0     0
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


InsertWord

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={5d,5u} r1={4d} r2={4d} r6={1d,9u} r7={1d,20u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,14u} r17={6d,3u} r18={3d} r19={3d} r20={1d,14u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r87={4d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} 
;;    total ref usage 333{252d,81u,0e} in 41{38 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 93
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 93)
        (mem/f/c:SI (reg/f:SI 16 argp) [8 node+0 S4 A32])) dictionary.c:39 79 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 88 [ _5 ])
        (mem/f:SI (reg/f:SI 93) [3 *node_4(D)+0 S4 A32])) dictionary.c:39 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 93)
        (nil)))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 88 [ _5 ])
            (const_int 0 [0]))) dictionary.c:39 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 88 [ _5 ])
        (nil)))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) dictionary.c:39 533 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 45)
;;  succ:       3 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 94
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:SI 94)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [4 wrd+0 S4 A32])) dictionary.c:40 79 {*movsi_internal}
     (nil))
(insn 11 10 12 3 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 94)) dictionary.c:40 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 94)
        (nil)))
(call_insn 12 11 13 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("CreateWord") [flags 0x3]  <function_decl 77ec9c80 CreateWord>) [0 CreateWord S1 A8])
            (const_int 4 [0x4]))) dictionary.c:40 581 {*call_value}
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 13 12 14 3 (set (reg:SI 89 [ _8 ])
        (reg:SI 0 ax)) dictionary.c:40 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 14 13 15 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _8 ])
            (const_int 0 [0]))) dictionary.c:40 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 89 [ _8 ])
        (nil)))
(jump_insn 15 14 16 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) dictionary.c:40 533 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 20)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 64 4 (set (reg:SI 87 [ _1 ])
        (const_int 0 [0])) dictionary.c:41 79 {*movsi_internal}
     (nil))
(jump_insn 64 17 65 4 (set (pc)
        (label_ref 55)) dictionary.c:41 565 {jump}
     (nil)
 -> 55)
;;  succ:       9 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 65 64 20)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 95
(code_label 20 65 21 5 10 "" [1 uses])
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (const_int 8 [0x8])) dictionary.c:42 79 {*movsi_internal}
     (nil))
(call_insn 23 22 24 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x43]  <function_decl 77ea8f00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 4 [0x4]))) dictionary.c:42 581 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 24 23 25 5 (set (reg/f:SI 95)
        (reg:SI 0 ax)) dictionary.c:42 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:SI 95)
            (nil))))
(insn 25 24 26 5 (set (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 new_node+0 S4 A32])
        (reg/f:SI 95)) dictionary.c:42 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 95)
        (nil)))
(insn 26 25 27 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [3 new_node+0 S4 A32])
            (const_int 0 [0]))) dictionary.c:43 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 27 26 28 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) dictionary.c:43 533 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 32)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 66 6 (set (reg:SI 87 [ _1 ])
        (const_int 0 [0])) dictionary.c:43 79 {*movsi_internal}
     (nil))
(jump_insn 66 29 67 6 (set (pc)
        (label_ref 55)) dictionary.c:43 565 {jump}
     (nil)
 -> 55)
;;  succ:       9 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 67 66 32)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 96 97 98 99 100
(code_label 32 67 33 7 12 "" [1 uses])
(note 33 32 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 7 (set (reg/f:SI 96)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 new_node+0 S4 A32])) dictionary.c:45 79 {*movsi_internal}
     (nil))
(insn 35 34 36 7 (set (reg/f:SI 97)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [4 wrd+0 S4 A32])) dictionary.c:45 79 {*movsi_internal}
     (nil))
(insn 36 35 37 7 (set (mem/f:SI (plus:SI (reg/f:SI 96)
                (const_int 4 [0x4])) [4 new_node_11->info+0 S4 A32])
        (reg/f:SI 97)) dictionary.c:45 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 97)
        (expr_list:REG_DEAD (reg/f:SI 96)
            (nil))))
(insn 37 36 38 7 (set (reg/f:SI 98)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 new_node+0 S4 A32])) dictionary.c:46 79 {*movsi_internal}
     (nil))
(insn 38 37 39 7 (set (mem/f:SI (reg/f:SI 98) [3 new_node_11->prox+0 S4 A32])
        (const_int 0 [0])) dictionary.c:46 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 98)
        (nil)))
(insn 39 38 40 7 (set (reg/f:SI 99)
        (mem/f/c:SI (reg/f:SI 16 argp) [8 node+0 S4 A32])) dictionary.c:47 79 {*movsi_internal}
     (nil))
(insn 40 39 41 7 (set (reg/f:SI 100)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 new_node+0 S4 A32])) dictionary.c:47 79 {*movsi_internal}
     (nil))
(insn 41 40 42 7 (set (mem/f:SI (reg/f:SI 99) [3 *node_4(D)+0 S4 A32])
        (reg/f:SI 100)) dictionary.c:47 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 100)
        (expr_list:REG_DEAD (reg/f:SI 99)
            (nil))))
(insn 42 41 68 7 (set (reg:SI 87 [ _1 ])
        (const_int 1 [0x1])) dictionary.c:48 79 {*movsi_internal}
     (nil))
(jump_insn 68 42 69 7 (set (pc)
        (label_ref 55)) dictionary.c:48 565 {jump}
     (nil)
 -> 55)
;;  succ:       9 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 69 68 45)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 90 91 101 102
(code_label 45 69 46 8 9 "" [1 uses])
(note 46 45 47 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 8 (set (reg/f:SI 101)
        (mem/f/c:SI (reg/f:SI 16 argp) [8 node+0 S4 A32])) dictionary.c:50 79 {*movsi_internal}
     (nil))
(insn 48 47 49 8 (set (reg/f:SI 90 [ _17 ])
        (mem/f:SI (reg/f:SI 101) [3 *node_4(D)+0 S4 A32])) dictionary.c:50 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 101)
        (nil)))
(insn 49 48 50 8 (set (reg/f:SI 91 [ _18 ])
        (reg/f:SI 90 [ _17 ])) dictionary.c:50 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 90 [ _17 ])
        (nil)))
(insn 50 49 51 8 (set (reg/f:SI 102)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [4 wrd+0 S4 A32])) dictionary.c:50 79 {*movsi_internal}
     (nil))
(insn 51 50 52 8 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 102)) dictionary.c:50 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 102)
        (nil)))
(insn 52 51 53 8 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 91 [ _18 ])) dictionary.c:50 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91 [ _18 ])
        (nil)))
(call_insn 53 52 54 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("InsertWord") [flags 0x3]  <function_decl 77ec9d00 InsertWord>) [0 InsertWord S1 A8])
            (const_int 8 [0x8]))) dictionary.c:50 581 {*call_value}
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 54 53 55 8 (set (reg:SI 87 [ _1 ])
        (reg:SI 0 ax)) dictionary.c:50 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              4 [100,0%] 
;;              6 [100,0%] 
;;              7 [100,0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 92
(code_label 55 54 56 9 11 "" [3 uses])
(note 56 55 57 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 61 9 (set (reg:SI 92 [ <retval> ])
        (reg:SI 87 [ _1 ])) 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ _1 ])
        (nil)))
(insn 61 57 62 9 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) dictionary.c:51 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92 [ <retval> ])
        (nil)))
(insn 62 61 0 9 (use (reg/i:SI 0 ax)) dictionary.c:51 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function InsertDicionary (InsertDicionary, funcdef_no=21, decl_uid=2603, cgraph_uid=21, symbol_order=21)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 9.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8

   Insn 18(l0): point = 0
   Insn 17(l0): point = 2
   Insn 13(l0): point = 4
   Insn 10(l0): point = 6
   Insn 9(l0): point = 8
   Insn 8(l0): point = 10
   Insn 7(l0): point = 12
   Insn 6(l0): point = 14
   Insn 5(l0): point = 16
 a0(r89): [3..4]
 a1(r88): [5..6]
 a2(r87): [11..16]
 a3(r90): [13..14]
Compressing live ranges: from 19 to 6 - 31%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r88): [2..3]
 a2(r87): [4..5]
 a3(r90): [4..5]
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    2:r87  l0     0    1:r88  l0     0    0:r89  l0     0    3:r90  l0     1
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


InsertDicionary

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 6 [bp] 7 [sp]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r6={1d,2u} r7={1d,7u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 107{86d,21u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 87 [ _2 ])
        (mem/f/c:SI (reg/f:SI 16 argp) [1 d+0 S4 A32])) dictionary.c:55 79 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 90)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [4 w+0 S4 A32])) dictionary.c:55 79 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 90)) dictionary.c:55 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 90)
        (nil)))
(insn 8 7 9 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 87 [ _2 ])) dictionary.c:55 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 87 [ _2 ])
        (nil)))
(call_insn 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("InsertWord") [flags 0x3]  <function_decl 77ec9d00 InsertWord>) [0 InsertWord S1 A8])
            (const_int 8 [0x8]))) dictionary.c:55 581 {*call_value}
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 10 9 13 2 (set (reg:SI 88 [ _6 ])
        (reg:SI 0 ax)) dictionary.c:55 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 13 10 17 2 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ _6 ])) dictionary.c:55 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88 [ _6 ])
        (nil)))
(insn 17 13 18 2 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) dictionary.c:56 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89 [ <retval> ])
        (nil)))
(insn 18 17 0 2 (use (reg/i:SI 0 ax)) dictionary.c:56 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function FreeVerbs (FreeVerbs, funcdef_no=22, decl_uid=2605, cgraph_uid=22, symbol_order=22)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 20.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 35.
verify found no changes in insn with uid = 40.
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 47.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r99,l0) best AREG, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a2(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a3(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a4(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a5(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a6(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a7(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a8(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a9(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a10(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a11(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a12(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a13(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a14(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a15(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a16(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a17(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a18(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a19(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a20(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a21(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a22(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a23(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a24(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a25(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8

   Insn 64(l0): point = 0
   Insn 63(l0): point = 2
   Insn 59(l0): point = 4
   Insn 56(l0): point = 6
   Insn 55(l0): point = 8
   Insn 54(l0): point = 10
   Insn 47(l0): point = 13
   Insn 46(l0): point = 15
   Insn 45(l0): point = 17
   Insn 44(l0): point = 19
   Insn 43(l0): point = 21
   Insn 42(l0): point = 23
   Insn 41(l0): point = 25
   Insn 40(l0): point = 27
   Insn 39(l0): point = 29
   Insn 38(l0): point = 31
   Insn 37(l0): point = 33
   Insn 36(l0): point = 35
   Insn 35(l0): point = 37
   Insn 34(l0): point = 39
   Insn 33(l0): point = 41
   Insn 32(l0): point = 43
   Insn 31(l0): point = 45
   Insn 30(l0): point = 47
   Insn 29(l0): point = 49
   Insn 28(l0): point = 51
   Insn 27(l0): point = 53
   Insn 26(l0): point = 55
   Insn 25(l0): point = 57
   Insn 24(l0): point = 59
   Insn 23(l0): point = 61
   Insn 22(l0): point = 63
   Insn 21(l0): point = 65
   Insn 20(l0): point = 67
   Insn 19(l0): point = 69
   Insn 18(l0): point = 71
   Insn 17(l0): point = 73
   Insn 16(l0): point = 75
   Insn 15(l0): point = 77
   Insn 14(l0): point = 79
   Insn 13(l0): point = 81
   Insn 12(l0): point = 83
   Insn 11(l0): point = 85
   Insn 52(l0): point = 88
   Insn 51(l0): point = 90
   Insn 66(l0): point = 93
   Insn 7(l0): point = 95
   Insn 6(l0): point = 97
   Insn 5(l0): point = 99
 a0(r99): [3..4]
 a1(r98): [5..6]
 a2(r112): [9..10]
 a3(r111): [16..17]
 a4(r97): [22..23]
 a5(r110): [24..25]
 a6(r96): [30..31]
 a7(r95): [32..33]
 a8(r109): [34..35]
 a9(r94): [40..41]
 a10(r93): [42..43]
 a11(r108): [44..45]
 a12(r92): [50..51]
 a13(r91): [52..53]
 a14(r107): [54..55]
 a15(r90): [60..61]
 a16(r89): [62..63]
 a17(r106): [64..65]
 a18(r88): [70..71]
 a19(r87): [72..73]
 a20(r105): [74..75]
 a21(r104): [78..79]
 a22(r103): [80..81]
 a23(r102): [84..85]
 a24(r101): [96..97]
 a25(r100): [98..99]
Compressing live ranges: from 102 to 52 - 50%
Ranges after the compression:
 a0(r99): [0..1]
 a1(r98): [2..3]
 a2(r112): [4..5]
 a3(r111): [6..7]
 a4(r97): [8..9]
 a5(r110): [10..11]
 a6(r96): [12..13]
 a7(r95): [14..15]
 a8(r109): [16..17]
 a9(r94): [18..19]
 a10(r93): [20..21]
 a11(r108): [22..23]
 a12(r92): [24..25]
 a13(r91): [26..27]
 a14(r107): [28..29]
 a15(r90): [30..31]
 a16(r89): [32..33]
 a17(r106): [34..35]
 a18(r88): [36..37]
 a19(r87): [38..39]
 a20(r105): [40..41]
 a21(r104): [42..43]
 a22(r103): [44..45]
 a23(r102): [46..47]
 a24(r101): [48..49]
 a25(r100): [50..51]
  regions=1, blocks=6, points=52
    allocnos=26 (big 0), copies=0, conflicts=0, ranges=26
Disposition:
   19:r87  l0     0   18:r88  l0     0   16:r89  l0     0   15:r90  l0     0
   13:r91  l0     0   12:r92  l0     0   10:r93  l0     0    9:r94  l0     0
    7:r95  l0     0    6:r96  l0     0    4:r97  l0     0    1:r98  l0     0
    0:r99  l0     0   25:r100 l0     0   24:r101 l0     0   23:r102 l0     0
   22:r103 l0     0   21:r104 l0     0   20:r105 l0     0   17:r106 l0     0
   14:r107 l0     0   11:r108 l0     0    8:r109 l0     0    5:r110 l0     0
    3:r111 l0     0    2:r112 l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


FreeVerbs

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={9d,2u} r1={8d} r2={8d} r6={1d,5u} r7={1d,26u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r16={1d,6u} r17={8d,1u} r18={7d} r19={7d} r20={1d,18u} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} 
;;    total ref usage 637{553d,84u,0e} in 49{42 regular + 7 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 100 101
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 100)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 dictionary+0 S4 A32])) dictionary.c:68 79 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 101)
        (mem/f:SI (reg/f:SI 100) [3 dictionary_4(D)->Head+0 S4 A32])) dictionary.c:68 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 100)
        (nil)))
(insn 7 6 66 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])
        (reg/f:SI 101)) dictionary.c:68 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 101)
        (nil)))
(jump_insn 66 7 67 2 (set (pc)
        (label_ref 48)) dictionary.c:69 565 {jump}
     (nil)
 -> 48)
;;  succ:       4 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 67 66 50)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 96 97 102 103 104 105 106 107 108 109 110 111
(code_label 50 67 10 3 17 "" [1 uses])
(note 10 50 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:SI 102)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])) dictionary.c:70 79 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 q+0 S4 A32])
        (reg/f:SI 102)) dictionary.c:70 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 102)
        (nil)))
(insn 13 12 14 3 (set (reg/f:SI 103)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])) dictionary.c:71 79 {*movsi_internal}
     (nil))
(insn 14 13 15 3 (set (reg/f:SI 104)
        (mem/f:SI (reg/f:SI 103) [3 p_1->prox+0 S4 A32])) dictionary.c:71 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 103)
        (nil)))
(insn 15 14 16 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])
        (reg/f:SI 104)) dictionary.c:71 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 104)
        (nil)))
(insn 16 15 17 3 (set (reg/f:SI 105)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 q+0 S4 A32])) dictionary.c:73 79 {*movsi_internal}
     (nil))
(insn 17 16 18 3 (set (reg/f:SI 87 [ _8 ])
        (mem/f:SI (plus:SI (reg/f:SI 105)
                (const_int 4 [0x4])) [4 q_6->info+0 S4 A32])) dictionary.c:73 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 105)
        (nil)))
(insn 18 17 19 3 (set (reg/f:SI 88 [ _9 ])
        (mem/f:SI (plus:SI (reg/f:SI 87 [ _8 ])
                (const_int 4 [0x4])) [7 _8->infinitive+0 S4 A32])) dictionary.c:73 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 87 [ _8 ])
        (nil)))
(insn 19 18 20 3 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 88 [ _9 ])) dictionary.c:73 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 88 [ _9 ])
        (nil)))
(call_insn 20 19 21 3 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:73 570 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 21 20 22 3 (set (reg/f:SI 106)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 q+0 S4 A32])) dictionary.c:74 79 {*movsi_internal}
     (nil))
(insn 22 21 23 3 (set (reg/f:SI 89 [ _11 ])
        (mem/f:SI (plus:SI (reg/f:SI 106)
                (const_int 4 [0x4])) [4 q_6->info+0 S4 A32])) dictionary.c:74 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106)
        (nil)))
(insn 23 22 24 3 (set (reg/f:SI 90 [ _12 ])
        (mem/f:SI (plus:SI (reg/f:SI 89 [ _11 ])
                (const_int 16 [0x10])) [7 _11->meaning+0 S4 A32])) dictionary.c:74 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 89 [ _11 ])
        (nil)))
(insn 24 23 25 3 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 90 [ _12 ])) dictionary.c:74 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 90 [ _12 ])
        (nil)))
(call_insn 25 24 26 3 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:74 570 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 26 25 27 3 (set (reg/f:SI 107)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 q+0 S4 A32])) dictionary.c:75 79 {*movsi_internal}
     (nil))
(insn 27 26 28 3 (set (reg/f:SI 91 [ _14 ])
        (mem/f:SI (plus:SI (reg/f:SI 107)
                (const_int 4 [0x4])) [4 q_6->info+0 S4 A32])) dictionary.c:75 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 107)
        (nil)))
(insn 28 27 29 3 (set (reg/f:SI 92 [ _15 ])
        (mem/f:SI (plus:SI (reg/f:SI 91 [ _14 ])
                (const_int 12 [0xc])) [7 _14->past_participle+0 S4 A32])) dictionary.c:75 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91 [ _14 ])
        (nil)))
(insn 29 28 30 3 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 92 [ _15 ])) dictionary.c:75 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 92 [ _15 ])
        (nil)))
(call_insn 30 29 31 3 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:75 570 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 31 30 32 3 (set (reg/f:SI 108)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 q+0 S4 A32])) dictionary.c:76 79 {*movsi_internal}
     (nil))
(insn 32 31 33 3 (set (reg/f:SI 93 [ _17 ])
        (mem/f:SI (plus:SI (reg/f:SI 108)
                (const_int 4 [0x4])) [4 q_6->info+0 S4 A32])) dictionary.c:76 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 108)
        (nil)))
(insn 33 32 34 3 (set (reg/f:SI 94 [ _18 ])
        (mem/f:SI (plus:SI (reg/f:SI 93 [ _17 ])
                (const_int 8 [0x8])) [7 _17->simple_past+0 S4 A32])) dictionary.c:76 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 93 [ _17 ])
        (nil)))
(insn 34 33 35 3 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 94 [ _18 ])) dictionary.c:76 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 94 [ _18 ])
        (nil)))
(call_insn 35 34 36 3 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:76 570 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 36 35 37 3 (set (reg/f:SI 109)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 q+0 S4 A32])) dictionary.c:77 79 {*movsi_internal}
     (nil))
(insn 37 36 38 3 (set (reg/f:SI 95 [ _20 ])
        (mem/f:SI (plus:SI (reg/f:SI 109)
                (const_int 4 [0x4])) [4 q_6->info+0 S4 A32])) dictionary.c:77 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 109)
        (nil)))
(insn 38 37 39 3 (set (reg/f:SI 96 [ _21 ])
        (mem/f:SI (reg/f:SI 95 [ _20 ]) [7 _20->verb+0 S4 A32])) dictionary.c:77 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 95 [ _20 ])
        (nil)))
(insn 39 38 40 3 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 96 [ _21 ])) dictionary.c:77 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 96 [ _21 ])
        (nil)))
(call_insn 40 39 41 3 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:77 570 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 41 40 42 3 (set (reg/f:SI 110)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 q+0 S4 A32])) dictionary.c:78 79 {*movsi_internal}
     (nil))
(insn 42 41 43 3 (set (reg/f:SI 97 [ _23 ])
        (mem/f:SI (plus:SI (reg/f:SI 110)
                (const_int 4 [0x4])) [4 q_6->info+0 S4 A32])) dictionary.c:78 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 110)
        (nil)))
(insn 43 42 44 3 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 97 [ _23 ])) dictionary.c:78 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 97 [ _23 ])
        (nil)))
(call_insn 44 43 45 3 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:78 570 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 45 44 46 3 (set (reg/f:SI 111)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 q+0 S4 A32])) dictionary.c:79 79 {*movsi_internal}
     (nil))
(insn 46 45 47 3 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 111)) dictionary.c:79 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 111)
        (nil)))
(call_insn 47 46 48 3 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:79 570 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100,0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 48 47 49 4 16 "" [1 uses])
(note 49 48 51 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 51 49 52 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])
            (const_int 0 [0]))) dictionary.c:69 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 52 51 53 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) dictionary.c:69 533 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 50)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 98 99 112
(note 53 52 54 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 5 (set (reg/f:SI 112)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 dictionary+0 S4 A32])) dictionary.c:82 79 {*movsi_internal}
     (nil))
(insn 55 54 56 5 (set (mem/f:SI (reg/f:SI 112) [3 dictionary_4(D)->Head+0 S4 A32])
        (const_int 0 [0])) dictionary.c:82 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 112)
        (nil)))
(insn 56 55 59 5 (set (reg:SI 98 [ _27 ])
        (const_int 1 [0x1])) dictionary.c:84 79 {*movsi_internal}
     (nil))
(insn 59 56 63 5 (set (reg:SI 99 [ <retval> ])
        (reg:SI 98 [ _27 ])) dictionary.c:84 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 98 [ _27 ])
        (nil)))
(insn 63 59 64 5 (set (reg/i:SI 0 ax)
        (reg:SI 99 [ <retval> ])) dictionary.c:85 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 99 [ <retval> ])
        (nil)))
(insn 64 63 0 5 (use (reg/i:SI 0 ax)) dictionary.c:85 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function Show (Show, funcdef_no=23, decl_uid=2607, cgraph_uid=23, symbol_order=23)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 10 count 9 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 35.
verify found no changes in insn with uid = 41.
verify found no changes in insn with uid = 47.
verify found no changes in insn with uid = 53.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r100,l0) best AREG, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a2(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a3(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a4(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a5(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a6(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a7(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a8(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a9(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a10(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a11(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a12(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a13(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a14(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a15(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a16(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a17(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a18(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a19(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a20(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a21(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a22(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a23(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8

   Insn 74(l0): point = 0
   Insn 73(l0): point = 2
   Insn 64(l0): point = 5
   Insn 63(l0): point = 7
   Insn 56(l0): point = 10
   Insn 55(l0): point = 12
   Insn 54(l0): point = 14
   Insn 53(l0): point = 16
   Insn 52(l0): point = 18
   Insn 51(l0): point = 20
   Insn 50(l0): point = 22
   Insn 49(l0): point = 24
   Insn 48(l0): point = 26
   Insn 47(l0): point = 28
   Insn 46(l0): point = 30
   Insn 45(l0): point = 32
   Insn 44(l0): point = 34
   Insn 43(l0): point = 36
   Insn 42(l0): point = 38
   Insn 41(l0): point = 40
   Insn 40(l0): point = 42
   Insn 39(l0): point = 44
   Insn 38(l0): point = 46
   Insn 37(l0): point = 48
   Insn 36(l0): point = 50
   Insn 35(l0): point = 52
   Insn 34(l0): point = 54
   Insn 33(l0): point = 56
   Insn 32(l0): point = 58
   Insn 31(l0): point = 60
   Insn 30(l0): point = 62
   Insn 29(l0): point = 64
   Insn 28(l0): point = 66
   Insn 27(l0): point = 68
   Insn 26(l0): point = 70
   Insn 25(l0): point = 72
   Insn 24(l0): point = 74
   Insn 61(l0): point = 77
   Insn 60(l0): point = 79
   Insn 78(l0): point = 82
   Insn 20(l0): point = 84
   Insn 19(l0): point = 86
   Insn 18(l0): point = 88
   Insn 76(l0): point = 91
   Insn 69(l0): point = 93
   Insn 13(l0): point = 95
   Insn 11(l0): point = 98
   Insn 10(l0): point = 100
   Insn 9(l0): point = 102
   Insn 8(l0): point = 104
   Insn 7(l0): point = 106
   Insn 6(l0): point = 108
   Insn 5(l0): point = 110
 a0(r100): [91..93] [3..5]
 a1(r110): [11..12]
 a2(r109): [13..14]
 a3(r98): [21..22]
 a4(r97): [23..24]
 a5(r108): [25..26]
 a6(r96): [33..34]
 a7(r95): [35..36]
 a8(r107): [37..38]
 a9(r94): [45..46]
 a10(r93): [47..48]
 a11(r106): [49..50]
 a12(r92): [57..58]
 a13(r91): [59..60]
 a14(r105): [61..62]
 a15(r90): [69..70]
 a16(r89): [71..72]
 a17(r104): [73..74]
 a18(r103): [85..86]
 a19(r102): [87..88]
 a20(r99): [94..95]
 a21(r88): [101..102]
 a22(r87): [107..108]
 a23(r101): [109..110]
Compressing live ranges: from 113 to 50 - 44%
Ranges after the compression:
 a0(r100): [40..41] [0..1]
 a1(r110): [2..3]
 a2(r109): [4..5]
 a3(r98): [6..7]
 a4(r97): [8..9]
 a5(r108): [10..11]
 a6(r96): [12..13]
 a7(r95): [14..15]
 a8(r107): [16..17]
 a9(r94): [18..19]
 a10(r93): [20..21]
 a11(r106): [22..23]
 a12(r92): [24..25]
 a13(r91): [26..27]
 a14(r105): [28..29]
 a15(r90): [30..31]
 a16(r89): [32..33]
 a17(r104): [34..35]
 a18(r103): [36..37]
 a19(r102): [38..39]
 a20(r99): [42..43]
 a21(r88): [44..45]
 a22(r87): [46..47]
 a23(r101): [48..49]
  regions=1, blocks=9, points=50
    allocnos=24 (big 0), copies=0, conflicts=0, ranges=25
Disposition:
   22:r87  l0     0   21:r88  l0     0   16:r89  l0     0   15:r90  l0     0
   13:r91  l0     0   12:r92  l0     0   10:r93  l0     0    9:r94  l0     0
    7:r95  l0     0    6:r96  l0     0    4:r97  l0     0    3:r98  l0     0
   20:r99  l0     0    0:r100 l0     0   23:r101 l0     0   19:r102 l0     0
   18:r103 l0     0   17:r104 l0     0   14:r105 l0     0   11:r106 l0     0
    8:r107 l0     0    5:r108 l0     0    2:r109 l0     0    1:r110 l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


Show

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={9d,3u} r1={7d} r2={7d} r6={1d,8u} r7={1d,36u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,9u} r17={8d,2u} r18={6d} r19={6d} r20={1d,17u} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={2d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} 
;;    total ref usage 579{480d,99u,0e} in 53{47 regular + 6 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 101
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 101)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 d+0 S4 A32])) dictionary.c:88 79 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 87 [ _5 ])
        (mem/f:SI (reg/f:SI 101) [3 d_4(D)->Head+0 S4 A32])) dictionary.c:88 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 101)
        (nil)))
(insn 7 6 8 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 87 [ _5 ])) dictionary.c:88 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 87 [ _5 ])
        (nil)))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("Empty") [flags 0x3]  <function_decl 77eb6780 Empty>) [0 Empty S1 A8])
            (const_int 4 [0x4]))) dictionary.c:88 581 {*call_value}
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 9 8 10 2 (set (reg:SI 88 [ _7 ])
        (reg:SI 0 ax)) dictionary.c:88 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ _7 ])
            (const_int 0 [0]))) dictionary.c:88 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 88 [ _7 ])
        (nil)))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 16)
            (pc))) dictionary.c:88 533 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 16)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 99 100
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 69 3 (set (reg:SI 99 [ _25 ])
        (const_int 0 [0])) dictionary.c:89 79 {*movsi_internal}
     (nil))
(insn 69 13 76 3 (set (reg:SI 100 [ <retval> ])
        (reg:SI 99 [ _25 ])) dictionary.c:89 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 99 [ _25 ])
        (nil)))
(jump_insn 76 69 77 3 (set (pc)
        (label_ref 72)) dictionary.c:89 565 {jump}
     (nil)
 -> 72)
;;  succ:       8 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100

(barrier 77 76 16)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 102 103
(code_label 16 77 17 4 20 "" [1 uses])
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg/f:SI 102)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 d+0 S4 A32])) dictionary.c:92 79 {*movsi_internal}
     (nil))
(insn 19 18 20 4 (set (reg/f:SI 103)
        (mem/f:SI (reg/f:SI 102) [3 d_4(D)->Head+0 S4 A32])) dictionary.c:92 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 102)
        (nil)))
(insn 20 19 78 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])
        (reg/f:SI 103)) dictionary.c:92 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 103)
        (nil)))
(jump_insn 78 20 79 4 (set (pc)
        (label_ref 57)) dictionary.c:92 565 {jump}
     (nil)
 -> 57)
;;  succ:       6 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 79 78 59)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 90 91 92 93 94 95 96 97 98 104 105 106 107 108 109 110
(code_label 59 79 23 5 23 "" [1 uses])
(note 23 59 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg/f:SI 104)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])) dictionary.c:93 79 {*movsi_internal}
     (nil))
(insn 25 24 26 5 (set (reg/f:SI 89 [ _9 ])
        (mem/f:SI (plus:SI (reg/f:SI 104)
                (const_int 4 [0x4])) [4 p_1->info+0 S4 A32])) dictionary.c:93 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 104)
        (nil)))
(insn 26 25 27 5 (set (reg/f:SI 90 [ _10 ])
        (mem/f:SI (reg/f:SI 89 [ _9 ]) [7 _9->verb+0 S4 A32])) dictionary.c:93 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 89 [ _9 ])
        (nil)))
(insn 27 26 28 5 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 90 [ _10 ])) dictionary.c:93 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 90 [ _10 ])
        (nil)))
(insn 28 27 29 5 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC7") [flags 0x2]  <var_decl 068efe70 *LC7>)) dictionary.c:93 79 {*movsi_internal}
     (nil))
(call_insn 29 28 30 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) dictionary.c:93 581 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 30 29 31 5 (set (reg/f:SI 105)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])) dictionary.c:94 79 {*movsi_internal}
     (nil))
(insn 31 30 32 5 (set (reg/f:SI 91 [ _12 ])
        (mem/f:SI (plus:SI (reg/f:SI 105)
                (const_int 4 [0x4])) [4 p_1->info+0 S4 A32])) dictionary.c:94 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 105)
        (nil)))
(insn 32 31 33 5 (set (reg/f:SI 92 [ _13 ])
        (mem/f:SI (plus:SI (reg/f:SI 91 [ _12 ])
                (const_int 4 [0x4])) [7 _12->infinitive+0 S4 A32])) dictionary.c:94 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91 [ _12 ])
        (nil)))
(insn 33 32 34 5 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 92 [ _13 ])) dictionary.c:94 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 92 [ _13 ])
        (nil)))
(insn 34 33 35 5 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC8") [flags 0x2]  <var_decl 06915dc0 *LC8>)) dictionary.c:94 79 {*movsi_internal}
     (nil))
(call_insn 35 34 36 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) dictionary.c:94 581 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 36 35 37 5 (set (reg/f:SI 106)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])) dictionary.c:95 79 {*movsi_internal}
     (nil))
(insn 37 36 38 5 (set (reg/f:SI 93 [ _15 ])
        (mem/f:SI (plus:SI (reg/f:SI 106)
                (const_int 4 [0x4])) [4 p_1->info+0 S4 A32])) dictionary.c:95 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106)
        (nil)))
(insn 38 37 39 5 (set (reg/f:SI 94 [ _16 ])
        (mem/f:SI (plus:SI (reg/f:SI 93 [ _15 ])
                (const_int 8 [0x8])) [7 _15->simple_past+0 S4 A32])) dictionary.c:95 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 93 [ _15 ])
        (nil)))
(insn 39 38 40 5 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 94 [ _16 ])) dictionary.c:95 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 94 [ _16 ])
        (nil)))
(insn 40 39 41 5 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC9") [flags 0x2]  <var_decl 06915e18 *LC9>)) dictionary.c:95 79 {*movsi_internal}
     (nil))
(call_insn 41 40 42 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) dictionary.c:95 581 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 42 41 43 5 (set (reg/f:SI 107)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])) dictionary.c:96 79 {*movsi_internal}
     (nil))
(insn 43 42 44 5 (set (reg/f:SI 95 [ _18 ])
        (mem/f:SI (plus:SI (reg/f:SI 107)
                (const_int 4 [0x4])) [4 p_1->info+0 S4 A32])) dictionary.c:96 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 107)
        (nil)))
(insn 44 43 45 5 (set (reg/f:SI 96 [ _19 ])
        (mem/f:SI (plus:SI (reg/f:SI 95 [ _18 ])
                (const_int 12 [0xc])) [7 _18->past_participle+0 S4 A32])) dictionary.c:96 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 95 [ _18 ])
        (nil)))
(insn 45 44 46 5 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 96 [ _19 ])) dictionary.c:96 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 96 [ _19 ])
        (nil)))
(insn 46 45 47 5 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC10") [flags 0x2]  <var_decl 06915e70 *LC10>)) dictionary.c:96 79 {*movsi_internal}
     (nil))
(call_insn 47 46 48 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) dictionary.c:96 581 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 48 47 49 5 (set (reg/f:SI 108)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])) dictionary.c:97 79 {*movsi_internal}
     (nil))
(insn 49 48 50 5 (set (reg/f:SI 97 [ _21 ])
        (mem/f:SI (plus:SI (reg/f:SI 108)
                (const_int 4 [0x4])) [4 p_1->info+0 S4 A32])) dictionary.c:97 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 108)
        (nil)))
(insn 50 49 51 5 (set (reg/f:SI 98 [ _22 ])
        (mem/f:SI (plus:SI (reg/f:SI 97 [ _21 ])
                (const_int 16 [0x10])) [7 _21->meaning+0 S4 A32])) dictionary.c:97 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 97 [ _21 ])
        (nil)))
(insn 51 50 52 5 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 98 [ _22 ])) dictionary.c:97 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 98 [ _22 ])
        (nil)))
(insn 52 51 53 5 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC11") [flags 0x2]  <var_decl 06915ec8 *LC11>)) dictionary.c:97 79 {*movsi_internal}
     (nil))
(call_insn 53 52 54 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) dictionary.c:97 581 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 54 53 55 5 (set (reg/f:SI 109)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])) dictionary.c:92 79 {*movsi_internal}
     (nil))
(insn 55 54 56 5 (set (reg/f:SI 110)
        (mem/f:SI (reg/f:SI 109) [3 p_1->prox+0 S4 A32])) dictionary.c:92 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 109)
        (nil)))
(insn 56 55 57 5 (set (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])
        (reg/f:SI 110)) dictionary.c:92 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 110)
        (nil)))
;;  succ:       6 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU,DFS_BACK)
;;              4 [100,0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 57 56 58 6 22 "" [1 uses])
(note 58 57 60 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 60 58 61 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])
            (const_int 0 [0]))) dictionary.c:92 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 61 60 62 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) dictionary.c:92 533 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 59)
;;  succ:       5
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 100
(note 62 61 63 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 7 (clobber (reg/i:SI 0 ax)) dictionary.c:99 -1
     (expr_list:REG_UNUSED (reg/i:SI 0 ax)
        (nil)))
(insn 64 63 72 7 (clobber (reg:SI 100 [ <retval> ])) dictionary.c:99 -1
     (nil))
;;  succ:       8 [100,0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 [100,0%]  (FALLTHRU)
;;              3 [100,0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  def 	 0 [ax]
(code_label 72 64 75 8 19 "" [1 uses])
(note 75 72 73 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 73 75 74 8 (set (reg/i:SI 0 ax)
        (reg:SI 100 [ <retval> ])) dictionary.c:99 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 100 [ <retval> ])
        (nil)))
(insn 74 73 0 8 (use (reg/i:SI 0 ax)) dictionary.c:99 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function Remove (Remove, funcdef_no=24, decl_uid=2643, cgraph_uid=24, symbol_order=24)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 8 (    1)
Building IRA IR
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 31.
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 41.
verify found no changes in insn with uid = 46.
verify found no changes in insn with uid = 51.
verify found no changes in insn with uid = 55.
verify found no changes in insn with uid = 58.
verify found no changes in insn with uid = 69.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r104,l0) best AREG, allocno GENERAL_REGS
    r103: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r103,l0) best AREG, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:12
  a2(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a3(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a4(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a5(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a6(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a7(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a8(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a9(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a10(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a11(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a12(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a13(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a14(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a15(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a16(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a17(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a18(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a19(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a20(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a21(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a22(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a23(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a24(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a25(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a26(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a27(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a28(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a29(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a30(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a31(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8

   Insn 81(l0): point = 0
   Insn 80(l0): point = 2
   Insn 76(l0): point = 4
   Insn 73(l0): point = 7
   Insn 72(l0): point = 9
   Insn 71(l0): point = 11
   Insn 70(l0): point = 13
   Insn 69(l0): point = 15
   Insn 68(l0): point = 17
   Insn 67(l0): point = 19
   Insn 66(l0): point = 21
   Insn 65(l0): point = 23
   Insn 64(l0): point = 25
   Insn 85(l0): point = 28
   Insn 59(l0): point = 30
   Insn 58(l0): point = 32
   Insn 57(l0): point = 34
   Insn 56(l0): point = 36
   Insn 55(l0): point = 38
   Insn 54(l0): point = 40
   Insn 53(l0): point = 42
   Insn 52(l0): point = 44
   Insn 51(l0): point = 46
   Insn 50(l0): point = 48
   Insn 49(l0): point = 50
   Insn 48(l0): point = 52
   Insn 47(l0): point = 54
   Insn 46(l0): point = 56
   Insn 45(l0): point = 58
   Insn 44(l0): point = 60
   Insn 43(l0): point = 62
   Insn 42(l0): point = 64
   Insn 41(l0): point = 66
   Insn 40(l0): point = 68
   Insn 39(l0): point = 70
   Insn 38(l0): point = 72
   Insn 37(l0): point = 74
   Insn 36(l0): point = 76
   Insn 35(l0): point = 78
   Insn 34(l0): point = 80
   Insn 33(l0): point = 82
   Insn 32(l0): point = 84
   Insn 31(l0): point = 86
   Insn 30(l0): point = 88
   Insn 29(l0): point = 90
   Insn 28(l0): point = 92
   Insn 27(l0): point = 94
   Insn 26(l0): point = 96
   Insn 25(l0): point = 98
   Insn 24(l0): point = 100
   Insn 22(l0): point = 103
   Insn 21(l0): point = 105
   Insn 20(l0): point = 107
   Insn 19(l0): point = 109
   Insn 18(l0): point = 111
   Insn 17(l0): point = 113
   Insn 16(l0): point = 115
   Insn 15(l0): point = 117
   Insn 14(l0): point = 119
   Insn 13(l0): point = 121
   Insn 83(l0): point = 124
   Insn 8(l0): point = 126
   Insn 6(l0): point = 129
   Insn 5(l0): point = 131
 a0(r104): [3..4]
 a1(r87): [124..126] [28..30] [5..7]
 a2(r118): [10..11]
 a3(r103): [10..13]
 a4(r102): [18..23]
 a5(r117): [20..21]
 a6(r116): [24..25]
 a7(r115): [35..36]
 a8(r101): [41..42]
 a9(r114): [43..44]
 a10(r100): [49..50]
 a11(r99): [51..52]
 a12(r113): [53..54]
 a13(r98): [59..60]
 a14(r97): [61..62]
 a15(r112): [63..64]
 a16(r96): [69..70]
 a17(r95): [71..72]
 a18(r111): [73..74]
 a19(r94): [79..80]
 a20(r93): [81..82]
 a21(r110): [83..84]
 a22(r92): [89..90]
 a23(r91): [91..92]
 a24(r109): [93..94]
 a25(r108): [97..98]
 a26(r107): [99..100]
 a27(r90): [106..107]
 a28(r89): [112..117]
 a29(r106): [114..115]
 a30(r88): [118..119]
 a31(r105): [120..121]
Compressing live ranges: from 134 to 62 - 46%
Ranges after the compression:
 a0(r104): [0..1]
 a1(r87): [60..61] [10..11] [2..3]
 a2(r118): [4..5]
 a3(r103): [4..5]
 a4(r102): [6..7]
 a5(r117): [6..7]
 a6(r116): [8..9]
 a7(r115): [12..13]
 a8(r101): [14..15]
 a9(r114): [16..17]
 a10(r100): [18..19]
 a11(r99): [20..21]
 a12(r113): [22..23]
 a13(r98): [24..25]
 a14(r97): [26..27]
 a15(r112): [28..29]
 a16(r96): [30..31]
 a17(r95): [32..33]
 a18(r111): [34..35]
 a19(r94): [36..37]
 a20(r93): [38..39]
 a21(r110): [40..41]
 a22(r92): [42..43]
 a23(r91): [44..45]
 a24(r109): [46..47]
 a25(r108): [48..49]
 a26(r107): [50..51]
 a27(r90): [52..53]
 a28(r89): [54..55]
 a29(r106): [54..55]
 a30(r88): [56..57]
 a31(r105): [58..59]
  regions=1, blocks=8, points=62
    allocnos=32 (big 0), copies=0, conflicts=0, ranges=34
Disposition:
    1:r87  l0     0   30:r88  l0     0   28:r89  l0     0   27:r90  l0     0
   23:r91  l0     0   22:r92  l0     0   20:r93  l0     0   19:r94  l0     0
   17:r95  l0     0   16:r96  l0     0   14:r97  l0     0   13:r98  l0     0
   11:r99  l0     0   10:r100 l0     0    8:r101 l0     0    4:r102 l0     0
    3:r103 l0     1    0:r104 l0     0   31:r105 l0     0   29:r106 l0     1
   26:r107 l0     0   25:r108 l0     0   24:r109 l0     0   21:r110 l0     0
   18:r111 l0     0   15:r112 l0     0   12:r113 l0     0    9:r114 l0     0
    7:r115 l0     0    6:r116 l0     0    5:r117 l0     1    2:r118 l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


Remove

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={11d,4u} r1={10d} r2={10d} r6={1d,7u} r7={1d,38u} r8={9d} r9={9d} r10={9d} r11={9d} r12={9d} r13={9d} r14={9d} r15={9d} r16={1d,21u} r17={11d,2u} r18={9d} r19={9d} r20={1d,9u} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={9d} r29={9d} r30={9d} r31={9d} r32={9d} r33={9d} r34={9d} r35={9d} r36={9d} r37={9d} r38={9d} r39={9d} r40={9d} r41={9d} r42={9d} r43={9d} r44={9d} r45={9d} r46={9d} r47={9d} r48={9d} r49={9d} r50={9d} r51={9d} r52={9d} r53={9d} r54={9d} r55={9d} r56={9d} r57={9d} r58={9d} r59={9d} r60={9d} r61={9d} r62={9d} r63={9d} r64={9d} r65={9d} r66={9d} r67={9d} r68={9d} r69={9d} r70={9d} r71={9d} r72={9d} r73={9d} r74={9d} r75={9d} r76={9d} r77={9d} r78={9d} r79={9d} r80={9d} r87={3d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} 
;;    total ref usage 823{710d,113u,0e} in 64{55 regular + 9 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (reg/f:SI 16 argp) [3 word+0 S4 A32])
            (const_int 0 [0]))) dictionary.c:102 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 6 5 7 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 11)
            (pc))) dictionary.c:102 533 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 11)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 7 6 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 8 7 83 3 (set (reg/f:SI 87 [ _1 ])
        (const_int 0 [0])) dictionary.c:103 79 {*movsi_internal}
     (nil))
(jump_insn 83 8 84 3 (set (pc)
        (label_ref 74)) dictionary.c:103 565 {jump}
     (nil)
 -> 74)
;;  succ:       7 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 84 83 11)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 90 105 106
(code_label 11 84 12 4 25 "" [1 uses])
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:SI 105)
        (mem/f/c:SI (reg/f:SI 16 argp) [3 word+0 S4 A32])) dictionary.c:105 79 {*movsi_internal}
     (nil))
(insn 14 13 15 4 (set (reg/f:SI 88 [ _6 ])
        (mem/f:SI (plus:SI (reg/f:SI 105)
                (const_int 4 [0x4])) [4 word_3(D)->info+0 S4 A32])) dictionary.c:105 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 105)
        (nil)))
(insn 15 14 16 4 (set (reg/f:SI 89 [ _7 ])
        (mem/f:SI (reg/f:SI 88 [ _6 ]) [7 _6->verb+0 S4 A32])) dictionary.c:105 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 88 [ _6 ])
        (nil)))
(insn 16 15 17 4 (set (reg/f:SI 106)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [7 wordKey+0 S4 A32])) dictionary.c:105 79 {*movsi_internal}
     (nil))
(insn 17 16 18 4 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 106)) dictionary.c:105 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106)
        (nil)))
(insn 18 17 19 4 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 89 [ _7 ])) dictionary.c:105 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 89 [ _7 ])
        (nil)))
(call_insn/i 19 18 20 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcmp") [flags 0x43]  <function_decl 77ed2700 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 8 [0x8]))) dictionary.c:105 581 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 20 19 21 4 (set (reg:SI 90 [ _9 ])
        (reg:SI 0 ax)) dictionary.c:105 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 21 20 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ _9 ])
            (const_int 0 [0]))) dictionary.c:105 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 90 [ _9 ])
        (nil)))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) dictionary.c:105 533 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 62)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 91 92 93 94 95 96 97 98 99 100 101 107 108 109 110 111 112 113 114 115
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg/f:SI 107)
        (mem/f/c:SI (reg/f:SI 16 argp) [3 word+0 S4 A32])) dictionary.c:106 79 {*movsi_internal}
     (nil))
(insn 25 24 26 5 (set (reg/f:SI 108)
        (mem/f:SI (reg/f:SI 107) [3 word_3(D)->prox+0 S4 A32])) dictionary.c:106 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 107)
        (nil)))
(insn 26 25 27 5 (set (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 tmp+0 S4 A32])
        (reg/f:SI 108)) dictionary.c:106 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 108)
        (nil)))
(insn 27 26 28 5 (set (reg/f:SI 109)
        (mem/f/c:SI (reg/f:SI 16 argp) [3 word+0 S4 A32])) dictionary.c:108 79 {*movsi_internal}
     (nil))
(insn 28 27 29 5 (set (reg/f:SI 91 [ _11 ])
        (mem/f:SI (plus:SI (reg/f:SI 109)
                (const_int 4 [0x4])) [4 word_3(D)->info+0 S4 A32])) dictionary.c:108 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 109)
        (nil)))
(insn 29 28 30 5 (set (reg/f:SI 92 [ _12 ])
        (mem/f:SI (plus:SI (reg/f:SI 91 [ _11 ])
                (const_int 4 [0x4])) [7 _11->infinitive+0 S4 A32])) dictionary.c:108 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91 [ _11 ])
        (nil)))
(insn 30 29 31 5 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 92 [ _12 ])) dictionary.c:108 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 92 [ _12 ])
        (nil)))
(call_insn 31 30 32 5 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:108 570 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 32 31 33 5 (set (reg/f:SI 110)
        (mem/f/c:SI (reg/f:SI 16 argp) [3 word+0 S4 A32])) dictionary.c:109 79 {*movsi_internal}
     (nil))
(insn 33 32 34 5 (set (reg/f:SI 93 [ _14 ])
        (mem/f:SI (plus:SI (reg/f:SI 110)
                (const_int 4 [0x4])) [4 word_3(D)->info+0 S4 A32])) dictionary.c:109 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 110)
        (nil)))
(insn 34 33 35 5 (set (reg/f:SI 94 [ _15 ])
        (mem/f:SI (plus:SI (reg/f:SI 93 [ _14 ])
                (const_int 16 [0x10])) [7 _14->meaning+0 S4 A32])) dictionary.c:109 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 93 [ _14 ])
        (nil)))
(insn 35 34 36 5 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 94 [ _15 ])) dictionary.c:109 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 94 [ _15 ])
        (nil)))
(call_insn 36 35 37 5 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:109 570 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 37 36 38 5 (set (reg/f:SI 111)
        (mem/f/c:SI (reg/f:SI 16 argp) [3 word+0 S4 A32])) dictionary.c:110 79 {*movsi_internal}
     (nil))
(insn 38 37 39 5 (set (reg/f:SI 95 [ _17 ])
        (mem/f:SI (plus:SI (reg/f:SI 111)
                (const_int 4 [0x4])) [4 word_3(D)->info+0 S4 A32])) dictionary.c:110 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 111)
        (nil)))
(insn 39 38 40 5 (set (reg/f:SI 96 [ _18 ])
        (mem/f:SI (plus:SI (reg/f:SI 95 [ _17 ])
                (const_int 12 [0xc])) [7 _17->past_participle+0 S4 A32])) dictionary.c:110 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 95 [ _17 ])
        (nil)))
(insn 40 39 41 5 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 96 [ _18 ])) dictionary.c:110 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 96 [ _18 ])
        (nil)))
(call_insn 41 40 42 5 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:110 570 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 42 41 43 5 (set (reg/f:SI 112)
        (mem/f/c:SI (reg/f:SI 16 argp) [3 word+0 S4 A32])) dictionary.c:111 79 {*movsi_internal}
     (nil))
(insn 43 42 44 5 (set (reg/f:SI 97 [ _20 ])
        (mem/f:SI (plus:SI (reg/f:SI 112)
                (const_int 4 [0x4])) [4 word_3(D)->info+0 S4 A32])) dictionary.c:111 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 112)
        (nil)))
(insn 44 43 45 5 (set (reg/f:SI 98 [ _21 ])
        (mem/f:SI (plus:SI (reg/f:SI 97 [ _20 ])
                (const_int 8 [0x8])) [7 _20->simple_past+0 S4 A32])) dictionary.c:111 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 97 [ _20 ])
        (nil)))
(insn 45 44 46 5 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 98 [ _21 ])) dictionary.c:111 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 98 [ _21 ])
        (nil)))
(call_insn 46 45 47 5 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:111 570 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 47 46 48 5 (set (reg/f:SI 113)
        (mem/f/c:SI (reg/f:SI 16 argp) [3 word+0 S4 A32])) dictionary.c:112 79 {*movsi_internal}
     (nil))
(insn 48 47 49 5 (set (reg/f:SI 99 [ _23 ])
        (mem/f:SI (plus:SI (reg/f:SI 113)
                (const_int 4 [0x4])) [4 word_3(D)->info+0 S4 A32])) dictionary.c:112 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 113)
        (nil)))
(insn 49 48 50 5 (set (reg/f:SI 100 [ _24 ])
        (mem/f:SI (reg/f:SI 99 [ _23 ]) [7 _23->verb+0 S4 A32])) dictionary.c:112 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 99 [ _23 ])
        (nil)))
(insn 50 49 51 5 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 100 [ _24 ])) dictionary.c:112 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 100 [ _24 ])
        (nil)))
(call_insn 51 50 52 5 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:112 570 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 52 51 53 5 (set (reg/f:SI 114)
        (mem/f/c:SI (reg/f:SI 16 argp) [3 word+0 S4 A32])) dictionary.c:113 79 {*movsi_internal}
     (nil))
(insn 53 52 54 5 (set (reg/f:SI 101 [ _26 ])
        (mem/f:SI (plus:SI (reg/f:SI 114)
                (const_int 4 [0x4])) [4 word_3(D)->info+0 S4 A32])) dictionary.c:113 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 114)
        (nil)))
(insn 54 53 55 5 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 101 [ _26 ])) dictionary.c:113 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 101 [ _26 ])
        (nil)))
(call_insn 55 54 56 5 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:113 570 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 56 55 57 5 (set (reg/f:SI 115)
        (mem/f/c:SI (reg/f:SI 16 argp) [3 word+0 S4 A32])) dictionary.c:114 79 {*movsi_internal}
     (nil))
(insn 57 56 58 5 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 115)) dictionary.c:114 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 115)
        (nil)))
(call_insn 58 57 59 5 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:114 570 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 59 58 85 5 (set (reg/f:SI 87 [ _1 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 tmp+0 S4 A32])) dictionary.c:116 79 {*movsi_internal}
     (nil))
(jump_insn 85 59 86 5 (set (pc)
        (label_ref 74)) dictionary.c:116 565 {jump}
     (nil)
 -> 74)
;;  succ:       7 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 86 85 62)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 102 103 116 117 118
(code_label 62 86 63 6 27 "" [1 uses])
(note 63 62 64 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 6 (set (reg/f:SI 116)
        (mem/f/c:SI (reg/f:SI 16 argp) [3 word+0 S4 A32])) dictionary.c:118 79 {*movsi_internal}
     (nil))
(insn 65 64 66 6 (set (reg/f:SI 102 [ _30 ])
        (mem/f:SI (reg/f:SI 116) [3 word_3(D)->prox+0 S4 A32])) dictionary.c:118 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (nil)))
(insn 66 65 67 6 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [7 wordKey+0 S4 A32])) dictionary.c:118 79 {*movsi_internal}
     (nil))
(insn 67 66 68 6 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 117)) dictionary.c:118 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 117)
        (nil)))
(insn 68 67 69 6 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 102 [ _30 ])) dictionary.c:118 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 102 [ _30 ])
        (nil)))
(call_insn 69 68 70 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("Remove") [flags 0x3]  <function_decl 068d7000 Remove>) [0 Remove S1 A8])
            (const_int 8 [0x8]))) dictionary.c:118 581 {*call_value}
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 70 69 71 6 (set (reg/f:SI 103 [ _32 ])
        (reg:SI 0 ax)) dictionary.c:118 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 71 70 72 6 (set (reg/f:SI 118)
        (mem/f/c:SI (reg/f:SI 16 argp) [3 word+0 S4 A32])) dictionary.c:118 79 {*movsi_internal}
     (nil))
(insn 72 71 73 6 (set (mem/f:SI (reg/f:SI 118) [3 word_3(D)->prox+0 S4 A32])
        (reg/f:SI 103 [ _32 ])) dictionary.c:118 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 118)
        (expr_list:REG_DEAD (reg/f:SI 103 [ _32 ])
            (nil))))
(insn 73 72 74 6 (set (reg/f:SI 87 [ _1 ])
        (mem/f/c:SI (reg/f:SI 16 argp) [3 word+0 S4 A32])) dictionary.c:119 79 {*movsi_internal}
     (nil))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              3 [100,0%] 
;;              5 [100,0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 104
(code_label 74 73 75 7 26 "" [2 uses])
(note 75 74 76 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 80 7 (set (reg/f:SI 104 [ <retval> ])
        (reg/f:SI 87 [ _1 ])) 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 87 [ _1 ])
        (nil)))
(insn 80 76 81 7 (set (reg/i:SI 0 ax)
        (reg/f:SI 104 [ <retval> ])) dictionary.c:120 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 104 [ <retval> ])
        (nil)))
(insn 81 80 0 7 (use (reg/i:SI 0 ax)) dictionary.c:120 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

