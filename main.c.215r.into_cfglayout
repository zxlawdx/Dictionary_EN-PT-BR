
;; Function main (main, funcdef_no=17, decl_uid=2608, cgraph_uid=17, symbol_order=17)



try_optimize_cfg iteration 1

Removing jump 23.
Removing jump 33.
Removing jump 40.
Removing jump 55.
Removing jump 76.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

fix_loop_structure: fixing up loops for function
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 3 2 6 2 (call (mem:QI (symbol_ref:SI ("__main") [flags 0x43]) [0  S1 A8])
        (const_int 0 [0])) main.c:3 570 {*call}
     (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
        (nil))
    (nil))
(insn 6 3 7 2 (parallel [
            (set (reg:SI 92)
                (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) main.c:6 195 {*addsi_1}
     (nil))
(insn 7 6 8 2 (set (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg:SI 92)) main.c:6 79 {*movsi_internal}
     (nil))
(call_insn 8 7 9 2 (call (mem:QI (symbol_ref:SI ("CreateEmpty") [flags 0x43]  <function_decl 77ec9c00 CreateEmpty>) [0 CreateEmpty S1 A8])
        (const_int 4 [0x4])) main.c:6 570 {*call}
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 9 8 10 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC0") [flags 0x2]  <var_decl 068ed840 *LC0>)) main.c:9 79 {*movsi_internal}
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x43]  <function_decl 77ed4480 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 4 [0x4]))) main.c:9 581 {*call_value}
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 11 10 12 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC1") [flags 0x2]  <var_decl 068ed898 *LC1>)) main.c:10 79 {*movsi_internal}
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x43]  <function_decl 77ed4480 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 4 [0x4]))) main.c:10 581 {*call_value}
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 13 12 14 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC2") [flags 0x2]  <var_decl 068ed8f0 *LC2>)) main.c:11 79 {*movsi_internal}
     (nil))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x43]  <function_decl 77ed4480 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 4 [0x4]))) main.c:11 581 {*call_value}
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 15 14 16 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC3") [flags 0x2]  <var_decl 068ed948 *LC3>)) main.c:12 79 {*movsi_internal}
     (nil))
(call_insn 16 15 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x43]  <function_decl 77ed4480 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 4 [0x4]))) main.c:12 581 {*call_value}
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 17 16 18 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC4") [flags 0x2]  <var_decl 068ed9a0 *LC4>)) main.c:13 79 {*movsi_internal}
     (nil))
(call_insn 18 17 19 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x43]  <function_decl 77ed4480 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 4 [0x4]))) main.c:13 581 {*call_value}
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 19 18 20 2 (parallel [
            (set (reg:SI 93)
                (plus:SI (reg/f:SI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])))
            (clobber (reg:CC 17 flags))
        ]) main.c:14 195 {*addsi_1}
     (nil))
(insn 20 19 21 2 (set (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg:SI 93)) main.c:14 79 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC5") [flags 0x2]  <var_decl 068ed9f8 *LC5>)) main.c:14 79 {*movsi_internal}
     (nil))
(call_insn 22 21 98 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("scanf") [flags 0x43]  <function_decl 77ed4700 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 8 [0x8]))) main.c:14 581 {*call_value}
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
;;  succ:       16 [100,0%]  (FALLTHRU)

;; basic block 3, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16
(code_label 98 22 25 3 11 "" [1 uses])
(note 25 98 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 3 (set (reg:SI 88 [ opc.0_13 ])
        (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [5 opc+0 S4 A32])) main.c:17 79 {*movsi_internal}
     (nil))
(insn 27 26 28 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ opc.0_13 ])
            (const_int 1 [0x1]))) main.c:17 7 {*cmpsi_1}
     (nil))
(jump_insn 28 27 112 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) main.c:17 533 {*jcc_1}
     (nil)
 -> 42)
;;  succ:       10
;;              4 (FALLTHRU)

;; basic block 4, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
(note 112 28 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 112 30 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88 [ opc.0_13 ])
            (const_int 1 [0x1]))) main.c:17 7 {*cmpsi_1}
     (nil))
(jump_insn 30 29 113 4 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) main.c:17 533 {*jcc_1}
     (nil)
 -> 35)
;;  succ:       7
;;              5 (FALLTHRU)

;; basic block 5, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
(note 113 30 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 113 32 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ opc.0_13 ])
            (const_int 0 [0]))) main.c:17 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 32 31 114 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 90)
            (pc))) main.c:17 533 {*jcc_1}
     (nil)
 -> 90)
;;  succ:       15
;;              6 (FALLTHRU)

;; basic block 6, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
(note 114 32 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;;  succ:       15 [100,0%]  (FALLTHRU)

;; basic block 7, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
(code_label 35 114 115 7 5 "" [1 uses])
(note 115 35 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 36 115 37 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ opc.0_13 ])
            (const_int 2 [0x2]))) main.c:17 7 {*cmpsi_1}
     (nil))
(jump_insn 37 36 116 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) main.c:17 533 {*jcc_1}
     (nil)
 -> 57)
;;  succ:       11
;;              8 (FALLTHRU)

;; basic block 8, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
(note 116 37 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 116 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ opc.0_13 ])
            (const_int 3 [0x3]))) main.c:17 7 {*cmpsi_1}
     (nil))
(jump_insn 39 38 117 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) main.c:17 533 {*jcc_1}
     (nil)
 -> 78)
;;  succ:       14
;;              9 (FALLTHRU)

;; basic block 9, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
(note 117 39 42 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
;;  succ:       15 [100,0%]  (FALLTHRU)

;; basic block 10, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       3
(code_label 42 117 43 10 4 "" [1 uses])
(note 43 42 44 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 10 (parallel [
            (set (reg:SI 94)
                (plus:SI (reg/f:SI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) main.c:19 195 {*addsi_1}
     (nil))
(insn 45 44 46 10 (set (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg:SI 94)) main.c:19 79 {*movsi_internal}
     (nil))
(insn 46 45 47 10 (parallel [
            (set (reg:SI 95)
                (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) main.c:19 195 {*addsi_1}
     (nil))
(insn 47 46 48 10 (set (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg:SI 95)) main.c:19 79 {*movsi_internal}
     (nil))
(call_insn 48 47 49 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("InsertDicionary") [flags 0x43]  <function_decl 77ec9d80 InsertDicionary>) [0 InsertDicionary S1 A8])
            (const_int 8 [0x8]))) main.c:19 581 {*call_value}
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 49 48 50 10 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC6") [flags 0x2]  <var_decl 068edaa8 *LC6>)) main.c:20 79 {*movsi_internal}
     (nil))
(call_insn 50 49 51 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 4 [0x4]))) main.c:20 581 {*call_value}
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(call_insn 51 50 52 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getchar") [flags 0x43]  <function_decl 77ed9580 getchar>) [0 getchar S1 A8])
            (const_int 0 [0]))) main.c:21 581 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(call_insn 52 51 53 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getchar") [flags 0x43]  <function_decl 77ed9580 getchar>) [0 getchar S1 A8])
            (const_int 0 [0]))) main.c:22 581 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 53 52 54 10 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC7") [flags 0x2]  <var_decl 068edb00 *LC7>)) main.c:23 79 {*movsi_internal}
     (nil))
(call_insn 54 53 57 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("system") [flags 0x43]  <function_decl 77eb8300 system>) [0 system S1 A8])
            (const_int 4 [0x4]))) main.c:23 581 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
;;  succ:       15 [100,0%]  (FALLTHRU)

;; basic block 11, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 57 54 58 11 7 "" [1 uses])
(note 58 57 59 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 11 (parallel [
            (set (reg:SI 96)
                (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) main.c:26 195 {*addsi_1}
     (nil))
(insn 60 59 61 11 (set (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg:SI 96)) main.c:26 79 {*movsi_internal}
     (nil))
(call_insn 61 60 62 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("Show") [flags 0x43]  <function_decl 77ec9e80 Show>) [0 Show S1 A8])
            (const_int 4 [0x4]))) main.c:26 581 {*call_value}
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 62 61 63 11 (set (reg:SI 89 [ _20 ])
        (reg:SI 0 ax)) main.c:26 79 {*movsi_internal}
     (nil))
(insn 63 62 64 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _20 ])
            (const_int 0 [0]))) main.c:26 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 64 63 65 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) main.c:26 533 {*jcc_1}
     (nil)
 -> 68)
;;  succ:       12 (FALLTHRU)
;;              13

;; basic block 12, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
(note 65 64 66 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 12 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC8") [flags 0x2]  <var_decl 068edb58 *LC8>)) main.c:27 79 {*movsi_internal}
     (nil))
(call_insn 67 66 68 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x43]  <function_decl 77ed4480 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 4 [0x4]))) main.c:27 581 {*call_value}
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
;;  succ:       13 (FALLTHRU)

;; basic block 13, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
;;              12 (FALLTHRU)
(code_label 68 67 69 13 10 "" [1 uses])
(note 69 68 70 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 13 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC6") [flags 0x2]  <var_decl 068edaa8 *LC6>)) main.c:28 79 {*movsi_internal}
     (nil))
(call_insn 71 70 72 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 4 [0x4]))) main.c:28 581 {*call_value}
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(call_insn 72 71 73 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getchar") [flags 0x43]  <function_decl 77ed9580 getchar>) [0 getchar S1 A8])
            (const_int 0 [0]))) main.c:29 581 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(call_insn 73 72 74 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getchar") [flags 0x43]  <function_decl 77ed9580 getchar>) [0 getchar S1 A8])
            (const_int 0 [0]))) main.c:30 581 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 74 73 75 13 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC7") [flags 0x2]  <var_decl 068edb00 *LC7>)) main.c:31 79 {*movsi_internal}
     (nil))
(call_insn 75 74 78 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("system") [flags 0x43]  <function_decl 77eb8300 system>) [0 system S1 A8])
            (const_int 4 [0x4]))) main.c:31 581 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
;;  succ:       15 [100,0%]  (FALLTHRU)

;; basic block 14, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
(code_label 78 75 79 14 8 "" [1 uses])
(note 79 78 80 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 14 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC9") [flags 0x2]  <var_decl 068edbb0 *LC9>)) main.c:34 79 {*movsi_internal}
     (nil))
(call_insn 81 80 90 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x43]  <function_decl 77ed4480 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 4 [0x4]))) main.c:34 581 {*call_value}
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
;;  succ:       15 [100,0%]  (FALLTHRU)

;; basic block 15, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 [100,0%]  (FALLTHRU)
;;              13 [100,0%]  (FALLTHRU)
;;              14 [100,0%]  (FALLTHRU)
;;              9 [100,0%]  (FALLTHRU)
;;              6 [100,0%]  (FALLTHRU)
;;              5
(code_label 90 81 91 15 9 "" [1 uses])
(note 91 90 92 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 15 (parallel [
            (set (reg:SI 97)
                (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) main.c:41 195 {*addsi_1}
     (nil))
(insn 93 92 94 15 (set (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg:SI 97)) main.c:41 79 {*movsi_internal}
     (nil))
(call_insn 94 93 95 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("FreeVerbs") [flags 0x43]  <function_decl 77ec9e00 FreeVerbs>) [0 FreeVerbs S1 A8])
            (const_int 4 [0x4]))) main.c:41 581 {*call_value}
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
;;  succ:       16 (FALLTHRU,DFS_BACK)

;; basic block 16, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [100,0%]  (FALLTHRU)
;;              15 (FALLTHRU,DFS_BACK)
(code_label 95 94 96 16 2 "" [0 uses])
(note 96 95 97 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 99 16 (set (reg:SI 87 [ opc.1_12 ])
        (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [5 opc+0 S4 A32])) main.c:16 79 {*movsi_internal}
     (nil))
(insn 99 97 100 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ opc.1_12 ])
            (const_int 0 [0]))) main.c:16 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 100 99 101 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) main.c:16 533 {*jcc_1}
     (nil)
 -> 98)
;;  succ:       3
;;              17 (FALLTHRU)

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 (FALLTHRU)
(note 101 100 102 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 105 17 (set (reg:SI 90 [ _28 ])
        (const_int 0 [0])) main.c:44 79 {*movsi_internal}
     (nil))
(insn 105 102 109 17 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ _28 ])) 79 {*movsi_internal}
     (nil))
(insn 109 105 110 17 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) main.c:45 79 {*movsi_internal}
     (nil))
(insn 110 109 0 17 (use (reg/i:SI 0 ax)) main.c:45 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)

