
;; Function CreateEmpty (CreateEmpty, funcdef_no=17, decl_uid=2593, cgraph_uid=17, symbol_order=17)

CreateEmpty (struct dictionary * dictionary)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  dictionary_2(D)->Head = 0B;
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (dictionary_2(D) - 2 )


Partition map 

Partition 0 (dictionary_2(D) - 2 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (dictionary_2(D) - 2 )

After Coalescing:

Partition map 

Partition 0 (dictionary_2(D) - 2 )

CreateEmpty (struct dictionary * dictionary)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  dictionary_2(D)->Head = 0B;
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; dictionary_2(D)->Head = 0B;

(insn 5 4 6 (set (reg/f:SI 87)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [1 dictionary+0 S4 A32])) dictionary.c:5 -1
     (nil))

(insn 6 5 0 (set (mem/f:SI (reg/f:SI 87) [3 dictionary_2(D)->Head+0 S4 A32])
        (const_int 0 [0])) dictionary.c:5 -1
     (nil))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 87)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [1 dictionary+0 S4 A32])) dictionary.c:5 -1
     (nil))
(insn 6 5 9 2 (set (mem/f:SI (reg/f:SI 87) [3 dictionary_2(D)->Head+0 S4 A32])
        (const_int 0 [0])) dictionary.c:5 -1
     (nil))
(insn 9 6 0 2 (const_int 0 [0]) dictionary.c:6 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)


;; Function Empty (Empty, funcdef_no=18, decl_uid=2595, cgraph_uid=18, symbol_order=18)

Empty (struct Node * no)
{
  _Bool D.2648;
  int D.2647;
  _Bool _2;
  int _3;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = no_1(D) == 0B;
  _3 = (int) _2;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _3;
;;    succ:       EXIT

}



Partition map 

Partition 1 (no_1(D) - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 5 (_5(D) - 5 )


Partition map 

Partition 0 (no_1(D) - 1 )
Partition 1 (_5(D) - 5 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (no_1(D) - 1 )
Partition 1 (_5(D) - 5 )

After Coalescing:

Partition map 

Partition 0 (no_1(D) - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_5(D) - 5 )

Empty (struct Node * no)
{
  _Bool D.2648;
  int D.2647;
  _Bool _2;
  int _3;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = no_1(D) == 0B;
  _3 = (int) _2;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _3;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _2 = no_1(D) == 0B;

(insn 5 4 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [3 no+0 S4 A32])
            (const_int 0 [0]))) dictionary.c:10 -1
     (nil))

(insn 6 5 0 (set (reg:QI 87 [ _2 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) dictionary.c:10 -1
     (nil))

;; _3 = (int) _2;

(insn 7 6 0 (set (reg:SI 88 [ _3 ])
        (zero_extend:SI (reg:QI 87 [ _2 ]))) dictionary.c:10 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 8 7 9 3 "" [0 uses])

(note 9 8 0 NOTE_INSN_BASIC_BLOCK)

;; return _3;

(insn 10 9 11 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ _3 ])) dictionary.c:10 -1
     (nil))

(jump_insn 11 10 12 (set (pc)
        (label_ref 0)) dictionary.c:10 -1
     (nil))

(barrier 12 11 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 11.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [3 no+0 S4 A32])
            (const_int 0 [0]))) dictionary.c:10 -1
     (nil))
(insn 6 5 7 2 (set (reg:QI 87 [ _2 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) dictionary.c:10 -1
     (nil))
(insn 7 6 10 2 (set (reg:SI 88 [ _3 ])
        (zero_extend:SI (reg:QI 87 [ _2 ]))) dictionary.c:10 -1
     (nil))
(insn 10 7 14 2 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ _3 ])) dictionary.c:10 -1
     (nil))
(insn 14 10 15 2 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) dictionary.c:11 -1
     (nil))
(insn 15 14 0 2 (use (reg/i:SI 0 ax)) dictionary.c:11 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)


;; Function CreateWord (CreateWord, funcdef_no=19, decl_uid=2597, cgraph_uid=19, symbol_order=19)

CreateWord (struct word * word)
{
  char * D.2671;
  char * D.2670;
  char * D.2669;
  char * D.2668;
  char * D.2667;
  int D.2666;
  char * D.2665;
  char * D.2663;
  char * D.2661;
  char * D.2659;
  char * D.2657;
  void * D.2654;
  void * D.2653;
  void * D.2652;
  void * D.2651;
  void * D.2650;
  int _1;
  void * _5;
  void * _9;
  void * _12;
  void * _15;
  void * _18;
  char * _20;
  char * _21;
  char * _22;
  char * _23;
  char * _24;
  char * _26;
  char * _29;
  char * _32;
  char * _35;
  char * _38;
  int _40;
  int _41;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _5 = malloc (50);
  word_6(D)->verb = _5;
  _9 = malloc (50);
  word_6(D)->infinitive = _9;
  _12 = malloc (50);
  word_6(D)->simple_past = _12;
  _15 = malloc (50);
  word_6(D)->past_participle = _15;
  _18 = malloc (100);
  word_6(D)->meaning = _18;
  _20 = word_6(D)->infinitive;
  if (_20 == 0B)
    goto <bb 7>;
  else
    goto <bb 3>;
;;    succ:       7
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
  _21 = word_6(D)->simple_past;
  if (_21 == 0B)
    goto <bb 7>;
  else
    goto <bb 4>;
;;    succ:       7
;;                4

;;   basic block 4, loop depth 0
;;    pred:       3
  _22 = word_6(D)->past_participle;
  if (_22 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;
;;    succ:       7
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  _23 = word_6(D)->meaning;
  if (_23 == 0B)
    goto <bb 7>;
  else
    goto <bb 6>;
;;    succ:       7
;;                6

;;   basic block 6, loop depth 0
;;    pred:       5
  _24 = word_6(D)->verb;
  if (_24 == 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7
;;                8

;;   basic block 7, loop depth 0
;;    pred:       2
;;                3
;;                4
;;                5
;;                6
  _41 = 0;
  goto <bb 9> (<L6>);
;;    succ:       9

;;   basic block 8, loop depth 0
;;    pred:       6
  printf ("Digite o Verbo:");
  _26 = word_6(D)->verb;
  scanf (" %49[^\n]", _26);
  printf ("Digite o infinitivo: ");
  _29 = word_6(D)->infinitive;
  scanf (" %49[^\n]", _29);
  printf ("Digite o passado simples: ");
  _32 = word_6(D)->simple_past;
  scanf (" %49[^\n]", _32);
  printf ("Digite o particÃ­pio passado: ");
  _35 = word_6(D)->past_participle;
  scanf (" %49[^\n]", _35);
  printf ("Digite o significado: ");
  _38 = word_6(D)->meaning;
  scanf (" %99[^\n]", _38);
  _40 = 1;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       7
;;                8
  # _1 = PHI <_41(7), _40(8)>
<L6>:
  return _1;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 5 (_5 - 5 )
Partition 6 (word_6(D) - 6 )
Partition 9 (_9 - 9 )
Partition 12 (_12 - 12 )
Partition 15 (_15 - 15 )
Partition 18 (_18 - 18 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 26 (_26 - 26 )
Partition 29 (_29 - 29 )
Partition 32 (_32 - 32 )
Partition 35 (_35 - 35 )
Partition 38 (_38 - 38 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (_42(D) - 42 )


Partition map 

Partition 0 (_1 - 1 )
Partition 1 (word_6(D) - 6 )
Partition 2 (_40 - 40 )
Partition 3 (_41 - 41 )
Partition 4 (_42(D) - 42 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (word_6(D) - 6 )
Partition 2 (_40 - 40 )
Partition 3 (_41 - 41 )
Partition 4 (_42(D) - 42 )

Coalesce list: (1)_1 & (40)_40 [map: 0, 2] : Success -> 0
Coalesce list: (1)_1 & (41)_41 [map: 0, 3] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (_1 - 1 40 41 )
Partition 1 (_5 - 5 )
Partition 2 (word_6(D) - 6 )
Partition 3 (_9 - 9 )
Partition 4 (_12 - 12 )
Partition 5 (_15 - 15 )
Partition 6 (_18 - 18 )
Partition 7 (_20 - 20 )
Partition 8 (_21 - 21 )
Partition 9 (_22 - 22 )
Partition 10 (_23 - 23 )
Partition 11 (_24 - 24 )
Partition 12 (_26 - 26 )
Partition 13 (_29 - 29 )
Partition 14 (_32 - 32 )
Partition 15 (_35 - 35 )
Partition 16 (_38 - 38 )
Partition 17 (_42(D) - 42 )

CreateWord (struct word * word)
{
  char * D.2671;
  char * D.2670;
  char * D.2669;
  char * D.2668;
  char * D.2667;
  int D.2666;
  char * D.2665;
  char * D.2663;
  char * D.2661;
  char * D.2659;
  char * D.2657;
  void * D.2654;
  void * D.2653;
  void * D.2652;
  void * D.2651;
  void * D.2650;
  int _1;
  void * _5;
  void * _9;
  void * _12;
  void * _15;
  void * _18;
  char * _20;
  char * _21;
  char * _22;
  char * _23;
  char * _24;
  char * _26;
  char * _29;
  char * _32;
  char * _35;
  char * _38;
  int _40;
  int _41;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _5 = malloc (50);
  word_6(D)->verb = _5;
  _9 = malloc (50);
  word_6(D)->infinitive = _9;
  _12 = malloc (50);
  word_6(D)->simple_past = _12;
  _15 = malloc (50);
  word_6(D)->past_participle = _15;
  _18 = malloc (100);
  word_6(D)->meaning = _18;
  _20 = word_6(D)->infinitive;
  if (_20 == 0B)
    goto <bb 7>;
  else
    goto <bb 3>;
;;    succ:       7
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
  _21 = word_6(D)->simple_past;
  if (_21 == 0B)
    goto <bb 7>;
  else
    goto <bb 4>;
;;    succ:       7
;;                4

;;   basic block 4, loop depth 0
;;    pred:       3
  _22 = word_6(D)->past_participle;
  if (_22 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;
;;    succ:       7
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  _23 = word_6(D)->meaning;
  if (_23 == 0B)
    goto <bb 7>;
  else
    goto <bb 6>;
;;    succ:       7
;;                6

;;   basic block 6, loop depth 0
;;    pred:       5
  _24 = word_6(D)->verb;
  if (_24 == 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7
;;                8

;;   basic block 7, loop depth 0
;;    pred:       2
;;                3
;;                4
;;                5
;;                6
  _41 = 0;
  goto <bb 9> (<L6>);
;;    succ:       9

;;   basic block 8, loop depth 0
;;    pred:       6
  printf ("Digite o Verbo:");
  _26 = word_6(D)->verb;
  scanf (" %49[^\n]", _26);
  printf ("Digite o infinitivo: ");
  _29 = word_6(D)->infinitive;
  scanf (" %49[^\n]", _29);
  printf ("Digite o passado simples: ");
  _32 = word_6(D)->simple_past;
  scanf (" %49[^\n]", _32);
  printf ("Digite o particÃ­pio passado: ");
  _35 = word_6(D)->past_participle;
  scanf (" %49[^\n]", _35);
  printf ("Digite o significado: ");
  _38 = word_6(D)->meaning;
  scanf (" %99[^\n]", _38);
  _40 = 1;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       7
;;                8
  # _1 = PHI <_41(7), _40(8)>
<L6>:
  return _1;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _5 = malloc (50);

(insn 5 4 6 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (const_int 50 [0x32])) dictionary.c:15 -1
     (nil))

(call_insn 6 5 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x43]  <function_decl 77ea8f00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 4 [0x4]))) dictionary.c:15 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

(insn 7 6 8 (set (reg/f:SI 104)
        (reg:SI 0 ax)) dictionary.c:15 -1
     (expr_list:REG_NOALIAS (reg/f:SI 104)
        (nil)))

(insn 8 7 0 (set (reg/f:SI 88 [ _5 ])
        (reg/f:SI 104)) dictionary.c:15 -1
     (nil))

;; word_6(D)->verb = _5;

(insn 9 8 10 (set (reg/f:SI 105)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [4 word+0 S4 A32])) dictionary.c:15 -1
     (nil))

(insn 10 9 0 (set (mem/f:SI (reg/f:SI 105) [7 word_6(D)->verb+0 S4 A32])
        (reg/f:SI 88 [ _5 ])) dictionary.c:15 -1
     (nil))

;; _9 = malloc (50);

(insn 11 10 12 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (const_int 50 [0x32])) dictionary.c:16 -1
     (nil))

(call_insn 12 11 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x43]  <function_decl 77ea8f00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 4 [0x4]))) dictionary.c:16 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

(insn 13 12 14 (set (reg/f:SI 106)
        (reg:SI 0 ax)) dictionary.c:16 -1
     (expr_list:REG_NOALIAS (reg/f:SI 106)
        (nil)))

(insn 14 13 0 (set (reg/f:SI 89 [ _9 ])
        (reg/f:SI 106)) dictionary.c:16 -1
     (nil))

;; word_6(D)->infinitive = _9;

(insn 15 14 16 (set (reg/f:SI 107)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [4 word+0 S4 A32])) dictionary.c:16 -1
     (nil))

(insn 16 15 0 (set (mem/f:SI (plus:SI (reg/f:SI 107)
                (const_int 4 [0x4])) [7 word_6(D)->infinitive+0 S4 A32])
        (reg/f:SI 89 [ _9 ])) dictionary.c:16 -1
     (nil))

;; _12 = malloc (50);

(insn 17 16 18 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (const_int 50 [0x32])) dictionary.c:17 -1
     (nil))

(call_insn 18 17 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x43]  <function_decl 77ea8f00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 4 [0x4]))) dictionary.c:17 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

(insn 19 18 20 (set (reg/f:SI 108)
        (reg:SI 0 ax)) dictionary.c:17 -1
     (expr_list:REG_NOALIAS (reg/f:SI 108)
        (nil)))

(insn 20 19 0 (set (reg/f:SI 90 [ _12 ])
        (reg/f:SI 108)) dictionary.c:17 -1
     (nil))

;; word_6(D)->simple_past = _12;

(insn 21 20 22 (set (reg/f:SI 109)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [4 word+0 S4 A32])) dictionary.c:17 -1
     (nil))

(insn 22 21 0 (set (mem/f:SI (plus:SI (reg/f:SI 109)
                (const_int 8 [0x8])) [7 word_6(D)->simple_past+0 S4 A32])
        (reg/f:SI 90 [ _12 ])) dictionary.c:17 -1
     (nil))

;; _15 = malloc (50);

(insn 23 22 24 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (const_int 50 [0x32])) dictionary.c:18 -1
     (nil))

(call_insn 24 23 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x43]  <function_decl 77ea8f00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 4 [0x4]))) dictionary.c:18 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

(insn 25 24 26 (set (reg/f:SI 110)
        (reg:SI 0 ax)) dictionary.c:18 -1
     (expr_list:REG_NOALIAS (reg/f:SI 110)
        (nil)))

(insn 26 25 0 (set (reg/f:SI 91 [ _15 ])
        (reg/f:SI 110)) dictionary.c:18 -1
     (nil))

;; word_6(D)->past_participle = _15;

(insn 27 26 28 (set (reg/f:SI 111)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [4 word+0 S4 A32])) dictionary.c:18 -1
     (nil))

(insn 28 27 0 (set (mem/f:SI (plus:SI (reg/f:SI 111)
                (const_int 12 [0xc])) [7 word_6(D)->past_participle+0 S4 A32])
        (reg/f:SI 91 [ _15 ])) dictionary.c:18 -1
     (nil))

;; _18 = malloc (100);

(insn 29 28 30 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (const_int 100 [0x64])) dictionary.c:19 -1
     (nil))

(call_insn 30 29 31 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x43]  <function_decl 77ea8f00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 4 [0x4]))) dictionary.c:19 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

(insn 31 30 32 (set (reg/f:SI 112)
        (reg:SI 0 ax)) dictionary.c:19 -1
     (expr_list:REG_NOALIAS (reg/f:SI 112)
        (nil)))

(insn 32 31 0 (set (reg/f:SI 92 [ _18 ])
        (reg/f:SI 112)) dictionary.c:19 -1
     (nil))

;; word_6(D)->meaning = _18;

(insn 33 32 34 (set (reg/f:SI 113)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [4 word+0 S4 A32])) dictionary.c:19 -1
     (nil))

(insn 34 33 0 (set (mem/f:SI (plus:SI (reg/f:SI 113)
                (const_int 16 [0x10])) [7 word_6(D)->meaning+0 S4 A32])
        (reg/f:SI 92 [ _18 ])) dictionary.c:19 -1
     (nil))

;; _20 = word_6(D)->infinitive;

(insn 35 34 36 (set (reg/f:SI 114)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [4 word+0 S4 A32])) dictionary.c:21 -1
     (nil))

(insn 36 35 0 (set (reg/f:SI 93 [ _20 ])
        (mem/f:SI (plus:SI (reg/f:SI 114)
                (const_int 4 [0x4])) [7 word_6(D)->infinitive+0 S4 A32])) dictionary.c:21 -1
     (nil))

;; if (_20 == 0B)

(insn 37 36 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 93 [ _20 ])
            (const_int 0 [0]))) dictionary.c:21 -1
     (nil))

(jump_insn 38 37 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) dictionary.c:21 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _21 = word_6(D)->simple_past;

(insn 40 39 41 (set (reg/f:SI 115)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [4 word+0 S4 A32])) dictionary.c:21 -1
     (nil))

(insn 41 40 0 (set (reg/f:SI 94 [ _21 ])
        (mem/f:SI (plus:SI (reg/f:SI 115)
                (const_int 8 [0x8])) [7 word_6(D)->simple_past+0 S4 A32])) dictionary.c:21 -1
     (nil))

;; if (_21 == 0B)

(insn 42 41 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 94 [ _21 ])
            (const_int 0 [0]))) dictionary.c:21 -1
     (nil))

(jump_insn 43 42 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) dictionary.c:21 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _22 = word_6(D)->past_participle;

(insn 45 44 46 (set (reg/f:SI 116)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [4 word+0 S4 A32])) dictionary.c:21 -1
     (nil))

(insn 46 45 0 (set (reg/f:SI 95 [ _22 ])
        (mem/f:SI (plus:SI (reg/f:SI 116)
                (const_int 12 [0xc])) [7 word_6(D)->past_participle+0 S4 A32])) dictionary.c:21 -1
     (nil))

;; if (_22 == 0B)

(insn 47 46 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 95 [ _22 ])
            (const_int 0 [0]))) dictionary.c:21 -1
     (nil))

(jump_insn 48 47 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) dictionary.c:21 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _23 = word_6(D)->meaning;

(insn 50 49 51 (set (reg/f:SI 117)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [4 word+0 S4 A32])) dictionary.c:21 -1
     (nil))

(insn 51 50 0 (set (reg/f:SI 96 [ _23 ])
        (mem/f:SI (plus:SI (reg/f:SI 117)
                (const_int 16 [0x10])) [7 word_6(D)->meaning+0 S4 A32])) dictionary.c:21 -1
     (nil))

;; if (_23 == 0B)

(insn 52 51 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 96 [ _23 ])
            (const_int 0 [0]))) dictionary.c:21 -1
     (nil))

(jump_insn 53 52 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) dictionary.c:21 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; _24 = word_6(D)->verb;

(insn 55 54 56 (set (reg/f:SI 118)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [4 word+0 S4 A32])) dictionary.c:21 -1
     (nil))

(insn 56 55 0 (set (reg/f:SI 97 [ _24 ])
        (mem/f:SI (reg/f:SI 118) [7 word_6(D)->verb+0 S4 A32])) dictionary.c:21 -1
     (nil))

;; if (_24 == 0B)

(insn 57 56 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 97 [ _24 ])
            (const_int 0 [0]))) dictionary.c:21 -1
     (nil))

(jump_insn 58 57 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) dictionary.c:21 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 59 58 60 5 "" [0 uses])

(note 60 59 0 NOTE_INSN_BASIC_BLOCK)

;; _41 = 0;

(insn 61 60 0 (set (reg:SI 87 [ _1 ])
        (const_int 0 [0])) dictionary.c:22 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 64 63 65 6 "" [0 uses])

(note 65 64 0 NOTE_INSN_BASIC_BLOCK)

;; printf ("Digite o Verbo:");

(insn 66 65 67 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (symbol_ref/f:SI ("*LC0") [flags 0x2]  <var_decl 068ef420 *LC0>)) dictionary.c:23 -1
     (nil))

(call_insn 67 66 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 4 [0x4]))) dictionary.c:23 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

;; _26 = word_6(D)->verb;

(insn 68 67 69 (set (reg/f:SI 119)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [4 word+0 S4 A32])) dictionary.c:24 -1
     (nil))

(insn 69 68 0 (set (reg/f:SI 98 [ _26 ])
        (mem/f:SI (reg/f:SI 119) [7 word_6(D)->verb+0 S4 A32])) dictionary.c:24 -1
     (nil))

;; scanf (" %49[^\n]", _26);

(insn 70 69 71 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 98 [ _26 ])) dictionary.c:24 -1
     (nil))

(insn 71 70 72 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (symbol_ref/f:SI ("*LC1") [flags 0x2]  <var_decl 068ef5d8 *LC1>)) dictionary.c:24 -1
     (nil))

(call_insn 72 71 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("scanf") [flags 0x43]  <function_decl 77ed4700 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 8 [0x8]))) dictionary.c:24 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))

;; printf ("Digite o infinitivo: ");

(insn 73 72 74 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (symbol_ref/f:SI ("*LC2") [flags 0x2]  <var_decl 06915c08 *LC2>)) dictionary.c:25 -1
     (nil))

(call_insn 74 73 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 4 [0x4]))) dictionary.c:25 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

;; _29 = word_6(D)->infinitive;

(insn 75 74 76 (set (reg/f:SI 120)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [4 word+0 S4 A32])) dictionary.c:26 -1
     (nil))

(insn 76 75 0 (set (reg/f:SI 99 [ _29 ])
        (mem/f:SI (plus:SI (reg/f:SI 120)
                (const_int 4 [0x4])) [7 word_6(D)->infinitive+0 S4 A32])) dictionary.c:26 -1
     (nil))

;; scanf (" %49[^\n]", _29);

(insn 77 76 78 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 99 [ _29 ])) dictionary.c:26 -1
     (nil))

(insn 78 77 79 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (symbol_ref/f:SI ("*LC1") [flags 0x2]  <var_decl 068ef5d8 *LC1>)) dictionary.c:26 -1
     (nil))

(call_insn 79 78 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("scanf") [flags 0x43]  <function_decl 77ed4700 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 8 [0x8]))) dictionary.c:26 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))

;; printf ("Digite o passado simples: ");

(insn 80 79 81 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (symbol_ref/f:SI ("*LC3") [flags 0x2]  <var_decl 06915c60 *LC3>)) dictionary.c:27 -1
     (nil))

(call_insn 81 80 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 4 [0x4]))) dictionary.c:27 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

;; _32 = word_6(D)->simple_past;

(insn 82 81 83 (set (reg/f:SI 121)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [4 word+0 S4 A32])) dictionary.c:28 -1
     (nil))

(insn 83 82 0 (set (reg/f:SI 100 [ _32 ])
        (mem/f:SI (plus:SI (reg/f:SI 121)
                (const_int 8 [0x8])) [7 word_6(D)->simple_past+0 S4 A32])) dictionary.c:28 -1
     (nil))

;; scanf (" %49[^\n]", _32);

(insn 84 83 85 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 100 [ _32 ])) dictionary.c:28 -1
     (nil))

(insn 85 84 86 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (symbol_ref/f:SI ("*LC1") [flags 0x2]  <var_decl 068ef5d8 *LC1>)) dictionary.c:28 -1
     (nil))

(call_insn 86 85 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("scanf") [flags 0x43]  <function_decl 77ed4700 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 8 [0x8]))) dictionary.c:28 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))

;; printf ("Digite o particÃ­pio passado: ");

(insn 87 86 88 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (symbol_ref/f:SI ("*LC4") [flags 0x2]  <var_decl 06915cb8 *LC4>)) dictionary.c:29 -1
     (nil))

(call_insn 88 87 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 4 [0x4]))) dictionary.c:29 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

;; _35 = word_6(D)->past_participle;

(insn 89 88 90 (set (reg/f:SI 122)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [4 word+0 S4 A32])) dictionary.c:30 -1
     (nil))

(insn 90 89 0 (set (reg/f:SI 101 [ _35 ])
        (mem/f:SI (plus:SI (reg/f:SI 122)
                (const_int 12 [0xc])) [7 word_6(D)->past_participle+0 S4 A32])) dictionary.c:30 -1
     (nil))

;; scanf (" %49[^\n]", _35);

(insn 91 90 92 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 101 [ _35 ])) dictionary.c:30 -1
     (nil))

(insn 92 91 93 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (symbol_ref/f:SI ("*LC1") [flags 0x2]  <var_decl 068ef5d8 *LC1>)) dictionary.c:30 -1
     (nil))

(call_insn 93 92 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("scanf") [flags 0x43]  <function_decl 77ed4700 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 8 [0x8]))) dictionary.c:30 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))

;; printf ("Digite o significado: ");

(insn 94 93 95 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (symbol_ref/f:SI ("*LC5") [flags 0x2]  <var_decl 06915d10 *LC5>)) dictionary.c:31 -1
     (nil))

(call_insn 95 94 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 4 [0x4]))) dictionary.c:31 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

;; _38 = word_6(D)->meaning;

(insn 96 95 97 (set (reg/f:SI 123)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [4 word+0 S4 A32])) dictionary.c:32 -1
     (nil))

(insn 97 96 0 (set (reg/f:SI 102 [ _38 ])
        (mem/f:SI (plus:SI (reg/f:SI 123)
                (const_int 16 [0x10])) [7 word_6(D)->meaning+0 S4 A32])) dictionary.c:32 -1
     (nil))

;; scanf (" %99[^\n]", _38);

(insn 98 97 99 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 102 [ _38 ])) dictionary.c:32 -1
     (nil))

(insn 99 98 100 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (symbol_ref/f:SI ("*LC6") [flags 0x2]  <var_decl 06915d68 *LC6>)) dictionary.c:32 -1
     (nil))

(call_insn 100 99 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("scanf") [flags 0x43]  <function_decl 77ed4700 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 8 [0x8]))) dictionary.c:32 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))

;; _40 = 1;

(insn 101 100 0 (set (reg:SI 87 [ _1 ])
        (const_int 1 [0x1])) dictionary.c:34 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; <L6>:

(code_label 102 101 103 7 "" [0 uses])

(note 103 102 0 NOTE_INSN_BASIC_BLOCK)

;; return _1;

(insn 104 103 105 (set (reg:SI 103 [ <retval> ])
        (reg:SI 87 [ _1 ])) -1
     (nil))

(jump_insn 105 104 106 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 106 105 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 105.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (const_int 50 [0x32])) dictionary.c:15 -1
     (nil))
(call_insn 6 5 7 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x43]  <function_decl 77ea8f00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 4 [0x4]))) dictionary.c:15 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 7 6 8 2 (set (reg/f:SI 104)
        (reg:SI 0 ax)) dictionary.c:15 -1
     (expr_list:REG_NOALIAS (reg/f:SI 104)
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 88 [ _5 ])
        (reg/f:SI 104)) dictionary.c:15 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 105)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [4 word+0 S4 A32])) dictionary.c:15 -1
     (nil))
(insn 10 9 11 2 (set (mem/f:SI (reg/f:SI 105) [7 word_6(D)->verb+0 S4 A32])
        (reg/f:SI 88 [ _5 ])) dictionary.c:15 -1
     (nil))
(insn 11 10 12 2 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (const_int 50 [0x32])) dictionary.c:16 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x43]  <function_decl 77ea8f00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 4 [0x4]))) dictionary.c:16 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 13 12 14 2 (set (reg/f:SI 106)
        (reg:SI 0 ax)) dictionary.c:16 -1
     (expr_list:REG_NOALIAS (reg/f:SI 106)
        (nil)))
(insn 14 13 15 2 (set (reg/f:SI 89 [ _9 ])
        (reg/f:SI 106)) dictionary.c:16 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:SI 107)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [4 word+0 S4 A32])) dictionary.c:16 -1
     (nil))
(insn 16 15 17 2 (set (mem/f:SI (plus:SI (reg/f:SI 107)
                (const_int 4 [0x4])) [7 word_6(D)->infinitive+0 S4 A32])
        (reg/f:SI 89 [ _9 ])) dictionary.c:16 -1
     (nil))
(insn 17 16 18 2 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (const_int 50 [0x32])) dictionary.c:17 -1
     (nil))
(call_insn 18 17 19 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x43]  <function_decl 77ea8f00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 4 [0x4]))) dictionary.c:17 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 19 18 20 2 (set (reg/f:SI 108)
        (reg:SI 0 ax)) dictionary.c:17 -1
     (expr_list:REG_NOALIAS (reg/f:SI 108)
        (nil)))
(insn 20 19 21 2 (set (reg/f:SI 90 [ _12 ])
        (reg/f:SI 108)) dictionary.c:17 -1
     (nil))
(insn 21 20 22 2 (set (reg/f:SI 109)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [4 word+0 S4 A32])) dictionary.c:17 -1
     (nil))
(insn 22 21 23 2 (set (mem/f:SI (plus:SI (reg/f:SI 109)
                (const_int 8 [0x8])) [7 word_6(D)->simple_past+0 S4 A32])
        (reg/f:SI 90 [ _12 ])) dictionary.c:17 -1
     (nil))
(insn 23 22 24 2 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (const_int 50 [0x32])) dictionary.c:18 -1
     (nil))
(call_insn 24 23 25 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x43]  <function_decl 77ea8f00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 4 [0x4]))) dictionary.c:18 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 25 24 26 2 (set (reg/f:SI 110)
        (reg:SI 0 ax)) dictionary.c:18 -1
     (expr_list:REG_NOALIAS (reg/f:SI 110)
        (nil)))
(insn 26 25 27 2 (set (reg/f:SI 91 [ _15 ])
        (reg/f:SI 110)) dictionary.c:18 -1
     (nil))
(insn 27 26 28 2 (set (reg/f:SI 111)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [4 word+0 S4 A32])) dictionary.c:18 -1
     (nil))
(insn 28 27 29 2 (set (mem/f:SI (plus:SI (reg/f:SI 111)
                (const_int 12 [0xc])) [7 word_6(D)->past_participle+0 S4 A32])
        (reg/f:SI 91 [ _15 ])) dictionary.c:18 -1
     (nil))
(insn 29 28 30 2 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (const_int 100 [0x64])) dictionary.c:19 -1
     (nil))
(call_insn 30 29 31 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x43]  <function_decl 77ea8f00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 4 [0x4]))) dictionary.c:19 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 31 30 32 2 (set (reg/f:SI 112)
        (reg:SI 0 ax)) dictionary.c:19 -1
     (expr_list:REG_NOALIAS (reg/f:SI 112)
        (nil)))
(insn 32 31 33 2 (set (reg/f:SI 92 [ _18 ])
        (reg/f:SI 112)) dictionary.c:19 -1
     (nil))
(insn 33 32 34 2 (set (reg/f:SI 113)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [4 word+0 S4 A32])) dictionary.c:19 -1
     (nil))
(insn 34 33 35 2 (set (mem/f:SI (plus:SI (reg/f:SI 113)
                (const_int 16 [0x10])) [7 word_6(D)->meaning+0 S4 A32])
        (reg/f:SI 92 [ _18 ])) dictionary.c:19 -1
     (nil))
(insn 35 34 36 2 (set (reg/f:SI 114)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [4 word+0 S4 A32])) dictionary.c:21 -1
     (nil))
(insn 36 35 37 2 (set (reg/f:SI 93 [ _20 ])
        (mem/f:SI (plus:SI (reg/f:SI 114)
                (const_int 4 [0x4])) [7 word_6(D)->infinitive+0 S4 A32])) dictionary.c:21 -1
     (nil))
(insn 37 36 38 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 93 [ _20 ])
            (const_int 0 [0]))) dictionary.c:21 -1
     (nil))
(jump_insn 38 37 39 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) dictionary.c:21 -1
     (nil)
 -> 59)
;;  succ:       8
;;              4 (FALLTHRU)

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 39 38 40 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 4 (set (reg/f:SI 115)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [4 word+0 S4 A32])) dictionary.c:21 -1
     (nil))
(insn 41 40 42 4 (set (reg/f:SI 94 [ _21 ])
        (mem/f:SI (plus:SI (reg/f:SI 115)
                (const_int 8 [0x8])) [7 word_6(D)->simple_past+0 S4 A32])) dictionary.c:21 -1
     (nil))
(insn 42 41 43 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 94 [ _21 ])
            (const_int 0 [0]))) dictionary.c:21 -1
     (nil))
(jump_insn 43 42 44 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) dictionary.c:21 -1
     (nil)
 -> 59)
;;  succ:       8
;;              5 (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 44 43 45 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 5 (set (reg/f:SI 116)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [4 word+0 S4 A32])) dictionary.c:21 -1
     (nil))
(insn 46 45 47 5 (set (reg/f:SI 95 [ _22 ])
        (mem/f:SI (plus:SI (reg/f:SI 116)
                (const_int 12 [0xc])) [7 word_6(D)->past_participle+0 S4 A32])) dictionary.c:21 -1
     (nil))
(insn 47 46 48 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 95 [ _22 ])
            (const_int 0 [0]))) dictionary.c:21 -1
     (nil))
(jump_insn 48 47 49 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) dictionary.c:21 -1
     (nil)
 -> 59)
;;  succ:       8
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 49 48 50 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 6 (set (reg/f:SI 117)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [4 word+0 S4 A32])) dictionary.c:21 -1
     (nil))
(insn 51 50 52 6 (set (reg/f:SI 96 [ _23 ])
        (mem/f:SI (plus:SI (reg/f:SI 117)
                (const_int 16 [0x10])) [7 word_6(D)->meaning+0 S4 A32])) dictionary.c:21 -1
     (nil))
(insn 52 51 53 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 96 [ _23 ])
            (const_int 0 [0]))) dictionary.c:21 -1
     (nil))
(jump_insn 53 52 54 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) dictionary.c:21 -1
     (nil)
 -> 59)
;;  succ:       8
;;              7 (FALLTHRU)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 54 53 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 7 (set (reg/f:SI 118)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [4 word+0 S4 A32])) dictionary.c:21 -1
     (nil))
(insn 56 55 57 7 (set (reg/f:SI 97 [ _24 ])
        (mem/f:SI (reg/f:SI 118) [7 word_6(D)->verb+0 S4 A32])) dictionary.c:21 -1
     (nil))
(insn 57 56 58 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 97 [ _24 ])
            (const_int 0 [0]))) dictionary.c:21 -1
     (nil))
(jump_insn 58 57 59 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) dictionary.c:21 -1
     (nil)
 -> 64)
;;  succ:       8 (FALLTHRU)
;;              9

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4
;;              5
;;              6
;;              7 (FALLTHRU)
(code_label 59 58 60 8 5 "" [4 uses])
(note 60 59 61 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 8 (set (reg:SI 87 [ _1 ])
        (const_int 0 [0])) dictionary.c:22 -1
     (nil))
(jump_insn 62 61 63 8 (set (pc)
        (label_ref 102)) dictionary.c:22 -1
     (nil)
 -> 102)
;;  succ:       10

(barrier 63 62 64)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 64 63 65 9 6 "" [1 uses])
(note 65 64 66 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 9 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (symbol_ref/f:SI ("*LC0") [flags 0x2]  <var_decl 068ef420 *LC0>)) dictionary.c:23 -1
     (nil))
(call_insn 67 66 68 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 4 [0x4]))) dictionary.c:23 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 68 67 69 9 (set (reg/f:SI 119)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [4 word+0 S4 A32])) dictionary.c:24 -1
     (nil))
(insn 69 68 70 9 (set (reg/f:SI 98 [ _26 ])
        (mem/f:SI (reg/f:SI 119) [7 word_6(D)->verb+0 S4 A32])) dictionary.c:24 -1
     (nil))
(insn 70 69 71 9 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 98 [ _26 ])) dictionary.c:24 -1
     (nil))
(insn 71 70 72 9 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (symbol_ref/f:SI ("*LC1") [flags 0x2]  <var_decl 068ef5d8 *LC1>)) dictionary.c:24 -1
     (nil))
(call_insn 72 71 73 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("scanf") [flags 0x43]  <function_decl 77ed4700 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 8 [0x8]))) dictionary.c:24 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 73 72 74 9 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (symbol_ref/f:SI ("*LC2") [flags 0x2]  <var_decl 06915c08 *LC2>)) dictionary.c:25 -1
     (nil))
(call_insn 74 73 75 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 4 [0x4]))) dictionary.c:25 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 75 74 76 9 (set (reg/f:SI 120)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [4 word+0 S4 A32])) dictionary.c:26 -1
     (nil))
(insn 76 75 77 9 (set (reg/f:SI 99 [ _29 ])
        (mem/f:SI (plus:SI (reg/f:SI 120)
                (const_int 4 [0x4])) [7 word_6(D)->infinitive+0 S4 A32])) dictionary.c:26 -1
     (nil))
(insn 77 76 78 9 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 99 [ _29 ])) dictionary.c:26 -1
     (nil))
(insn 78 77 79 9 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (symbol_ref/f:SI ("*LC1") [flags 0x2]  <var_decl 068ef5d8 *LC1>)) dictionary.c:26 -1
     (nil))
(call_insn 79 78 80 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("scanf") [flags 0x43]  <function_decl 77ed4700 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 8 [0x8]))) dictionary.c:26 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 80 79 81 9 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (symbol_ref/f:SI ("*LC3") [flags 0x2]  <var_decl 06915c60 *LC3>)) dictionary.c:27 -1
     (nil))
(call_insn 81 80 82 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 4 [0x4]))) dictionary.c:27 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 82 81 83 9 (set (reg/f:SI 121)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [4 word+0 S4 A32])) dictionary.c:28 -1
     (nil))
(insn 83 82 84 9 (set (reg/f:SI 100 [ _32 ])
        (mem/f:SI (plus:SI (reg/f:SI 121)
                (const_int 8 [0x8])) [7 word_6(D)->simple_past+0 S4 A32])) dictionary.c:28 -1
     (nil))
(insn 84 83 85 9 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 100 [ _32 ])) dictionary.c:28 -1
     (nil))
(insn 85 84 86 9 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (symbol_ref/f:SI ("*LC1") [flags 0x2]  <var_decl 068ef5d8 *LC1>)) dictionary.c:28 -1
     (nil))
(call_insn 86 85 87 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("scanf") [flags 0x43]  <function_decl 77ed4700 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 8 [0x8]))) dictionary.c:28 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 87 86 88 9 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (symbol_ref/f:SI ("*LC4") [flags 0x2]  <var_decl 06915cb8 *LC4>)) dictionary.c:29 -1
     (nil))
(call_insn 88 87 89 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 4 [0x4]))) dictionary.c:29 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 89 88 90 9 (set (reg/f:SI 122)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [4 word+0 S4 A32])) dictionary.c:30 -1
     (nil))
(insn 90 89 91 9 (set (reg/f:SI 101 [ _35 ])
        (mem/f:SI (plus:SI (reg/f:SI 122)
                (const_int 12 [0xc])) [7 word_6(D)->past_participle+0 S4 A32])) dictionary.c:30 -1
     (nil))
(insn 91 90 92 9 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 101 [ _35 ])) dictionary.c:30 -1
     (nil))
(insn 92 91 93 9 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (symbol_ref/f:SI ("*LC1") [flags 0x2]  <var_decl 068ef5d8 *LC1>)) dictionary.c:30 -1
     (nil))
(call_insn 93 92 94 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("scanf") [flags 0x43]  <function_decl 77ed4700 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 8 [0x8]))) dictionary.c:30 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 94 93 95 9 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (symbol_ref/f:SI ("*LC5") [flags 0x2]  <var_decl 06915d10 *LC5>)) dictionary.c:31 -1
     (nil))
(call_insn 95 94 96 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 4 [0x4]))) dictionary.c:31 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 96 95 97 9 (set (reg/f:SI 123)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [4 word+0 S4 A32])) dictionary.c:32 -1
     (nil))
(insn 97 96 98 9 (set (reg/f:SI 102 [ _38 ])
        (mem/f:SI (plus:SI (reg/f:SI 123)
                (const_int 16 [0x10])) [7 word_6(D)->meaning+0 S4 A32])) dictionary.c:32 -1
     (nil))
(insn 98 97 99 9 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 102 [ _38 ])) dictionary.c:32 -1
     (nil))
(insn 99 98 100 9 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (symbol_ref/f:SI ("*LC6") [flags 0x2]  <var_decl 06915d68 *LC6>)) dictionary.c:32 -1
     (nil))
(call_insn 100 99 101 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("scanf") [flags 0x43]  <function_decl 77ed4700 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 8 [0x8]))) dictionary.c:32 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 101 100 102 9 (set (reg:SI 87 [ _1 ])
        (const_int 1 [0x1])) dictionary.c:34 -1
     (nil))
;;  succ:       10 (FALLTHRU)

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
;;              9 (FALLTHRU)
(code_label 102 101 103 10 7 "" [1 uses])
(note 103 102 104 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 108 10 (set (reg:SI 103 [ <retval> ])
        (reg:SI 87 [ _1 ])) -1
     (nil))
(insn 108 104 109 10 (set (reg/i:SI 0 ax)
        (reg:SI 103 [ <retval> ])) dictionary.c:35 -1
     (nil))
(insn 109 108 0 10 (use (reg/i:SI 0 ax)) dictionary.c:35 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)


;; Function InsertWord (InsertWord, funcdef_no=20, decl_uid=2600, cgraph_uid=20, symbol_order=20)

InsertWord (struct Node * * node, struct word * wrd)
{
  struct Node * new_node;
  struct node * * D.2683;
  struct Node * D.2682;
  int D.2679;
  int D.2676;
  struct Node * D.2673;
  int _1;
  struct Node * _5;
  int _8;
  int _9;
  int _12;
  int _16;
  struct Node * _17;
  struct node * * _18;
  int _20;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _5 = *node_4(D);
  if (_5 == 0B)
    goto <bb 3>;
  else
    goto <bb 8>;
;;    succ:       3
;;                8

;;   basic block 3, loop depth 0
;;    pred:       2
  _8 = CreateWord (wrd_6(D));
  if (_8 == 0)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  _9 = 0;
  goto <bb 9> (<L6>);
;;    succ:       9

;;   basic block 5, loop depth 0
;;    pred:       3
  new_node_11 = malloc (8);
  if (new_node_11 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  _12 = 0;
  goto <bb 9> (<L6>);
;;    succ:       9

;;   basic block 7, loop depth 0
;;    pred:       5
  new_node_11->info = wrd_6(D);
  new_node_11->prox = 0B;
  *node_4(D) = new_node_11;
  _16 = 1;
  goto <bb 9> (<L6>);
;;    succ:       9

;;   basic block 8, loop depth 0
;;    pred:       2
  _17 = *node_4(D);
  _18 = &_17->prox;
  _20 = InsertWord (_18, wrd_6(D));
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       4
;;                6
;;                7
;;                8
  # _1 = PHI <_9(4), _12(6), _16(7), _20(8)>
<L6>:
  return _1;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 4 (node_4(D) - 4 )
Partition 5 (_5 - 5 )
Partition 6 (wrd_6(D) - 6 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 11 (new_node_11 - 11 )
Partition 12 (_12 - 12 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 20 (_20 - 20 )
Partition 21 (_21(D) - 21 )


Partition map 

Partition 0 (_1 - 1 )
Partition 1 (node_4(D) - 4 )
Partition 2 (wrd_6(D) - 6 )
Partition 3 (_9 - 9 )
Partition 4 (_12 - 12 )
Partition 5 (_16 - 16 )
Partition 6 (_20 - 20 )
Partition 7 (_21(D) - 21 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (node_4(D) - 4 )
Partition 2 (wrd_6(D) - 6 )
Partition 3 (_9 - 9 )
Partition 4 (_12 - 12 )
Partition 5 (_16 - 16 )
Partition 6 (_20 - 20 )
Partition 7 (_21(D) - 21 )

Coalesce list: (1)_1 & (20)_20 [map: 0, 6] : Success -> 0
Coalesce list: (1)_1 & (16)_16 [map: 0, 5] : Success -> 0
Coalesce list: (1)_1 & (12)_12 [map: 0, 4] : Success -> 0
Coalesce list: (1)_1 & (9)_9 [map: 0, 3] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (_1 - 1 9 12 16 20 )
Partition 1 (node_4(D) - 4 )
Partition 2 (_5 - 5 )
Partition 3 (wrd_6(D) - 6 )
Partition 4 (_8 - 8 )
Partition 5 (new_node_11 - 11 )
Partition 6 (_17 - 17 )
Partition 7 (_18 - 18 )
Partition 8 (_21(D) - 21 )

InsertWord (struct Node * * node, struct word * wrd)
{
  struct Node * new_node;
  struct node * * D.2683;
  struct Node * D.2682;
  int D.2679;
  int D.2676;
  struct Node * D.2673;
  int _1;
  struct Node * _5;
  int _8;
  int _9;
  int _12;
  int _16;
  struct Node * _17;
  struct node * * _18;
  int _20;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _5 = *node_4(D);
  if (_5 == 0B)
    goto <bb 3>;
  else
    goto <bb 8>;
;;    succ:       3
;;                8

;;   basic block 3, loop depth 0
;;    pred:       2
  _8 = CreateWord (wrd_6(D));
  if (_8 == 0)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  _9 = 0;
  goto <bb 9> (<L6>);
;;    succ:       9

;;   basic block 5, loop depth 0
;;    pred:       3
  new_node_11 = malloc (8);
  if (new_node_11 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  _12 = 0;
  goto <bb 9> (<L6>);
;;    succ:       9

;;   basic block 7, loop depth 0
;;    pred:       5
  new_node_11->info = wrd_6(D);
  new_node_11->prox = 0B;
  *node_4(D) = new_node_11;
  _16 = 1;
  goto <bb 9> (<L6>);
;;    succ:       9

;;   basic block 8, loop depth 0
;;    pred:       2
  _17 = *node_4(D);
  _18 = &_17->prox;
  _20 = InsertWord (_18, wrd_6(D));
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       4
;;                6
;;                7
;;                8
  # _1 = PHI <_9(4), _12(6), _16(7), _20(8)>
<L6>:
  return _1;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _5 = *node_4(D);

(insn 5 4 6 (set (reg/f:SI 93)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [8 node+0 S4 A32])) dictionary.c:39 -1
     (nil))

(insn 6 5 0 (set (reg/f:SI 88 [ _5 ])
        (mem/f:SI (reg/f:SI 93) [3 *node_4(D)+0 S4 A32])) dictionary.c:39 -1
     (nil))

;; if (_5 == 0B)

(insn 7 6 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 88 [ _5 ])
            (const_int 0 [0]))) dictionary.c:39 -1
     (nil))

(jump_insn 8 7 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) dictionary.c:39 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _8 = CreateWord (wrd_6(D));

(insn 10 9 11 (set (reg/f:SI 94)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [4 wrd+0 S4 A32])) dictionary.c:40 -1
     (nil))

(insn 11 10 12 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 94)) dictionary.c:40 -1
     (nil))

(call_insn 12 11 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("CreateWord") [flags 0x3]  <function_decl 77ec9c80 CreateWord>) [0 CreateWord S1 A8])
            (const_int 4 [0x4]))) dictionary.c:40 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

(insn 13 12 0 (set (reg:SI 89 [ _8 ])
        (reg:SI 0 ax)) dictionary.c:40 -1
     (nil))

;; if (_8 == 0)

(insn 14 13 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _8 ])
            (const_int 0 [0]))) dictionary.c:40 -1
     (nil))

(jump_insn 15 14 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) dictionary.c:40 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _9 = 0;

(insn 17 16 0 (set (reg:SI 87 [ _1 ])
        (const_int 0 [0])) dictionary.c:41 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 20 19 21 10 "" [0 uses])

(note 21 20 0 NOTE_INSN_BASIC_BLOCK)

;; new_node_11 = malloc (8);

(insn 22 21 23 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (const_int 8 [0x8])) dictionary.c:42 -1
     (nil))

(call_insn 23 22 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x43]  <function_decl 77ea8f00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 4 [0x4]))) dictionary.c:42 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

(insn 24 23 25 (set (reg/f:SI 95)
        (reg:SI 0 ax)) dictionary.c:42 -1
     (expr_list:REG_NOALIAS (reg/f:SI 95)
        (nil)))

(insn 25 24 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 new_node+0 S4 A32])
        (reg/f:SI 95)) dictionary.c:42 -1
     (nil))

;; if (new_node_11 == 0B)

(insn 26 25 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 new_node+0 S4 A32])
            (const_int 0 [0]))) dictionary.c:43 -1
     (nil))

(jump_insn 27 26 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) dictionary.c:43 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; _12 = 0;

(insn 29 28 0 (set (reg:SI 87 [ _1 ])
        (const_int 0 [0])) dictionary.c:43 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 32 31 33 12 "" [0 uses])

(note 33 32 0 NOTE_INSN_BASIC_BLOCK)

;; new_node_11->info = wrd_6(D);

(insn 34 33 35 (set (reg/f:SI 96)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 new_node+0 S4 A32])) dictionary.c:45 -1
     (nil))

(insn 35 34 36 (set (reg/f:SI 97)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [4 wrd+0 S4 A32])) dictionary.c:45 -1
     (nil))

(insn 36 35 0 (set (mem/f:SI (plus:SI (reg/f:SI 96)
                (const_int 4 [0x4])) [4 new_node_11->info+0 S4 A32])
        (reg/f:SI 97)) dictionary.c:45 -1
     (nil))

;; new_node_11->prox = 0B;

(insn 37 36 38 (set (reg/f:SI 98)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 new_node+0 S4 A32])) dictionary.c:46 -1
     (nil))

(insn 38 37 0 (set (mem/f:SI (reg/f:SI 98) [3 new_node_11->prox+0 S4 A32])
        (const_int 0 [0])) dictionary.c:46 -1
     (nil))

;; *node_4(D) = new_node_11;

(insn 39 38 40 (set (reg/f:SI 99)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [8 node+0 S4 A32])) dictionary.c:47 -1
     (nil))

(insn 40 39 41 (set (reg/f:SI 100)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 new_node+0 S4 A32])) dictionary.c:47 -1
     (nil))

(insn 41 40 0 (set (mem/f:SI (reg/f:SI 99) [3 *node_4(D)+0 S4 A32])
        (reg/f:SI 100)) dictionary.c:47 -1
     (nil))

;; _16 = 1;

(insn 42 41 0 (set (reg:SI 87 [ _1 ])
        (const_int 1 [0x1])) dictionary.c:48 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 45 44 46 9 "" [0 uses])

(note 46 45 0 NOTE_INSN_BASIC_BLOCK)

;; _17 = *node_4(D);

(insn 47 46 48 (set (reg/f:SI 101)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [8 node+0 S4 A32])) dictionary.c:50 -1
     (nil))

(insn 48 47 0 (set (reg/f:SI 90 [ _17 ])
        (mem/f:SI (reg/f:SI 101) [3 *node_4(D)+0 S4 A32])) dictionary.c:50 -1
     (nil))

;; _18 = &_17->prox;

(insn 49 48 0 (set (reg/f:SI 91 [ _18 ])
        (reg/f:SI 90 [ _17 ])) dictionary.c:50 -1
     (nil))

;; _20 = InsertWord (_18, wrd_6(D));

(insn 50 49 51 (set (reg/f:SI 102)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [4 wrd+0 S4 A32])) dictionary.c:50 -1
     (nil))

(insn 51 50 52 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 102)) dictionary.c:50 -1
     (nil))

(insn 52 51 53 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 91 [ _18 ])) dictionary.c:50 -1
     (nil))

(call_insn 53 52 54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("InsertWord") [flags 0x3]  <function_decl 77ec9d00 InsertWord>) [0 InsertWord S1 A8])
            (const_int 8 [0x8]))) dictionary.c:50 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))

(insn 54 53 0 (set (reg:SI 87 [ _1 ])
        (reg:SI 0 ax)) dictionary.c:50 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; <L6>:

(code_label 55 54 56 11 "" [0 uses])

(note 56 55 0 NOTE_INSN_BASIC_BLOCK)

;; return _1;

(insn 57 56 58 (set (reg:SI 92 [ <retval> ])
        (reg:SI 87 [ _1 ])) -1
     (nil))

(jump_insn 58 57 59 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 59 58 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 58.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 93)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [8 node+0 S4 A32])) dictionary.c:39 -1
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 88 [ _5 ])
        (mem/f:SI (reg/f:SI 93) [3 *node_4(D)+0 S4 A32])) dictionary.c:39 -1
     (nil))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 88 [ _5 ])
            (const_int 0 [0]))) dictionary.c:39 -1
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) dictionary.c:39 -1
     (nil)
 -> 45)
;;  succ:       4 (FALLTHRU)
;;              9

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 9 8 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 4 (set (reg/f:SI 94)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [4 wrd+0 S4 A32])) dictionary.c:40 -1
     (nil))
(insn 11 10 12 4 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 94)) dictionary.c:40 -1
     (nil))
(call_insn 12 11 13 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("CreateWord") [flags 0x3]  <function_decl 77ec9c80 CreateWord>) [0 CreateWord S1 A8])
            (const_int 4 [0x4]))) dictionary.c:40 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 13 12 14 4 (set (reg:SI 89 [ _8 ])
        (reg:SI 0 ax)) dictionary.c:40 -1
     (nil))
(insn 14 13 15 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _8 ])
            (const_int 0 [0]))) dictionary.c:40 -1
     (nil))
(jump_insn 15 14 16 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) dictionary.c:40 -1
     (nil)
 -> 20)
;;  succ:       5 (FALLTHRU)
;;              6

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 16 15 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 5 (set (reg:SI 87 [ _1 ])
        (const_int 0 [0])) dictionary.c:41 -1
     (nil))
(jump_insn 18 17 19 5 (set (pc)
        (label_ref 55)) dictionary.c:41 -1
     (nil)
 -> 55)
;;  succ:       10

(barrier 19 18 20)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 20 19 21 6 10 "" [1 uses])
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (const_int 8 [0x8])) dictionary.c:42 -1
     (nil))
(call_insn 23 22 24 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x43]  <function_decl 77ea8f00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 4 [0x4]))) dictionary.c:42 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 24 23 25 6 (set (reg/f:SI 95)
        (reg:SI 0 ax)) dictionary.c:42 -1
     (expr_list:REG_NOALIAS (reg/f:SI 95)
        (nil)))
(insn 25 24 26 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 new_node+0 S4 A32])
        (reg/f:SI 95)) dictionary.c:42 -1
     (nil))
(insn 26 25 27 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 new_node+0 S4 A32])
            (const_int 0 [0]))) dictionary.c:43 -1
     (nil))
(jump_insn 27 26 28 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) dictionary.c:43 -1
     (nil)
 -> 32)
;;  succ:       7 (FALLTHRU)
;;              8

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 28 27 29 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 7 (set (reg:SI 87 [ _1 ])
        (const_int 0 [0])) dictionary.c:43 -1
     (nil))
(jump_insn 30 29 31 7 (set (pc)
        (label_ref 55)) dictionary.c:43 -1
     (nil)
 -> 55)
;;  succ:       10

(barrier 31 30 32)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
(code_label 32 31 33 8 12 "" [1 uses])
(note 33 32 34 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 8 (set (reg/f:SI 96)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 new_node+0 S4 A32])) dictionary.c:45 -1
     (nil))
(insn 35 34 36 8 (set (reg/f:SI 97)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [4 wrd+0 S4 A32])) dictionary.c:45 -1
     (nil))
(insn 36 35 37 8 (set (mem/f:SI (plus:SI (reg/f:SI 96)
                (const_int 4 [0x4])) [4 new_node_11->info+0 S4 A32])
        (reg/f:SI 97)) dictionary.c:45 -1
     (nil))
(insn 37 36 38 8 (set (reg/f:SI 98)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 new_node+0 S4 A32])) dictionary.c:46 -1
     (nil))
(insn 38 37 39 8 (set (mem/f:SI (reg/f:SI 98) [3 new_node_11->prox+0 S4 A32])
        (const_int 0 [0])) dictionary.c:46 -1
     (nil))
(insn 39 38 40 8 (set (reg/f:SI 99)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [8 node+0 S4 A32])) dictionary.c:47 -1
     (nil))
(insn 40 39 41 8 (set (reg/f:SI 100)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 new_node+0 S4 A32])) dictionary.c:47 -1
     (nil))
(insn 41 40 42 8 (set (mem/f:SI (reg/f:SI 99) [3 *node_4(D)+0 S4 A32])
        (reg/f:SI 100)) dictionary.c:47 -1
     (nil))
(insn 42 41 43 8 (set (reg:SI 87 [ _1 ])
        (const_int 1 [0x1])) dictionary.c:48 -1
     (nil))
(jump_insn 43 42 44 8 (set (pc)
        (label_ref 55)) dictionary.c:48 -1
     (nil)
 -> 55)
;;  succ:       10

(barrier 44 43 45)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 45 44 46 9 9 "" [1 uses])
(note 46 45 47 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 9 (set (reg/f:SI 101)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [8 node+0 S4 A32])) dictionary.c:50 -1
     (nil))
(insn 48 47 49 9 (set (reg/f:SI 90 [ _17 ])
        (mem/f:SI (reg/f:SI 101) [3 *node_4(D)+0 S4 A32])) dictionary.c:50 -1
     (nil))
(insn 49 48 50 9 (set (reg/f:SI 91 [ _18 ])
        (reg/f:SI 90 [ _17 ])) dictionary.c:50 -1
     (nil))
(insn 50 49 51 9 (set (reg/f:SI 102)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [4 wrd+0 S4 A32])) dictionary.c:50 -1
     (nil))
(insn 51 50 52 9 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 102)) dictionary.c:50 -1
     (nil))
(insn 52 51 53 9 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 91 [ _18 ])) dictionary.c:50 -1
     (nil))
(call_insn 53 52 54 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("InsertWord") [flags 0x3]  <function_decl 77ec9d00 InsertWord>) [0 InsertWord S1 A8])
            (const_int 8 [0x8]))) dictionary.c:50 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 54 53 55 9 (set (reg:SI 87 [ _1 ])
        (reg:SI 0 ax)) dictionary.c:50 -1
     (nil))
;;  succ:       10 (FALLTHRU)

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              7
;;              8
;;              9 (FALLTHRU)
(code_label 55 54 56 10 11 "" [3 uses])
(note 56 55 57 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 61 10 (set (reg:SI 92 [ <retval> ])
        (reg:SI 87 [ _1 ])) -1
     (nil))
(insn 61 57 62 10 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) dictionary.c:51 -1
     (nil))
(insn 62 61 0 10 (use (reg/i:SI 0 ax)) dictionary.c:51 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)


;; Function InsertDicionary (InsertDicionary, funcdef_no=21, decl_uid=2603, cgraph_uid=21, symbol_order=21)

InsertDicionary (struct dictionary * d, struct word * w)
{
  struct Node * * D.2686;
  int D.2685;
  struct Node * * _2;
  int _6;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = &d_1(D)->Head;
  _6 = InsertWord (_2, w_4(D));
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _6;
;;    succ:       EXIT

}



Partition map 

Partition 1 (d_1(D) - 1 )
Partition 2 (_2 - 2 )
Partition 4 (w_4(D) - 4 )
Partition 6 (_6 - 6 )
Partition 7 (_7(D) - 7 )


Partition map 

Partition 0 (d_1(D) - 1 )
Partition 1 (w_4(D) - 4 )
Partition 2 (_7(D) - 7 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (d_1(D) - 1 )
Partition 1 (w_4(D) - 4 )
Partition 2 (_7(D) - 7 )

After Coalescing:

Partition map 

Partition 0 (d_1(D) - 1 )
Partition 1 (_2 - 2 )
Partition 2 (w_4(D) - 4 )
Partition 3 (_6 - 6 )
Partition 4 (_7(D) - 7 )

InsertDicionary (struct dictionary * d, struct word * w)
{
  struct Node * * D.2686;
  int D.2685;
  struct Node * * _2;
  int _6;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = &d_1(D)->Head;
  _6 = InsertWord (_2, w_4(D));
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _6;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _2 = &d_1(D)->Head;

(insn 5 4 0 (set (reg/f:SI 87 [ _2 ])
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [1 d+0 S4 A32])) dictionary.c:55 -1
     (nil))

;; _6 = InsertWord (_2, w_4(D));

(insn 6 5 7 (set (reg/f:SI 90)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [4 w+0 S4 A32])) dictionary.c:55 -1
     (nil))

(insn 7 6 8 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 90)) dictionary.c:55 -1
     (nil))

(insn 8 7 9 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 87 [ _2 ])) dictionary.c:55 -1
     (nil))

(call_insn 9 8 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("InsertWord") [flags 0x3]  <function_decl 77ec9d00 InsertWord>) [0 InsertWord S1 A8])
            (const_int 8 [0x8]))) dictionary.c:55 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))

(insn 10 9 0 (set (reg:SI 88 [ _6 ])
        (reg:SI 0 ax)) dictionary.c:55 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 11 10 12 14 "" [0 uses])

(note 12 11 0 NOTE_INSN_BASIC_BLOCK)

;; return _6;

(insn 13 12 14 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ _6 ])) dictionary.c:55 -1
     (nil))

(jump_insn 14 13 15 (set (pc)
        (label_ref 0)) dictionary.c:55 -1
     (nil))

(barrier 15 14 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 14.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 87 [ _2 ])
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [1 d+0 S4 A32])) dictionary.c:55 -1
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 90)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [4 w+0 S4 A32])) dictionary.c:55 -1
     (nil))
(insn 7 6 8 2 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 90)) dictionary.c:55 -1
     (nil))
(insn 8 7 9 2 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 87 [ _2 ])) dictionary.c:55 -1
     (nil))
(call_insn 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("InsertWord") [flags 0x3]  <function_decl 77ec9d00 InsertWord>) [0 InsertWord S1 A8])
            (const_int 8 [0x8]))) dictionary.c:55 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 10 9 13 2 (set (reg:SI 88 [ _6 ])
        (reg:SI 0 ax)) dictionary.c:55 -1
     (nil))
(insn 13 10 17 2 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ _6 ])) dictionary.c:55 -1
     (nil))
(insn 17 13 18 2 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) dictionary.c:56 -1
     (nil))
(insn 18 17 0 2 (use (reg/i:SI 0 ax)) dictionary.c:56 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)


;; Function FreeVerbs (FreeVerbs, funcdef_no=22, decl_uid=2605, cgraph_uid=22, symbol_order=22)

FreeVerbs (struct dictionary * dictionary)
{
  struct Node * q;
  struct Node * p;
  int D.2699;
  struct word * D.2698;
  char * D.2697;
  struct word * D.2696;
  char * D.2695;
  struct word * D.2694;
  char * D.2693;
  struct word * D.2692;
  char * D.2691;
  struct word * D.2690;
  char * D.2689;
  struct word * D.2688;
  struct word * _8;
  char * _9;
  struct word * _11;
  char * _12;
  struct word * _14;
  char * _15;
  struct word * _17;
  char * _18;
  struct word * _20;
  char * _21;
  struct word * _23;
  int _27;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  p_5 = dictionary_4(D)->Head;
  goto <bb 4>;
;;    succ:       4

;;   basic block 3, loop depth 1
;;    pred:       4
  q_6 = p_1;
  p_7 = p_1->prox;
  _8 = q_6->info;
  _9 = _8->infinitive;
  free (_9);
  _11 = q_6->info;
  _12 = _11->meaning;
  free (_12);
  _14 = q_6->info;
  _15 = _14->past_participle;
  free (_15);
  _17 = q_6->info;
  _18 = _17->simple_past;
  free (_18);
  _20 = q_6->info;
  _21 = _20->verb;
  free (_21);
  _23 = q_6->info;
  free (_23);
  free (q_6);
;;    succ:       4

;;   basic block 4, loop depth 1
;;    pred:       2
;;                3
  # p_1 = PHI <p_5(2), p_7(3)>
  if (p_1 != 0B)
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  dictionary_4(D)->Head = 0B;
  _27 = 1;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       5
<L3>:
  return _27;
;;    succ:       EXIT

}



Partition map 

Partition 1 (p_1 - 1 )
Partition 4 (dictionary_4(D) - 4 )
Partition 5 (p_5 - 5 )
Partition 6 (q_6 - 6 )
Partition 7 (p_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 23 (_23 - 23 )
Partition 27 (_27 - 27 )
Partition 28 (_28(D) - 28 )


Partition map 

Partition 0 (p_1 - 1 )
Partition 1 (dictionary_4(D) - 4 )
Partition 2 (p_5 - 5 )
Partition 3 (p_7 - 7 )
Partition 4 (_28(D) - 28 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) p_1 <-> p_5
(2147483646, 0) p_1 <-> p_7

Partition map 

Partition 0 (p_1 - 1 )
Partition 1 (dictionary_4(D) - 4 )
Partition 2 (p_5 - 5 )
Partition 3 (p_7 - 7 )
Partition 4 (_28(D) - 28 )

Coalesce list: (1)p_1 & (5)p_5 [map: 0, 2] : Success -> 0
Coalesce list: (1)p_1 & (7)p_7 [map: 0, 3] : Success -> 0
Coalesce list: (1)p_1 & (7)p_1: Already Coalesced.
Coalesce list: (1)p_1 & (5)p_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (p_1 - 1 5 7 )
Partition 1 (dictionary_4(D) - 4 )
Partition 2 (q_6 - 6 )
Partition 3 (_8 - 8 )
Partition 4 (_9 - 9 )
Partition 5 (_11 - 11 )
Partition 6 (_12 - 12 )
Partition 7 (_14 - 14 )
Partition 8 (_15 - 15 )
Partition 9 (_17 - 17 )
Partition 10 (_18 - 18 )
Partition 11 (_20 - 20 )
Partition 12 (_21 - 21 )
Partition 13 (_23 - 23 )
Partition 14 (_27 - 27 )
Partition 15 (_28(D) - 28 )

FreeVerbs (struct dictionary * dictionary)
{
  struct Node * q;
  struct Node * p;
  int D.2699;
  struct word * D.2698;
  char * D.2697;
  struct word * D.2696;
  char * D.2695;
  struct word * D.2694;
  char * D.2693;
  struct word * D.2692;
  char * D.2691;
  struct word * D.2690;
  char * D.2689;
  struct word * D.2688;
  struct word * _8;
  char * _9;
  struct word * _11;
  char * _12;
  struct word * _14;
  char * _15;
  struct word * _17;
  char * _18;
  struct word * _20;
  char * _21;
  struct word * _23;
  int _27;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  p_5 = dictionary_4(D)->Head;
  goto <bb 4>;
;;    succ:       4

;;   basic block 3, loop depth 1
;;    pred:       4
  q_6 = p_1;
  p_7 = p_1->prox;
  _8 = q_6->info;
  _9 = _8->infinitive;
  free (_9);
  _11 = q_6->info;
  _12 = _11->meaning;
  free (_12);
  _14 = q_6->info;
  _15 = _14->past_participle;
  free (_15);
  _17 = q_6->info;
  _18 = _17->simple_past;
  free (_18);
  _20 = q_6->info;
  _21 = _20->verb;
  free (_21);
  _23 = q_6->info;
  free (_23);
  free (q_6);
;;    succ:       4

;;   basic block 4, loop depth 1
;;    pred:       2
;;                3
  # p_1 = PHI <p_5(2), p_7(3)>
  if (p_1 != 0B)
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  dictionary_4(D)->Head = 0B;
  _27 = 1;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       5
<L3>:
  return _27;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; p_5 = dictionary_4(D)->Head;

(insn 5 4 6 (set (reg/f:SI 100)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [1 dictionary+0 S4 A32])) dictionary.c:68 -1
     (nil))

(insn 6 5 7 (set (reg/f:SI 101)
        (mem/f:SI (reg/f:SI 100) [3 dictionary_4(D)->Head+0 S4 A32])) dictionary.c:68 -1
     (nil))

(insn 7 6 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])
        (reg/f:SI 101)) dictionary.c:68 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; q_6 = p_1;

(insn 11 10 12 (set (reg/f:SI 102)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])) dictionary.c:70 -1
     (nil))

(insn 12 11 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 q+0 S4 A32])
        (reg/f:SI 102)) dictionary.c:70 -1
     (nil))

;; p_7 = p_1->prox;

(insn 13 12 14 (set (reg/f:SI 103)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])) dictionary.c:71 -1
     (nil))

(insn 14 13 15 (set (reg/f:SI 104)
        (mem/f:SI (reg/f:SI 103) [3 p_1->prox+0 S4 A32])) dictionary.c:71 -1
     (nil))

(insn 15 14 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])
        (reg/f:SI 104)) dictionary.c:71 -1
     (nil))

;; _8 = q_6->info;

(insn 16 15 17 (set (reg/f:SI 105)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 q+0 S4 A32])) dictionary.c:73 -1
     (nil))

(insn 17 16 0 (set (reg/f:SI 87 [ _8 ])
        (mem/f:SI (plus:SI (reg/f:SI 105)
                (const_int 4 [0x4])) [4 q_6->info+0 S4 A32])) dictionary.c:73 -1
     (nil))

;; _9 = _8->infinitive;

(insn 18 17 0 (set (reg/f:SI 88 [ _9 ])
        (mem/f:SI (plus:SI (reg/f:SI 87 [ _8 ])
                (const_int 4 [0x4])) [7 _8->infinitive+0 S4 A32])) dictionary.c:73 -1
     (nil))

;; free (_9);

(insn 19 18 20 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 88 [ _9 ])) dictionary.c:73 -1
     (nil))

(call_insn 20 19 0 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:73 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

;; _11 = q_6->info;

(insn 21 20 22 (set (reg/f:SI 106)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 q+0 S4 A32])) dictionary.c:74 -1
     (nil))

(insn 22 21 0 (set (reg/f:SI 89 [ _11 ])
        (mem/f:SI (plus:SI (reg/f:SI 106)
                (const_int 4 [0x4])) [4 q_6->info+0 S4 A32])) dictionary.c:74 -1
     (nil))

;; _12 = _11->meaning;

(insn 23 22 0 (set (reg/f:SI 90 [ _12 ])
        (mem/f:SI (plus:SI (reg/f:SI 89 [ _11 ])
                (const_int 16 [0x10])) [7 _11->meaning+0 S4 A32])) dictionary.c:74 -1
     (nil))

;; free (_12);

(insn 24 23 25 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 90 [ _12 ])) dictionary.c:74 -1
     (nil))

(call_insn 25 24 0 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:74 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

;; _14 = q_6->info;

(insn 26 25 27 (set (reg/f:SI 107)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 q+0 S4 A32])) dictionary.c:75 -1
     (nil))

(insn 27 26 0 (set (reg/f:SI 91 [ _14 ])
        (mem/f:SI (plus:SI (reg/f:SI 107)
                (const_int 4 [0x4])) [4 q_6->info+0 S4 A32])) dictionary.c:75 -1
     (nil))

;; _15 = _14->past_participle;

(insn 28 27 0 (set (reg/f:SI 92 [ _15 ])
        (mem/f:SI (plus:SI (reg/f:SI 91 [ _14 ])
                (const_int 12 [0xc])) [7 _14->past_participle+0 S4 A32])) dictionary.c:75 -1
     (nil))

;; free (_15);

(insn 29 28 30 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 92 [ _15 ])) dictionary.c:75 -1
     (nil))

(call_insn 30 29 0 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:75 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

;; _17 = q_6->info;

(insn 31 30 32 (set (reg/f:SI 108)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 q+0 S4 A32])) dictionary.c:76 -1
     (nil))

(insn 32 31 0 (set (reg/f:SI 93 [ _17 ])
        (mem/f:SI (plus:SI (reg/f:SI 108)
                (const_int 4 [0x4])) [4 q_6->info+0 S4 A32])) dictionary.c:76 -1
     (nil))

;; _18 = _17->simple_past;

(insn 33 32 0 (set (reg/f:SI 94 [ _18 ])
        (mem/f:SI (plus:SI (reg/f:SI 93 [ _17 ])
                (const_int 8 [0x8])) [7 _17->simple_past+0 S4 A32])) dictionary.c:76 -1
     (nil))

;; free (_18);

(insn 34 33 35 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 94 [ _18 ])) dictionary.c:76 -1
     (nil))

(call_insn 35 34 0 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:76 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

;; _20 = q_6->info;

(insn 36 35 37 (set (reg/f:SI 109)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 q+0 S4 A32])) dictionary.c:77 -1
     (nil))

(insn 37 36 0 (set (reg/f:SI 95 [ _20 ])
        (mem/f:SI (plus:SI (reg/f:SI 109)
                (const_int 4 [0x4])) [4 q_6->info+0 S4 A32])) dictionary.c:77 -1
     (nil))

;; _21 = _20->verb;

(insn 38 37 0 (set (reg/f:SI 96 [ _21 ])
        (mem/f:SI (reg/f:SI 95 [ _20 ]) [7 _20->verb+0 S4 A32])) dictionary.c:77 -1
     (nil))

;; free (_21);

(insn 39 38 40 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 96 [ _21 ])) dictionary.c:77 -1
     (nil))

(call_insn 40 39 0 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:77 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

;; _23 = q_6->info;

(insn 41 40 42 (set (reg/f:SI 110)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 q+0 S4 A32])) dictionary.c:78 -1
     (nil))

(insn 42 41 0 (set (reg/f:SI 97 [ _23 ])
        (mem/f:SI (plus:SI (reg/f:SI 110)
                (const_int 4 [0x4])) [4 q_6->info+0 S4 A32])) dictionary.c:78 -1
     (nil))

;; free (_23);

(insn 43 42 44 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 97 [ _23 ])) dictionary.c:78 -1
     (nil))

(call_insn 44 43 0 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:78 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

;; free (q_6);

(insn 45 44 46 (set (reg/f:SI 111)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 q+0 S4 A32])) dictionary.c:79 -1
     (nil))

(insn 46 45 47 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 111)) dictionary.c:79 -1
     (nil))

(call_insn 47 46 0 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:79 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

;; Generating RTL for gimple basic block 4

;; 

(code_label 48 47 49 16 "" [0 uses])

(note 49 48 0 NOTE_INSN_BASIC_BLOCK)

;; if (p_1 != 0B)

(insn 51 49 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])
            (const_int 0 [0]))) dictionary.c:69 -1
     (nil))

(jump_insn 52 51 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) dictionary.c:69 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; dictionary_4(D)->Head = 0B;

(insn 54 53 55 (set (reg/f:SI 112)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [1 dictionary+0 S4 A32])) dictionary.c:82 -1
     (nil))

(insn 55 54 0 (set (mem/f:SI (reg/f:SI 112) [3 dictionary_4(D)->Head+0 S4 A32])
        (const_int 0 [0])) dictionary.c:82 -1
     (nil))

;; _27 = 1;

(insn 56 55 0 (set (reg:SI 98 [ _27 ])
        (const_int 1 [0x1])) dictionary.c:84 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; <L3>:

(code_label 57 56 58 18 "" [0 uses])

(note 58 57 0 NOTE_INSN_BASIC_BLOCK)

;; return _27;

(insn 59 58 60 (set (reg:SI 99 [ <retval> ])
        (reg:SI 98 [ _27 ])) dictionary.c:84 -1
     (nil))

(jump_insn 60 59 61 (set (pc)
        (label_ref 0)) dictionary.c:84 -1
     (nil))

(barrier 61 60 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Removing jump 60.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 100)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [1 dictionary+0 S4 A32])) dictionary.c:68 -1
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 101)
        (mem/f:SI (reg/f:SI 100) [3 dictionary_4(D)->Head+0 S4 A32])) dictionary.c:68 -1
     (nil))
(insn 7 6 8 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])
        (reg/f:SI 101)) dictionary.c:68 -1
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (label_ref 48)) dictionary.c:69 -1
     (nil)
 -> 48)
;;  succ:       5

(barrier 9 8 50)
;; basic block 4, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 50 9 10 4 17 "" [1 uses])
(note 10 50 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (reg/f:SI 102)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])) dictionary.c:70 -1
     (nil))
(insn 12 11 13 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 q+0 S4 A32])
        (reg/f:SI 102)) dictionary.c:70 -1
     (nil))
(insn 13 12 14 4 (set (reg/f:SI 103)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])) dictionary.c:71 -1
     (nil))
(insn 14 13 15 4 (set (reg/f:SI 104)
        (mem/f:SI (reg/f:SI 103) [3 p_1->prox+0 S4 A32])) dictionary.c:71 -1
     (nil))
(insn 15 14 16 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])
        (reg/f:SI 104)) dictionary.c:71 -1
     (nil))
(insn 16 15 17 4 (set (reg/f:SI 105)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 q+0 S4 A32])) dictionary.c:73 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:SI 87 [ _8 ])
        (mem/f:SI (plus:SI (reg/f:SI 105)
                (const_int 4 [0x4])) [4 q_6->info+0 S4 A32])) dictionary.c:73 -1
     (nil))
(insn 18 17 19 4 (set (reg/f:SI 88 [ _9 ])
        (mem/f:SI (plus:SI (reg/f:SI 87 [ _8 ])
                (const_int 4 [0x4])) [7 _8->infinitive+0 S4 A32])) dictionary.c:73 -1
     (nil))
(insn 19 18 20 4 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 88 [ _9 ])) dictionary.c:73 -1
     (nil))
(call_insn 20 19 21 4 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:73 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 21 20 22 4 (set (reg/f:SI 106)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 q+0 S4 A32])) dictionary.c:74 -1
     (nil))
(insn 22 21 23 4 (set (reg/f:SI 89 [ _11 ])
        (mem/f:SI (plus:SI (reg/f:SI 106)
                (const_int 4 [0x4])) [4 q_6->info+0 S4 A32])) dictionary.c:74 -1
     (nil))
(insn 23 22 24 4 (set (reg/f:SI 90 [ _12 ])
        (mem/f:SI (plus:SI (reg/f:SI 89 [ _11 ])
                (const_int 16 [0x10])) [7 _11->meaning+0 S4 A32])) dictionary.c:74 -1
     (nil))
(insn 24 23 25 4 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 90 [ _12 ])) dictionary.c:74 -1
     (nil))
(call_insn 25 24 26 4 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:74 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 26 25 27 4 (set (reg/f:SI 107)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 q+0 S4 A32])) dictionary.c:75 -1
     (nil))
(insn 27 26 28 4 (set (reg/f:SI 91 [ _14 ])
        (mem/f:SI (plus:SI (reg/f:SI 107)
                (const_int 4 [0x4])) [4 q_6->info+0 S4 A32])) dictionary.c:75 -1
     (nil))
(insn 28 27 29 4 (set (reg/f:SI 92 [ _15 ])
        (mem/f:SI (plus:SI (reg/f:SI 91 [ _14 ])
                (const_int 12 [0xc])) [7 _14->past_participle+0 S4 A32])) dictionary.c:75 -1
     (nil))
(insn 29 28 30 4 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 92 [ _15 ])) dictionary.c:75 -1
     (nil))
(call_insn 30 29 31 4 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:75 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 31 30 32 4 (set (reg/f:SI 108)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 q+0 S4 A32])) dictionary.c:76 -1
     (nil))
(insn 32 31 33 4 (set (reg/f:SI 93 [ _17 ])
        (mem/f:SI (plus:SI (reg/f:SI 108)
                (const_int 4 [0x4])) [4 q_6->info+0 S4 A32])) dictionary.c:76 -1
     (nil))
(insn 33 32 34 4 (set (reg/f:SI 94 [ _18 ])
        (mem/f:SI (plus:SI (reg/f:SI 93 [ _17 ])
                (const_int 8 [0x8])) [7 _17->simple_past+0 S4 A32])) dictionary.c:76 -1
     (nil))
(insn 34 33 35 4 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 94 [ _18 ])) dictionary.c:76 -1
     (nil))
(call_insn 35 34 36 4 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:76 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 36 35 37 4 (set (reg/f:SI 109)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 q+0 S4 A32])) dictionary.c:77 -1
     (nil))
(insn 37 36 38 4 (set (reg/f:SI 95 [ _20 ])
        (mem/f:SI (plus:SI (reg/f:SI 109)
                (const_int 4 [0x4])) [4 q_6->info+0 S4 A32])) dictionary.c:77 -1
     (nil))
(insn 38 37 39 4 (set (reg/f:SI 96 [ _21 ])
        (mem/f:SI (reg/f:SI 95 [ _20 ]) [7 _20->verb+0 S4 A32])) dictionary.c:77 -1
     (nil))
(insn 39 38 40 4 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 96 [ _21 ])) dictionary.c:77 -1
     (nil))
(call_insn 40 39 41 4 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:77 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 41 40 42 4 (set (reg/f:SI 110)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 q+0 S4 A32])) dictionary.c:78 -1
     (nil))
(insn 42 41 43 4 (set (reg/f:SI 97 [ _23 ])
        (mem/f:SI (plus:SI (reg/f:SI 110)
                (const_int 4 [0x4])) [4 q_6->info+0 S4 A32])) dictionary.c:78 -1
     (nil))
(insn 43 42 44 4 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 97 [ _23 ])) dictionary.c:78 -1
     (nil))
(call_insn 44 43 45 4 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:78 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 45 44 46 4 (set (reg/f:SI 111)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 q+0 S4 A32])) dictionary.c:79 -1
     (nil))
(insn 46 45 47 4 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 111)) dictionary.c:79 -1
     (nil))
(call_insn 47 46 48 4 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:79 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
;;  succ:       5 (FALLTHRU,DFS_BACK)

;; basic block 5, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU,DFS_BACK)
(code_label 48 47 49 5 16 "" [1 uses])
(note 49 48 51 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 51 49 52 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])
            (const_int 0 [0]))) dictionary.c:69 -1
     (nil))
(jump_insn 52 51 53 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) dictionary.c:69 -1
     (nil)
 -> 50)
;;  succ:       4
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 53 52 54 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 6 (set (reg/f:SI 112)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [1 dictionary+0 S4 A32])) dictionary.c:82 -1
     (nil))
(insn 55 54 56 6 (set (mem/f:SI (reg/f:SI 112) [3 dictionary_4(D)->Head+0 S4 A32])
        (const_int 0 [0])) dictionary.c:82 -1
     (nil))
(insn 56 55 59 6 (set (reg:SI 98 [ _27 ])
        (const_int 1 [0x1])) dictionary.c:84 -1
     (nil))
(insn 59 56 63 6 (set (reg:SI 99 [ <retval> ])
        (reg:SI 98 [ _27 ])) dictionary.c:84 -1
     (nil))
(insn 63 59 64 6 (set (reg/i:SI 0 ax)
        (reg:SI 99 [ <retval> ])) dictionary.c:85 -1
     (nil))
(insn 64 63 0 6 (use (reg/i:SI 0 ax)) dictionary.c:85 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)


;; Function Show (Show, funcdef_no=23, decl_uid=2607, cgraph_uid=23, symbol_order=23)

Show (struct dictionary * d)
{
  struct Node * p;
  char * D.2715;
  struct word * D.2714;
  char * D.2713;
  struct word * D.2712;
  char * D.2711;
  struct word * D.2710;
  char * D.2709;
  struct word * D.2708;
  char * D.2707;
  struct word * D.2706;
  int D.2705;
  int D.2702;
  struct Node * D.2701;
  struct Node * _5;
  int _7;
  struct word * _9;
  char * _10;
  struct word * _12;
  char * _13;
  struct word * _15;
  char * _16;
  struct word * _18;
  char * _19;
  struct word * _21;
  char * _22;
  int _25;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _5 = d_4(D)->Head;
  _7 = Empty (_5);
  if (_7 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _25 = 0;
  goto <bb 8> (<L5>);
;;    succ:       8

;;   basic block 4, loop depth 0
;;    pred:       2
  p_8 = d_4(D)->Head;
  goto <bb 6>;
;;    succ:       6

;;   basic block 5, loop depth 1
;;    pred:       6
  _9 = p_1->info;
  _10 = _9->verb;
  printf ("verbo: %s\n", _10);
  _12 = p_1->info;
  _13 = _12->infinitive;
  printf ("infinitivo: %s\n", _13);
  _15 = p_1->info;
  _16 = _15->simple_past;
  printf ("passado simples: %s\n", _16);
  _18 = p_1->info;
  _19 = _18->past_participle;
  printf ("particÃ­pio passado: %s\n", _19);
  _21 = p_1->info;
  _22 = _21->meaning;
  printf ("significado: %s\n", _22);
  p_24 = p_1->prox;
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       4
;;                5
  # p_1 = PHI <p_8(4), p_24(5)>
  if (p_1 != 0B)
    goto <bb 5>;
  else
    goto <bb 7>;
;;    succ:       5
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  return;
;;    succ:       EXIT

;;   basic block 8, loop depth 0
;;    pred:       3
<L5>:
  return _25;
;;    succ:       EXIT

}



Partition map 

Partition 1 (p_1 - 1 )
Partition 4 (d_4(D) - 4 )
Partition 5 (_5 - 5 )
Partition 7 (_7 - 7 )
Partition 8 (p_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 24 (p_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26(D) - 26 )


Partition map 

Partition 0 (p_1 - 1 )
Partition 1 (d_4(D) - 4 )
Partition 2 (p_8 - 8 )
Partition 3 (p_24 - 24 )
Partition 4 (_26(D) - 26 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) p_1 <-> p_8
(2147483646, 0) p_1 <-> p_24

Partition map 

Partition 0 (p_1 - 1 )
Partition 1 (d_4(D) - 4 )
Partition 2 (p_8 - 8 )
Partition 3 (p_24 - 24 )
Partition 4 (_26(D) - 26 )

Coalesce list: (1)p_1 & (8)p_8 [map: 0, 2] : Success -> 0
Coalesce list: (1)p_1 & (24)p_24 [map: 0, 3] : Success -> 0
Coalesce list: (1)p_1 & (24)p_1: Already Coalesced.
Coalesce list: (1)p_1 & (8)p_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (p_1 - 1 8 24 )
Partition 1 (d_4(D) - 4 )
Partition 2 (_5 - 5 )
Partition 3 (_7 - 7 )
Partition 4 (_9 - 9 )
Partition 5 (_10 - 10 )
Partition 6 (_12 - 12 )
Partition 7 (_13 - 13 )
Partition 8 (_15 - 15 )
Partition 9 (_16 - 16 )
Partition 10 (_18 - 18 )
Partition 11 (_19 - 19 )
Partition 12 (_21 - 21 )
Partition 13 (_22 - 22 )
Partition 14 (_25 - 25 )
Partition 15 (_26(D) - 26 )

Show (struct dictionary * d)
{
  struct Node * p;
  char * D.2715;
  struct word * D.2714;
  char * D.2713;
  struct word * D.2712;
  char * D.2711;
  struct word * D.2710;
  char * D.2709;
  struct word * D.2708;
  char * D.2707;
  struct word * D.2706;
  int D.2705;
  int D.2702;
  struct Node * D.2701;
  struct Node * _5;
  int _7;
  struct word * _9;
  char * _10;
  struct word * _12;
  char * _13;
  struct word * _15;
  char * _16;
  struct word * _18;
  char * _19;
  struct word * _21;
  char * _22;
  int _25;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _5 = d_4(D)->Head;
  _7 = Empty (_5);
  if (_7 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _25 = 0;
  goto <bb 8> (<L5>);
;;    succ:       8

;;   basic block 4, loop depth 0
;;    pred:       2
  p_8 = d_4(D)->Head;
  goto <bb 6>;
;;    succ:       6

;;   basic block 5, loop depth 1
;;    pred:       6
  _9 = p_1->info;
  _10 = _9->verb;
  printf ("verbo: %s\n", _10);
  _12 = p_1->info;
  _13 = _12->infinitive;
  printf ("infinitivo: %s\n", _13);
  _15 = p_1->info;
  _16 = _15->simple_past;
  printf ("passado simples: %s\n", _16);
  _18 = p_1->info;
  _19 = _18->past_participle;
  printf ("particÃ­pio passado: %s\n", _19);
  _21 = p_1->info;
  _22 = _21->meaning;
  printf ("significado: %s\n", _22);
  p_24 = p_1->prox;
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       4
;;                5
  # p_1 = PHI <p_8(4), p_24(5)>
  if (p_1 != 0B)
    goto <bb 5>;
  else
    goto <bb 7>;
;;    succ:       5
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  return;
;;    succ:       EXIT

;;   basic block 8, loop depth 0
;;    pred:       3
<L5>:
  return _25;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _5 = d_4(D)->Head;

(insn 5 4 6 (set (reg/f:SI 101)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [1 d+0 S4 A32])) dictionary.c:88 -1
     (nil))

(insn 6 5 0 (set (reg/f:SI 87 [ _5 ])
        (mem/f:SI (reg/f:SI 101) [3 d_4(D)->Head+0 S4 A32])) dictionary.c:88 -1
     (nil))

;; _7 = Empty (_5);

(insn 7 6 8 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 87 [ _5 ])) dictionary.c:88 -1
     (nil))

(call_insn 8 7 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("Empty") [flags 0x3]  <function_decl 77eb6780 Empty>) [0 Empty S1 A8])
            (const_int 4 [0x4]))) dictionary.c:88 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

(insn 9 8 0 (set (reg:SI 88 [ _7 ])
        (reg:SI 0 ax)) dictionary.c:88 -1
     (nil))

;; if (_7 != 0)

(insn 10 9 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ _7 ])
            (const_int 0 [0]))) dictionary.c:88 -1
     (nil))

(jump_insn 11 10 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) dictionary.c:88 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _25 = 0;

(insn 13 12 0 (set (reg:SI 99 [ _25 ])
        (const_int 0 [0])) dictionary.c:89 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 16 15 17 20 "" [0 uses])

(note 17 16 0 NOTE_INSN_BASIC_BLOCK)

;; p_8 = d_4(D)->Head;

(insn 18 17 19 (set (reg/f:SI 102)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [1 d+0 S4 A32])) dictionary.c:92 -1
     (nil))

(insn 19 18 20 (set (reg/f:SI 103)
        (mem/f:SI (reg/f:SI 102) [3 d_4(D)->Head+0 S4 A32])) dictionary.c:92 -1
     (nil))

(insn 20 19 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])
        (reg/f:SI 103)) dictionary.c:92 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _9 = p_1->info;

(insn 24 23 25 (set (reg/f:SI 104)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])) dictionary.c:93 -1
     (nil))

(insn 25 24 0 (set (reg/f:SI 89 [ _9 ])
        (mem/f:SI (plus:SI (reg/f:SI 104)
                (const_int 4 [0x4])) [4 p_1->info+0 S4 A32])) dictionary.c:93 -1
     (nil))

;; _10 = _9->verb;

(insn 26 25 0 (set (reg/f:SI 90 [ _10 ])
        (mem/f:SI (reg/f:SI 89 [ _9 ]) [7 _9->verb+0 S4 A32])) dictionary.c:93 -1
     (nil))

;; printf ("verbo: %s\n", _10);

(insn 27 26 28 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 90 [ _10 ])) dictionary.c:93 -1
     (nil))

(insn 28 27 29 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (symbol_ref/f:SI ("*LC7") [flags 0x2]  <var_decl 068efe70 *LC7>)) dictionary.c:93 -1
     (nil))

(call_insn 29 28 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) dictionary.c:93 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))

;; _12 = p_1->info;

(insn 30 29 31 (set (reg/f:SI 105)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])) dictionary.c:94 -1
     (nil))

(insn 31 30 0 (set (reg/f:SI 91 [ _12 ])
        (mem/f:SI (plus:SI (reg/f:SI 105)
                (const_int 4 [0x4])) [4 p_1->info+0 S4 A32])) dictionary.c:94 -1
     (nil))

;; _13 = _12->infinitive;

(insn 32 31 0 (set (reg/f:SI 92 [ _13 ])
        (mem/f:SI (plus:SI (reg/f:SI 91 [ _12 ])
                (const_int 4 [0x4])) [7 _12->infinitive+0 S4 A32])) dictionary.c:94 -1
     (nil))

;; printf ("infinitivo: %s\n", _13);

(insn 33 32 34 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 92 [ _13 ])) dictionary.c:94 -1
     (nil))

(insn 34 33 35 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (symbol_ref/f:SI ("*LC8") [flags 0x2]  <var_decl 06915dc0 *LC8>)) dictionary.c:94 -1
     (nil))

(call_insn 35 34 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) dictionary.c:94 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))

;; _15 = p_1->info;

(insn 36 35 37 (set (reg/f:SI 106)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])) dictionary.c:95 -1
     (nil))

(insn 37 36 0 (set (reg/f:SI 93 [ _15 ])
        (mem/f:SI (plus:SI (reg/f:SI 106)
                (const_int 4 [0x4])) [4 p_1->info+0 S4 A32])) dictionary.c:95 -1
     (nil))

;; _16 = _15->simple_past;

(insn 38 37 0 (set (reg/f:SI 94 [ _16 ])
        (mem/f:SI (plus:SI (reg/f:SI 93 [ _15 ])
                (const_int 8 [0x8])) [7 _15->simple_past+0 S4 A32])) dictionary.c:95 -1
     (nil))

;; printf ("passado simples: %s\n", _16);

(insn 39 38 40 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 94 [ _16 ])) dictionary.c:95 -1
     (nil))

(insn 40 39 41 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (symbol_ref/f:SI ("*LC9") [flags 0x2]  <var_decl 06915e18 *LC9>)) dictionary.c:95 -1
     (nil))

(call_insn 41 40 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) dictionary.c:95 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))

;; _18 = p_1->info;

(insn 42 41 43 (set (reg/f:SI 107)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])) dictionary.c:96 -1
     (nil))

(insn 43 42 0 (set (reg/f:SI 95 [ _18 ])
        (mem/f:SI (plus:SI (reg/f:SI 107)
                (const_int 4 [0x4])) [4 p_1->info+0 S4 A32])) dictionary.c:96 -1
     (nil))

;; _19 = _18->past_participle;

(insn 44 43 0 (set (reg/f:SI 96 [ _19 ])
        (mem/f:SI (plus:SI (reg/f:SI 95 [ _18 ])
                (const_int 12 [0xc])) [7 _18->past_participle+0 S4 A32])) dictionary.c:96 -1
     (nil))

;; printf ("particÃ­pio passado: %s\n", _19);

(insn 45 44 46 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 96 [ _19 ])) dictionary.c:96 -1
     (nil))

(insn 46 45 47 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (symbol_ref/f:SI ("*LC10") [flags 0x2]  <var_decl 06915e70 *LC10>)) dictionary.c:96 -1
     (nil))

(call_insn 47 46 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) dictionary.c:96 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))

;; _21 = p_1->info;

(insn 48 47 49 (set (reg/f:SI 108)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])) dictionary.c:97 -1
     (nil))

(insn 49 48 0 (set (reg/f:SI 97 [ _21 ])
        (mem/f:SI (plus:SI (reg/f:SI 108)
                (const_int 4 [0x4])) [4 p_1->info+0 S4 A32])) dictionary.c:97 -1
     (nil))

;; _22 = _21->meaning;

(insn 50 49 0 (set (reg/f:SI 98 [ _22 ])
        (mem/f:SI (plus:SI (reg/f:SI 97 [ _21 ])
                (const_int 16 [0x10])) [7 _21->meaning+0 S4 A32])) dictionary.c:97 -1
     (nil))

;; printf ("significado: %s\n", _22);

(insn 51 50 52 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 98 [ _22 ])) dictionary.c:97 -1
     (nil))

(insn 52 51 53 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (symbol_ref/f:SI ("*LC11") [flags 0x2]  <var_decl 06915ec8 *LC11>)) dictionary.c:97 -1
     (nil))

(call_insn 53 52 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) dictionary.c:97 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))

;; p_24 = p_1->prox;

(insn 54 53 55 (set (reg/f:SI 109)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])) dictionary.c:92 -1
     (nil))

(insn 55 54 56 (set (reg/f:SI 110)
        (mem/f:SI (reg/f:SI 109) [3 p_1->prox+0 S4 A32])) dictionary.c:92 -1
     (nil))

(insn 56 55 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])
        (reg/f:SI 110)) dictionary.c:92 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 57 56 58 22 "" [0 uses])

(note 58 57 0 NOTE_INSN_BASIC_BLOCK)

;; if (p_1 != 0B)

(insn 60 58 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])
            (const_int 0 [0]))) dictionary.c:92 -1
     (nil))

(jump_insn 61 60 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) dictionary.c:92 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; return;

(insn 63 62 64 (clobber (reg/i:SI 0 ax)) dictionary.c:99 -1
     (nil))

(insn 64 63 65 (clobber (reg:SI 100 [ <retval> ])) dictionary.c:99 -1
     (nil))

(jump_insn 65 64 66 (set (pc)
        (label_ref 0)) dictionary.c:99 -1
     (nil))

(barrier 66 65 0)

;; Generating RTL for gimple basic block 8

;; <L5>:

(code_label 67 66 68 21 "" [0 uses])

(note 68 67 0 NOTE_INSN_BASIC_BLOCK)

;; return _25;

(insn 69 68 70 (set (reg:SI 100 [ <retval> ])
        (reg:SI 99 [ _25 ])) dictionary.c:89 -1
     (nil))

(jump_insn 70 69 71 (set (pc)
        (label_ref 0)) dictionary.c:89 -1
     (nil))

(barrier 71 70 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 70.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 101)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [1 d+0 S4 A32])) dictionary.c:88 -1
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 87 [ _5 ])
        (mem/f:SI (reg/f:SI 101) [3 d_4(D)->Head+0 S4 A32])) dictionary.c:88 -1
     (nil))
(insn 7 6 8 2 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 87 [ _5 ])) dictionary.c:88 -1
     (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("Empty") [flags 0x3]  <function_decl 77eb6780 Empty>) [0 Empty S1 A8])
            (const_int 4 [0x4]))) dictionary.c:88 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 9 8 10 2 (set (reg:SI 88 [ _7 ])
        (reg:SI 0 ax)) dictionary.c:88 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ _7 ])
            (const_int 0 [0]))) dictionary.c:88 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 16)
            (pc))) dictionary.c:88 -1
     (nil)
 -> 16)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:SI 99 [ _25 ])
        (const_int 0 [0])) dictionary.c:89 -1
     (nil))
(jump_insn 14 13 15 4 (set (pc)
        (label_ref 67)) dictionary.c:89 -1
     (nil)
 -> 67)
;;  succ:       9

(barrier 15 14 16)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 16 15 17 5 20 "" [1 uses])
(note 17 16 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 5 (set (reg/f:SI 102)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [1 d+0 S4 A32])) dictionary.c:92 -1
     (nil))
(insn 19 18 20 5 (set (reg/f:SI 103)
        (mem/f:SI (reg/f:SI 102) [3 d_4(D)->Head+0 S4 A32])) dictionary.c:92 -1
     (nil))
(insn 20 19 21 5 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])
        (reg/f:SI 103)) dictionary.c:92 -1
     (nil))
(jump_insn 21 20 22 5 (set (pc)
        (label_ref 57)) dictionary.c:92 -1
     (nil)
 -> 57)
;;  succ:       7

(barrier 22 21 59)
;; basic block 6, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 59 22 23 6 23 "" [1 uses])
(note 23 59 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 6 (set (reg/f:SI 104)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])) dictionary.c:93 -1
     (nil))
(insn 25 24 26 6 (set (reg/f:SI 89 [ _9 ])
        (mem/f:SI (plus:SI (reg/f:SI 104)
                (const_int 4 [0x4])) [4 p_1->info+0 S4 A32])) dictionary.c:93 -1
     (nil))
(insn 26 25 27 6 (set (reg/f:SI 90 [ _10 ])
        (mem/f:SI (reg/f:SI 89 [ _9 ]) [7 _9->verb+0 S4 A32])) dictionary.c:93 -1
     (nil))
(insn 27 26 28 6 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 90 [ _10 ])) dictionary.c:93 -1
     (nil))
(insn 28 27 29 6 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (symbol_ref/f:SI ("*LC7") [flags 0x2]  <var_decl 068efe70 *LC7>)) dictionary.c:93 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) dictionary.c:93 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 30 29 31 6 (set (reg/f:SI 105)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])) dictionary.c:94 -1
     (nil))
(insn 31 30 32 6 (set (reg/f:SI 91 [ _12 ])
        (mem/f:SI (plus:SI (reg/f:SI 105)
                (const_int 4 [0x4])) [4 p_1->info+0 S4 A32])) dictionary.c:94 -1
     (nil))
(insn 32 31 33 6 (set (reg/f:SI 92 [ _13 ])
        (mem/f:SI (plus:SI (reg/f:SI 91 [ _12 ])
                (const_int 4 [0x4])) [7 _12->infinitive+0 S4 A32])) dictionary.c:94 -1
     (nil))
(insn 33 32 34 6 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 92 [ _13 ])) dictionary.c:94 -1
     (nil))
(insn 34 33 35 6 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (symbol_ref/f:SI ("*LC8") [flags 0x2]  <var_decl 06915dc0 *LC8>)) dictionary.c:94 -1
     (nil))
(call_insn 35 34 36 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) dictionary.c:94 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 36 35 37 6 (set (reg/f:SI 106)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])) dictionary.c:95 -1
     (nil))
(insn 37 36 38 6 (set (reg/f:SI 93 [ _15 ])
        (mem/f:SI (plus:SI (reg/f:SI 106)
                (const_int 4 [0x4])) [4 p_1->info+0 S4 A32])) dictionary.c:95 -1
     (nil))
(insn 38 37 39 6 (set (reg/f:SI 94 [ _16 ])
        (mem/f:SI (plus:SI (reg/f:SI 93 [ _15 ])
                (const_int 8 [0x8])) [7 _15->simple_past+0 S4 A32])) dictionary.c:95 -1
     (nil))
(insn 39 38 40 6 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 94 [ _16 ])) dictionary.c:95 -1
     (nil))
(insn 40 39 41 6 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (symbol_ref/f:SI ("*LC9") [flags 0x2]  <var_decl 06915e18 *LC9>)) dictionary.c:95 -1
     (nil))
(call_insn 41 40 42 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) dictionary.c:95 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 42 41 43 6 (set (reg/f:SI 107)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])) dictionary.c:96 -1
     (nil))
(insn 43 42 44 6 (set (reg/f:SI 95 [ _18 ])
        (mem/f:SI (plus:SI (reg/f:SI 107)
                (const_int 4 [0x4])) [4 p_1->info+0 S4 A32])) dictionary.c:96 -1
     (nil))
(insn 44 43 45 6 (set (reg/f:SI 96 [ _19 ])
        (mem/f:SI (plus:SI (reg/f:SI 95 [ _18 ])
                (const_int 12 [0xc])) [7 _18->past_participle+0 S4 A32])) dictionary.c:96 -1
     (nil))
(insn 45 44 46 6 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 96 [ _19 ])) dictionary.c:96 -1
     (nil))
(insn 46 45 47 6 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (symbol_ref/f:SI ("*LC10") [flags 0x2]  <var_decl 06915e70 *LC10>)) dictionary.c:96 -1
     (nil))
(call_insn 47 46 48 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) dictionary.c:96 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 48 47 49 6 (set (reg/f:SI 108)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])) dictionary.c:97 -1
     (nil))
(insn 49 48 50 6 (set (reg/f:SI 97 [ _21 ])
        (mem/f:SI (plus:SI (reg/f:SI 108)
                (const_int 4 [0x4])) [4 p_1->info+0 S4 A32])) dictionary.c:97 -1
     (nil))
(insn 50 49 51 6 (set (reg/f:SI 98 [ _22 ])
        (mem/f:SI (plus:SI (reg/f:SI 97 [ _21 ])
                (const_int 16 [0x10])) [7 _21->meaning+0 S4 A32])) dictionary.c:97 -1
     (nil))
(insn 51 50 52 6 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 98 [ _22 ])) dictionary.c:97 -1
     (nil))
(insn 52 51 53 6 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (symbol_ref/f:SI ("*LC11") [flags 0x2]  <var_decl 06915ec8 *LC11>)) dictionary.c:97 -1
     (nil))
(call_insn 53 52 54 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 8 [0x8]))) dictionary.c:97 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 54 53 55 6 (set (reg/f:SI 109)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])) dictionary.c:92 -1
     (nil))
(insn 55 54 56 6 (set (reg/f:SI 110)
        (mem/f:SI (reg/f:SI 109) [3 p_1->prox+0 S4 A32])) dictionary.c:92 -1
     (nil))
(insn 56 55 57 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])
        (reg/f:SI 110)) dictionary.c:92 -1
     (nil))
;;  succ:       7 (FALLTHRU,DFS_BACK)

;; basic block 7, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              6 (FALLTHRU,DFS_BACK)
(code_label 57 56 58 7 22 "" [1 uses])
(note 58 57 60 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 60 58 61 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 p+0 S4 A32])
            (const_int 0 [0]))) dictionary.c:92 -1
     (nil))
(jump_insn 61 60 62 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) dictionary.c:92 -1
     (nil)
 -> 59)
;;  succ:       6
;;              8 (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 62 61 63 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 8 (clobber (reg/i:SI 0 ax)) dictionary.c:99 -1
     (nil))
(insn 64 63 65 8 (clobber (reg:SI 100 [ <retval> ])) dictionary.c:99 -1
     (nil))
(jump_insn 65 64 66 8 (set (pc)
        (label_ref 72)) dictionary.c:99 -1
     (nil)
 -> 72)
;;  succ:       10

(barrier 66 65 67)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 67 66 68 9 21 "" [1 uses])
(note 68 67 69 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 72 9 (set (reg:SI 100 [ <retval> ])
        (reg:SI 99 [ _25 ])) dictionary.c:89 -1
     (nil))
;;  succ:       10 [100,0%]  (FALLTHRU)

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
;;              9 [100,0%]  (FALLTHRU)
(code_label 72 69 75 10 19 "" [1 uses])
(note 75 72 73 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 73 75 74 10 (set (reg/i:SI 0 ax)
        (reg:SI 100 [ <retval> ])) dictionary.c:99 -1
     (nil))
(insn 74 73 0 10 (use (reg/i:SI 0 ax)) dictionary.c:99 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)


;; Function Remove (Remove, funcdef_no=24, decl_uid=2643, cgraph_uid=24, symbol_order=24)

Remove (struct Node * word, char * wordKey)
{
  struct Node * tmp;
  struct Node * D.2737;
  struct node * D.2736;
  struct word * D.2735;
  char * D.2734;
  struct word * D.2733;
  char * D.2732;
  struct word * D.2731;
  char * D.2730;
  struct word * D.2729;
  char * D.2728;
  struct word * D.2727;
  char * D.2726;
  struct word * D.2725;
  int D.2722;
  char * D.2721;
  struct word * D.2720;
  struct Node * D.2719;
  struct Node * _1;
  struct Node * _4;
  struct word * _6;
  char * _7;
  int _9;
  struct word * _11;
  char * _12;
  struct word * _14;
  char * _15;
  struct word * _17;
  char * _18;
  struct word * _20;
  char * _21;
  struct word * _23;
  char * _24;
  struct word * _26;
  struct Node * _29;
  struct node * _30;
  struct Node * _32;
  struct Node * _34;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (word_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _4 = 0B;
  goto <bb 7> (<L4>);
;;    succ:       7

;;   basic block 4, loop depth 0
;;    pred:       2
  _6 = word_3(D)->info;
  _7 = _6->verb;
  _9 = strcmp (_7, wordKey_8(D));
  if (_9 == 0)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  tmp_10 = word_3(D)->prox;
  _11 = word_3(D)->info;
  _12 = _11->infinitive;
  free (_12);
  _14 = word_3(D)->info;
  _15 = _14->meaning;
  free (_15);
  _17 = word_3(D)->info;
  _18 = _17->past_participle;
  free (_18);
  _20 = word_3(D)->info;
  _21 = _20->simple_past;
  free (_21);
  _23 = word_3(D)->info;
  _24 = _23->verb;
  free (_24);
  _26 = word_3(D)->info;
  free (_26);
  free (word_3(D));
  _29 = tmp_10;
  goto <bb 7> (<L4>);
;;    succ:       7

;;   basic block 6, loop depth 0
;;    pred:       4
  _30 = word_3(D)->prox;
  _32 = Remove (_30, wordKey_8(D));
  word_3(D)->prox = _32;
  _34 = word_3(D);
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       3
;;                5
;;                6
  # _1 = PHI <_4(3), _29(5), _34(6)>
<L4>:
  return _1;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 3 (word_3(D) - 3 )
Partition 4 (_4 - 4 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (wordKey_8(D) - 8 )
Partition 9 (_9 - 9 )
Partition 10 (tmp_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 26 (_26 - 26 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 32 (_32 - 32 )
Partition 34 (_34 - 34 )
Partition 35 (_35(D) - 35 )


Partition map 

Partition 0 (_1 - 1 )
Partition 1 (word_3(D) - 3 )
Partition 2 (_4 - 4 )
Partition 3 (wordKey_8(D) - 8 )
Partition 4 (_29 - 29 )
Partition 5 (_34 - 34 )
Partition 6 (_35(D) - 35 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (word_3(D) - 3 )
Partition 2 (_4 - 4 )
Partition 3 (wordKey_8(D) - 8 )
Partition 4 (_29 - 29 )
Partition 5 (_34 - 34 )
Partition 6 (_35(D) - 35 )

Coalesce list: (1)_1 & (34)_34 [map: 0, 5] : Success -> 0
Coalesce list: (1)_1 & (29)_29 [map: 0, 4] : Success -> 0
Coalesce list: (1)_1 & (4)_4 [map: 0, 2] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (_1 - 1 4 29 34 )
Partition 1 (word_3(D) - 3 )
Partition 2 (_6 - 6 )
Partition 3 (_7 - 7 )
Partition 4 (wordKey_8(D) - 8 )
Partition 5 (_9 - 9 )
Partition 6 (tmp_10 - 10 )
Partition 7 (_11 - 11 )
Partition 8 (_12 - 12 )
Partition 9 (_14 - 14 )
Partition 10 (_15 - 15 )
Partition 11 (_17 - 17 )
Partition 12 (_18 - 18 )
Partition 13 (_20 - 20 )
Partition 14 (_21 - 21 )
Partition 15 (_23 - 23 )
Partition 16 (_24 - 24 )
Partition 17 (_26 - 26 )
Partition 18 (_30 - 30 )
Partition 19 (_32 - 32 )
Partition 20 (_35(D) - 35 )

Remove (struct Node * word, char * wordKey)
{
  struct Node * tmp;
  struct Node * D.2737;
  struct node * D.2736;
  struct word * D.2735;
  char * D.2734;
  struct word * D.2733;
  char * D.2732;
  struct word * D.2731;
  char * D.2730;
  struct word * D.2729;
  char * D.2728;
  struct word * D.2727;
  char * D.2726;
  struct word * D.2725;
  int D.2722;
  char * D.2721;
  struct word * D.2720;
  struct Node * D.2719;
  struct Node * _1;
  struct Node * _4;
  struct word * _6;
  char * _7;
  int _9;
  struct word * _11;
  char * _12;
  struct word * _14;
  char * _15;
  struct word * _17;
  char * _18;
  struct word * _20;
  char * _21;
  struct word * _23;
  char * _24;
  struct word * _26;
  struct Node * _29;
  struct node * _30;
  struct Node * _32;
  struct Node * _34;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (word_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _4 = 0B;
  goto <bb 7> (<L4>);
;;    succ:       7

;;   basic block 4, loop depth 0
;;    pred:       2
  _6 = word_3(D)->info;
  _7 = _6->verb;
  _9 = strcmp (_7, wordKey_8(D));
  if (_9 == 0)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  tmp_10 = word_3(D)->prox;
  _11 = word_3(D)->info;
  _12 = _11->infinitive;
  free (_12);
  _14 = word_3(D)->info;
  _15 = _14->meaning;
  free (_15);
  _17 = word_3(D)->info;
  _18 = _17->past_participle;
  free (_18);
  _20 = word_3(D)->info;
  _21 = _20->simple_past;
  free (_21);
  _23 = word_3(D)->info;
  _24 = _23->verb;
  free (_24);
  _26 = word_3(D)->info;
  free (_26);
  free (word_3(D));
  _29 = tmp_10;
  goto <bb 7> (<L4>);
;;    succ:       7

;;   basic block 6, loop depth 0
;;    pred:       4
  _30 = word_3(D)->prox;
  _32 = Remove (_30, wordKey_8(D));
  word_3(D)->prox = _32;
  _34 = word_3(D);
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       3
;;                5
;;                6
  # _1 = PHI <_4(3), _29(5), _34(6)>
<L4>:
  return _1;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; if (word_3(D) == 0B)

(insn 5 4 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [3 word+0 S4 A32])
            (const_int 0 [0]))) dictionary.c:102 -1
     (nil))

(jump_insn 6 5 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) dictionary.c:102 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _4 = 0B;

(insn 8 7 0 (set (reg/f:SI 87 [ _1 ])
        (const_int 0 [0])) dictionary.c:103 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 11 10 12 25 "" [0 uses])

(note 12 11 0 NOTE_INSN_BASIC_BLOCK)

;; _6 = word_3(D)->info;

(insn 13 12 14 (set (reg/f:SI 105)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [3 word+0 S4 A32])) dictionary.c:105 -1
     (nil))

(insn 14 13 0 (set (reg/f:SI 88 [ _6 ])
        (mem/f:SI (plus:SI (reg/f:SI 105)
                (const_int 4 [0x4])) [4 word_3(D)->info+0 S4 A32])) dictionary.c:105 -1
     (nil))

;; _7 = _6->verb;

(insn 15 14 0 (set (reg/f:SI 89 [ _7 ])
        (mem/f:SI (reg/f:SI 88 [ _6 ]) [7 _6->verb+0 S4 A32])) dictionary.c:105 -1
     (nil))

;; _9 = strcmp (_7, wordKey_8(D));

(insn 16 15 17 (set (reg/f:SI 106)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [7 wordKey+0 S4 A32])) dictionary.c:105 -1
     (nil))

(insn 17 16 18 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 106)) dictionary.c:105 -1
     (nil))

(insn 18 17 19 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 89 [ _7 ])) dictionary.c:105 -1
     (nil))

(call_insn/i 19 18 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcmp") [flags 0x43]  <function_decl 77ed2700 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 8 [0x8]))) dictionary.c:105 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))

(insn 20 19 0 (set (reg:SI 90 [ _9 ])
        (reg:SI 0 ax)) dictionary.c:105 -1
     (nil))

;; if (_9 == 0)

(insn 21 20 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ _9 ])
            (const_int 0 [0]))) dictionary.c:105 -1
     (nil))

(jump_insn 22 21 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) dictionary.c:105 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; tmp_10 = word_3(D)->prox;

(insn 24 23 25 (set (reg/f:SI 107)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [3 word+0 S4 A32])) dictionary.c:106 -1
     (nil))

(insn 25 24 26 (set (reg/f:SI 108)
        (mem/f:SI (reg/f:SI 107) [3 word_3(D)->prox+0 S4 A32])) dictionary.c:106 -1
     (nil))

(insn 26 25 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 tmp+0 S4 A32])
        (reg/f:SI 108)) dictionary.c:106 -1
     (nil))

;; _11 = word_3(D)->info;

(insn 27 26 28 (set (reg/f:SI 109)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [3 word+0 S4 A32])) dictionary.c:108 -1
     (nil))

(insn 28 27 0 (set (reg/f:SI 91 [ _11 ])
        (mem/f:SI (plus:SI (reg/f:SI 109)
                (const_int 4 [0x4])) [4 word_3(D)->info+0 S4 A32])) dictionary.c:108 -1
     (nil))

;; _12 = _11->infinitive;

(insn 29 28 0 (set (reg/f:SI 92 [ _12 ])
        (mem/f:SI (plus:SI (reg/f:SI 91 [ _11 ])
                (const_int 4 [0x4])) [7 _11->infinitive+0 S4 A32])) dictionary.c:108 -1
     (nil))

;; free (_12);

(insn 30 29 31 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 92 [ _12 ])) dictionary.c:108 -1
     (nil))

(call_insn 31 30 0 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:108 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

;; _14 = word_3(D)->info;

(insn 32 31 33 (set (reg/f:SI 110)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [3 word+0 S4 A32])) dictionary.c:109 -1
     (nil))

(insn 33 32 0 (set (reg/f:SI 93 [ _14 ])
        (mem/f:SI (plus:SI (reg/f:SI 110)
                (const_int 4 [0x4])) [4 word_3(D)->info+0 S4 A32])) dictionary.c:109 -1
     (nil))

;; _15 = _14->meaning;

(insn 34 33 0 (set (reg/f:SI 94 [ _15 ])
        (mem/f:SI (plus:SI (reg/f:SI 93 [ _14 ])
                (const_int 16 [0x10])) [7 _14->meaning+0 S4 A32])) dictionary.c:109 -1
     (nil))

;; free (_15);

(insn 35 34 36 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 94 [ _15 ])) dictionary.c:109 -1
     (nil))

(call_insn 36 35 0 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:109 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

;; _17 = word_3(D)->info;

(insn 37 36 38 (set (reg/f:SI 111)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [3 word+0 S4 A32])) dictionary.c:110 -1
     (nil))

(insn 38 37 0 (set (reg/f:SI 95 [ _17 ])
        (mem/f:SI (plus:SI (reg/f:SI 111)
                (const_int 4 [0x4])) [4 word_3(D)->info+0 S4 A32])) dictionary.c:110 -1
     (nil))

;; _18 = _17->past_participle;

(insn 39 38 0 (set (reg/f:SI 96 [ _18 ])
        (mem/f:SI (plus:SI (reg/f:SI 95 [ _17 ])
                (const_int 12 [0xc])) [7 _17->past_participle+0 S4 A32])) dictionary.c:110 -1
     (nil))

;; free (_18);

(insn 40 39 41 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 96 [ _18 ])) dictionary.c:110 -1
     (nil))

(call_insn 41 40 0 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:110 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

;; _20 = word_3(D)->info;

(insn 42 41 43 (set (reg/f:SI 112)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [3 word+0 S4 A32])) dictionary.c:111 -1
     (nil))

(insn 43 42 0 (set (reg/f:SI 97 [ _20 ])
        (mem/f:SI (plus:SI (reg/f:SI 112)
                (const_int 4 [0x4])) [4 word_3(D)->info+0 S4 A32])) dictionary.c:111 -1
     (nil))

;; _21 = _20->simple_past;

(insn 44 43 0 (set (reg/f:SI 98 [ _21 ])
        (mem/f:SI (plus:SI (reg/f:SI 97 [ _20 ])
                (const_int 8 [0x8])) [7 _20->simple_past+0 S4 A32])) dictionary.c:111 -1
     (nil))

;; free (_21);

(insn 45 44 46 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 98 [ _21 ])) dictionary.c:111 -1
     (nil))

(call_insn 46 45 0 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:111 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

;; _23 = word_3(D)->info;

(insn 47 46 48 (set (reg/f:SI 113)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [3 word+0 S4 A32])) dictionary.c:112 -1
     (nil))

(insn 48 47 0 (set (reg/f:SI 99 [ _23 ])
        (mem/f:SI (plus:SI (reg/f:SI 113)
                (const_int 4 [0x4])) [4 word_3(D)->info+0 S4 A32])) dictionary.c:112 -1
     (nil))

;; _24 = _23->verb;

(insn 49 48 0 (set (reg/f:SI 100 [ _24 ])
        (mem/f:SI (reg/f:SI 99 [ _23 ]) [7 _23->verb+0 S4 A32])) dictionary.c:112 -1
     (nil))

;; free (_24);

(insn 50 49 51 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 100 [ _24 ])) dictionary.c:112 -1
     (nil))

(call_insn 51 50 0 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:112 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

;; _26 = word_3(D)->info;

(insn 52 51 53 (set (reg/f:SI 114)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [3 word+0 S4 A32])) dictionary.c:113 -1
     (nil))

(insn 53 52 0 (set (reg/f:SI 101 [ _26 ])
        (mem/f:SI (plus:SI (reg/f:SI 114)
                (const_int 4 [0x4])) [4 word_3(D)->info+0 S4 A32])) dictionary.c:113 -1
     (nil))

;; free (_26);

(insn 54 53 55 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 101 [ _26 ])) dictionary.c:113 -1
     (nil))

(call_insn 55 54 0 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:113 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

;; free (word_3(D));

(insn 56 55 57 (set (reg/f:SI 115)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [3 word+0 S4 A32])) dictionary.c:114 -1
     (nil))

(insn 57 56 58 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 115)) dictionary.c:114 -1
     (nil))

(call_insn 58 57 0 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:114 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))

;; _29 = tmp_10;

(insn 59 58 0 (set (reg/f:SI 87 [ _1 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 tmp+0 S4 A32])) dictionary.c:116 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 62 61 63 27 "" [0 uses])

(note 63 62 0 NOTE_INSN_BASIC_BLOCK)

;; _30 = word_3(D)->prox;

(insn 64 63 65 (set (reg/f:SI 116)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [3 word+0 S4 A32])) dictionary.c:118 -1
     (nil))

(insn 65 64 0 (set (reg/f:SI 102 [ _30 ])
        (mem/f:SI (reg/f:SI 116) [3 word_3(D)->prox+0 S4 A32])) dictionary.c:118 -1
     (nil))

;; _32 = Remove (_30, wordKey_8(D));

(insn 66 65 67 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [7 wordKey+0 S4 A32])) dictionary.c:118 -1
     (nil))

(insn 67 66 68 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 117)) dictionary.c:118 -1
     (nil))

(insn 68 67 69 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 102 [ _30 ])) dictionary.c:118 -1
     (nil))

(call_insn 69 68 70 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("Remove") [flags 0x3]  <function_decl 068d7000 Remove>) [0 Remove S1 A8])
            (const_int 8 [0x8]))) dictionary.c:118 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))

(insn 70 69 0 (set (reg/f:SI 103 [ _32 ])
        (reg:SI 0 ax)) dictionary.c:118 -1
     (nil))

;; word_3(D)->prox = _32;

(insn 71 70 72 (set (reg/f:SI 118)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [3 word+0 S4 A32])) dictionary.c:118 -1
     (nil))

(insn 72 71 0 (set (mem/f:SI (reg/f:SI 118) [3 word_3(D)->prox+0 S4 A32])
        (reg/f:SI 103 [ _32 ])) dictionary.c:118 -1
     (nil))

;; _34 = word_3(D);

(insn 73 72 0 (set (reg/f:SI 87 [ _1 ])
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [3 word+0 S4 A32])) dictionary.c:119 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; <L4>:

(code_label 74 73 75 26 "" [0 uses])

(note 75 74 0 NOTE_INSN_BASIC_BLOCK)

;; return _1;

(insn 76 75 77 (set (reg/f:SI 104 [ <retval> ])
        (reg/f:SI 87 [ _1 ])) -1
     (nil))

(jump_insn 77 76 78 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 78 77 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 77.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [3 word+0 S4 A32])
            (const_int 0 [0]))) dictionary.c:102 -1
     (nil))
(jump_insn 6 5 7 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 11)
            (pc))) dictionary.c:102 -1
     (nil)
 -> 11)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 7 6 8 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 8 7 9 4 (set (reg/f:SI 87 [ _1 ])
        (const_int 0 [0])) dictionary.c:103 -1
     (nil))
(jump_insn 9 8 10 4 (set (pc)
        (label_ref 74)) dictionary.c:103 -1
     (nil)
 -> 74)
;;  succ:       8

(barrier 10 9 11)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 11 10 12 5 25 "" [1 uses])
(note 12 11 13 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 5 (set (reg/f:SI 105)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [3 word+0 S4 A32])) dictionary.c:105 -1
     (nil))
(insn 14 13 15 5 (set (reg/f:SI 88 [ _6 ])
        (mem/f:SI (plus:SI (reg/f:SI 105)
                (const_int 4 [0x4])) [4 word_3(D)->info+0 S4 A32])) dictionary.c:105 -1
     (nil))
(insn 15 14 16 5 (set (reg/f:SI 89 [ _7 ])
        (mem/f:SI (reg/f:SI 88 [ _6 ]) [7 _6->verb+0 S4 A32])) dictionary.c:105 -1
     (nil))
(insn 16 15 17 5 (set (reg/f:SI 106)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [7 wordKey+0 S4 A32])) dictionary.c:105 -1
     (nil))
(insn 17 16 18 5 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 106)) dictionary.c:105 -1
     (nil))
(insn 18 17 19 5 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 89 [ _7 ])) dictionary.c:105 -1
     (nil))
(call_insn/i 19 18 20 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcmp") [flags 0x43]  <function_decl 77ed2700 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 8 [0x8]))) dictionary.c:105 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 20 19 21 5 (set (reg:SI 90 [ _9 ])
        (reg:SI 0 ax)) dictionary.c:105 -1
     (nil))
(insn 21 20 22 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ _9 ])
            (const_int 0 [0]))) dictionary.c:105 -1
     (nil))
(jump_insn 22 21 23 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) dictionary.c:105 -1
     (nil)
 -> 62)
;;  succ:       6 (FALLTHRU)
;;              7

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 23 22 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 6 (set (reg/f:SI 107)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [3 word+0 S4 A32])) dictionary.c:106 -1
     (nil))
(insn 25 24 26 6 (set (reg/f:SI 108)
        (mem/f:SI (reg/f:SI 107) [3 word_3(D)->prox+0 S4 A32])) dictionary.c:106 -1
     (nil))
(insn 26 25 27 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 tmp+0 S4 A32])
        (reg/f:SI 108)) dictionary.c:106 -1
     (nil))
(insn 27 26 28 6 (set (reg/f:SI 109)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [3 word+0 S4 A32])) dictionary.c:108 -1
     (nil))
(insn 28 27 29 6 (set (reg/f:SI 91 [ _11 ])
        (mem/f:SI (plus:SI (reg/f:SI 109)
                (const_int 4 [0x4])) [4 word_3(D)->info+0 S4 A32])) dictionary.c:108 -1
     (nil))
(insn 29 28 30 6 (set (reg/f:SI 92 [ _12 ])
        (mem/f:SI (plus:SI (reg/f:SI 91 [ _11 ])
                (const_int 4 [0x4])) [7 _11->infinitive+0 S4 A32])) dictionary.c:108 -1
     (nil))
(insn 30 29 31 6 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 92 [ _12 ])) dictionary.c:108 -1
     (nil))
(call_insn 31 30 32 6 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:108 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 32 31 33 6 (set (reg/f:SI 110)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [3 word+0 S4 A32])) dictionary.c:109 -1
     (nil))
(insn 33 32 34 6 (set (reg/f:SI 93 [ _14 ])
        (mem/f:SI (plus:SI (reg/f:SI 110)
                (const_int 4 [0x4])) [4 word_3(D)->info+0 S4 A32])) dictionary.c:109 -1
     (nil))
(insn 34 33 35 6 (set (reg/f:SI 94 [ _15 ])
        (mem/f:SI (plus:SI (reg/f:SI 93 [ _14 ])
                (const_int 16 [0x10])) [7 _14->meaning+0 S4 A32])) dictionary.c:109 -1
     (nil))
(insn 35 34 36 6 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 94 [ _15 ])) dictionary.c:109 -1
     (nil))
(call_insn 36 35 37 6 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:109 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 37 36 38 6 (set (reg/f:SI 111)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [3 word+0 S4 A32])) dictionary.c:110 -1
     (nil))
(insn 38 37 39 6 (set (reg/f:SI 95 [ _17 ])
        (mem/f:SI (plus:SI (reg/f:SI 111)
                (const_int 4 [0x4])) [4 word_3(D)->info+0 S4 A32])) dictionary.c:110 -1
     (nil))
(insn 39 38 40 6 (set (reg/f:SI 96 [ _18 ])
        (mem/f:SI (plus:SI (reg/f:SI 95 [ _17 ])
                (const_int 12 [0xc])) [7 _17->past_participle+0 S4 A32])) dictionary.c:110 -1
     (nil))
(insn 40 39 41 6 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 96 [ _18 ])) dictionary.c:110 -1
     (nil))
(call_insn 41 40 42 6 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:110 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 42 41 43 6 (set (reg/f:SI 112)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [3 word+0 S4 A32])) dictionary.c:111 -1
     (nil))
(insn 43 42 44 6 (set (reg/f:SI 97 [ _20 ])
        (mem/f:SI (plus:SI (reg/f:SI 112)
                (const_int 4 [0x4])) [4 word_3(D)->info+0 S4 A32])) dictionary.c:111 -1
     (nil))
(insn 44 43 45 6 (set (reg/f:SI 98 [ _21 ])
        (mem/f:SI (plus:SI (reg/f:SI 97 [ _20 ])
                (const_int 8 [0x8])) [7 _20->simple_past+0 S4 A32])) dictionary.c:111 -1
     (nil))
(insn 45 44 46 6 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 98 [ _21 ])) dictionary.c:111 -1
     (nil))
(call_insn 46 45 47 6 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:111 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 47 46 48 6 (set (reg/f:SI 113)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [3 word+0 S4 A32])) dictionary.c:112 -1
     (nil))
(insn 48 47 49 6 (set (reg/f:SI 99 [ _23 ])
        (mem/f:SI (plus:SI (reg/f:SI 113)
                (const_int 4 [0x4])) [4 word_3(D)->info+0 S4 A32])) dictionary.c:112 -1
     (nil))
(insn 49 48 50 6 (set (reg/f:SI 100 [ _24 ])
        (mem/f:SI (reg/f:SI 99 [ _23 ]) [7 _23->verb+0 S4 A32])) dictionary.c:112 -1
     (nil))
(insn 50 49 51 6 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 100 [ _24 ])) dictionary.c:112 -1
     (nil))
(call_insn 51 50 52 6 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:112 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 52 51 53 6 (set (reg/f:SI 114)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [3 word+0 S4 A32])) dictionary.c:113 -1
     (nil))
(insn 53 52 54 6 (set (reg/f:SI 101 [ _26 ])
        (mem/f:SI (plus:SI (reg/f:SI 114)
                (const_int 4 [0x4])) [4 word_3(D)->info+0 S4 A32])) dictionary.c:113 -1
     (nil))
(insn 54 53 55 6 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 101 [ _26 ])) dictionary.c:113 -1
     (nil))
(call_insn 55 54 56 6 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:113 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 56 55 57 6 (set (reg/f:SI 115)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [3 word+0 S4 A32])) dictionary.c:114 -1
     (nil))
(insn 57 56 58 6 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 115)) dictionary.c:114 -1
     (nil))
(call_insn 58 57 59 6 (call (mem:QI (symbol_ref:SI ("free") [flags 0x43]  <function_decl 77edbb80 free>) [0 __builtin_free S1 A8])
        (const_int 4 [0x4])) dictionary.c:114 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (nil)))
(insn 59 58 60 6 (set (reg/f:SI 87 [ _1 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 tmp+0 S4 A32])) dictionary.c:116 -1
     (nil))
(jump_insn 60 59 61 6 (set (pc)
        (label_ref 74)) dictionary.c:116 -1
     (nil)
 -> 74)
;;  succ:       8

(barrier 61 60 62)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 62 61 63 7 27 "" [1 uses])
(note 63 62 64 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 7 (set (reg/f:SI 116)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [3 word+0 S4 A32])) dictionary.c:118 -1
     (nil))
(insn 65 64 66 7 (set (reg/f:SI 102 [ _30 ])
        (mem/f:SI (reg/f:SI 116) [3 word_3(D)->prox+0 S4 A32])) dictionary.c:118 -1
     (nil))
(insn 66 65 67 7 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [7 wordKey+0 S4 A32])) dictionary.c:118 -1
     (nil))
(insn 67 66 68 7 (set (mem:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 117)) dictionary.c:118 -1
     (nil))
(insn 68 67 69 7 (set (mem:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32])
        (reg/f:SI 102 [ _30 ])) dictionary.c:118 -1
     (nil))
(call_insn 69 68 70 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("Remove") [flags 0x3]  <function_decl 068d7000 Remove>) [0 Remove S1 A8])
            (const_int 8 [0x8]))) dictionary.c:118 -1
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 84 virtual-outgoing-args) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 84 virtual-outgoing-args)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 70 69 71 7 (set (reg/f:SI 103 [ _32 ])
        (reg:SI 0 ax)) dictionary.c:118 -1
     (nil))
(insn 71 70 72 7 (set (reg/f:SI 118)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [3 word+0 S4 A32])) dictionary.c:118 -1
     (nil))
(insn 72 71 73 7 (set (mem/f:SI (reg/f:SI 118) [3 word_3(D)->prox+0 S4 A32])
        (reg/f:SI 103 [ _32 ])) dictionary.c:118 -1
     (nil))
(insn 73 72 74 7 (set (reg/f:SI 87 [ _1 ])
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [3 word+0 S4 A32])) dictionary.c:119 -1
     (nil))
;;  succ:       8 (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              6
;;              7 (FALLTHRU)
(code_label 74 73 75 8 26 "" [2 uses])
(note 75 74 76 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 80 8 (set (reg/f:SI 104 [ <retval> ])
        (reg/f:SI 87 [ _1 ])) -1
     (nil))
(insn 80 76 81 8 (set (reg/i:SI 0 ax)
        (reg/f:SI 104 [ <retval> ])) dictionary.c:120 -1
     (nil))
(insn 81 80 0 8 (use (reg/i:SI 0 ax)) dictionary.c:120 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)

