
;; Function main (main, funcdef_no=17, decl_uid=2608, cgraph_uid=17, symbol_order=17)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 25 count 19 (    1)
Building IRA IR
verify found no changes in insn with uid = 3.
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 48.
verify found no changes in insn with uid = 50.
verify found no changes in insn with uid = 51.
verify found no changes in insn with uid = 52.
verify found no changes in insn with uid = 54.
verify found no changes in insn with uid = 61.
verify found no changes in insn with uid = 67.
verify found no changes in insn with uid = 71.
verify found no changes in insn with uid = 72.
verify found no changes in insn with uid = 73.
verify found no changes in insn with uid = 75.
verify found no changes in insn with uid = 81.
verify found no changes in insn with uid = 94.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a3(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a5(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a6(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a7(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a8(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:20
  a9(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a10(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8

   Insn 110(l0): point = 0
   Insn 109(l0): point = 2
   Insn 105(l0): point = 4
   Insn 102(l0): point = 6
   Insn 28(l0): point = 9
   Insn 27(l0): point = 11
   Insn 26(l0): point = 13
   Insn 100(l0): point = 16
   Insn 99(l0): point = 18
   Insn 97(l0): point = 20
   Insn 94(l0): point = 23
   Insn 93(l0): point = 25
   Insn 92(l0): point = 27
   Insn 122(l0): point = 30
   Insn 124(l0): point = 33
   Insn 54(l0): point = 35
   Insn 53(l0): point = 37
   Insn 52(l0): point = 39
   Insn 51(l0): point = 41
   Insn 50(l0): point = 43
   Insn 49(l0): point = 45
   Insn 48(l0): point = 47
   Insn 47(l0): point = 49
   Insn 46(l0): point = 51
   Insn 45(l0): point = 53
   Insn 44(l0): point = 55
   Insn 126(l0): point = 58
   Insn 75(l0): point = 60
   Insn 74(l0): point = 62
   Insn 73(l0): point = 64
   Insn 72(l0): point = 66
   Insn 71(l0): point = 68
   Insn 70(l0): point = 70
   Insn 64(l0): point = 73
   Insn 63(l0): point = 75
   Insn 62(l0): point = 77
   Insn 61(l0): point = 79
   Insn 60(l0): point = 81
   Insn 59(l0): point = 83
   Insn 67(l0): point = 86
   Insn 66(l0): point = 88
   Insn 120(l0): point = 91
   Insn 132(l0): point = 94
   Insn 32(l0): point = 97
   Insn 31(l0): point = 99
   Insn 128(l0): point = 102
   Insn 81(l0): point = 104
   Insn 80(l0): point = 106
   Insn 39(l0): point = 109
   Insn 38(l0): point = 111
   Insn 37(l0): point = 114
   Insn 36(l0): point = 116
   Insn 30(l0): point = 119
   Insn 29(l0): point = 121
   Insn 118(l0): point = 124
   Insn 22(l0): point = 126
   Insn 21(l0): point = 128
   Insn 20(l0): point = 130
   Insn 19(l0): point = 132
   Insn 18(l0): point = 134
   Insn 17(l0): point = 136
   Insn 16(l0): point = 138
   Insn 15(l0): point = 140
   Insn 14(l0): point = 142
   Insn 13(l0): point = 144
   Insn 12(l0): point = 146
   Insn 11(l0): point = 148
   Insn 10(l0): point = 150
   Insn 9(l0): point = 152
   Insn 8(l0): point = 154
   Insn 7(l0): point = 156
   Insn 6(l0): point = 158
   Insn 3(l0): point = 160
 a0(r91): [3..4]
 a1(r90): [5..6]
 a2(r87): [19..20]
 a3(r97): [26..27]
 a4(r89): [76..77]
 a5(r96): [82..83]
 a6(r95): [50..51]
 a7(r94): [54..55]
 a8(r88): [112..123] [100..101] [9..13]
 a9(r93): [131..132]
 a10(r92): [157..158]
Compressing live ranges: from 163 to 26 - 15%
Ranges after the compression:
 a0(r91): [0..1]
 a1(r90): [2..3]
 a2(r87): [6..7]
 a3(r97): [8..9]
 a4(r89): [14..15]
 a5(r96): [16..17]
 a6(r95): [10..11]
 a7(r94): [12..13]
 a8(r88): [18..21] [4..5]
 a9(r93): [22..23]
 a10(r92): [24..25]
  regions=1, blocks=19, points=26
    allocnos=11 (big 0), copies=0, conflicts=0, ranges=12
Disposition:
    2:r87  l0     0    8:r88  l0     0    4:r89  l0     0    1:r90  l0     0
    0:r91  l0     0   10:r92  l0     0    9:r93  l0     0    7:r94  l0     0
    6:r95  l0     0    5:r96  l0     0    3:r97  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


main

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={23d,3u} r1={22d} r2={22d} r6={1d,18u} r7={1d,75u} r8={21d} r9={21d} r10={21d} r11={21d} r12={21d} r13={21d} r14={21d} r15={21d} r16={1d,17u} r17={34d,7u} r18={21d} r19={21d} r20={1d,26u} r21={21d} r22={21d} r23={21d} r24={21d} r25={21d} r26={21d} r27={21d} r28={21d} r29={21d} r30={21d} r31={21d} r32={21d} r33={21d} r34={21d} r35={21d} r36={21d} r37={21d} r38={21d} r39={21d} r40={21d} r41={21d} r42={21d} r43={21d} r44={21d} r45={21d} r46={21d} r47={21d} r48={21d} r49={21d} r50={21d} r51={21d} r52={21d} r53={21d} r54={21d} r55={21d} r56={21d} r57={21d} r58={21d} r59={21d} r60={21d} r61={21d} r62={21d} r63={21d} r64={21d} r65={21d} r66={21d} r67={21d} r68={21d} r69={21d} r70={21d} r71={21d} r72={21d} r73={21d} r74={21d} r75={21d} r76={21d} r77={21d} r78={21d} r79={21d} r80={21d} r87={1d,1u} r88={1d,5u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} 
;;    total ref usage 1747{1586d,161u,0e} in 73{52 regular + 21 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 93
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 3 2 6 2 (call (mem:QI (symbol_ref:SI ("__main") [flags 0x43]) [0  S1 A8])
        (const_int 0 [0])) main.c:3 570 {*call}
     (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
        (nil))
    (nil))
(insn 6 3 7 2 (parallel [
            (set (reg:SI 92)
                (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) main.c:6 195 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 7 6 8 2 (set (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg:SI 92)) main.c:6 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92)
        (nil)))
(call_insn 8 7 9 2 (call (mem:QI (symbol_ref:SI ("CreateEmpty") [flags 0x43]  <function_decl 77ec9c00 CreateEmpty>) [0 CreateEmpty S1 A8])
        (const_int 4 [0x4])) main.c:6 570 {*call}
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 9 8 10 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC0") [flags 0x2]  <var_decl 068ed840 *LC0>)) main.c:9 79 {*movsi_internal}
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x43]  <function_decl 77ed4480 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 4 [0x4]))) main.c:9 581 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 11 10 12 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC1") [flags 0x2]  <var_decl 068ed898 *LC1>)) main.c:10 79 {*movsi_internal}
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x43]  <function_decl 77ed4480 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 4 [0x4]))) main.c:10 581 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 13 12 14 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC2") [flags 0x2]  <var_decl 068ed8f0 *LC2>)) main.c:11 79 {*movsi_internal}
     (nil))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x43]  <function_decl 77ed4480 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 4 [0x4]))) main.c:11 581 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 15 14 16 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC3") [flags 0x2]  <var_decl 068ed948 *LC3>)) main.c:12 79 {*movsi_internal}
     (nil))
(call_insn 16 15 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x43]  <function_decl 77ed4480 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 4 [0x4]))) main.c:12 581 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 17 16 18 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC4") [flags 0x2]  <var_decl 068ed9a0 *LC4>)) main.c:13 79 {*movsi_internal}
     (nil))
(call_insn 18 17 19 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x43]  <function_decl 77ed4480 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 4 [0x4]))) main.c:13 581 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 19 18 20 2 (parallel [
            (set (reg:SI 93)
                (plus:SI (reg/f:SI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])))
            (clobber (reg:CC 17 flags))
        ]) main.c:14 195 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 20 19 21 2 (set (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg:SI 93)) main.c:14 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93)
        (nil)))
(insn 21 20 22 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC5") [flags 0x2]  <var_decl 068ed9f8 *LC5>)) main.c:14 79 {*movsi_internal}
     (nil))
(call_insn 22 21 118 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("scanf") [flags 0x43]  <function_decl 77ed4700 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 8 [0x8]))) main.c:14 581 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(jump_insn 118 22 119 2 (set (pc)
        (label_ref 95)) main.c:16 565 {jump}
     (nil)
 -> 95)
;;  succ:       16 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 119 118 98)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88
(code_label 98 119 25 3 11 "" [1 uses])
(note 25 98 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 3 (set (reg:SI 88 [ opc.0_13 ])
        (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [5 opc+0 S4 A32])) main.c:17 79 {*movsi_internal}
     (nil))
(insn 27 26 28 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ opc.0_13 ])
            (const_int 1 [0x1]))) main.c:17 7 {*cmpsi_1}
     (nil))
(jump_insn 28 27 112 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) main.c:17 533 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 42)
;;  succ:       10
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 17 [flags]
(note 112 28 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 112 30 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88 [ opc.0_13 ])
            (const_int 1 [0x1]))) main.c:17 7 {*cmpsi_1}
     (nil))
(jump_insn 30 29 113 4 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) main.c:17 533 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 35)
;;  succ:       7
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 17 [flags]
(note 113 30 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 113 32 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ opc.0_13 ])
            (const_int 0 [0]))) main.c:17 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 88 [ opc.0_13 ])
        (nil)))
(jump_insn 32 31 114 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 131)
            (pc))) main.c:17 533 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 131)
;;  succ:       18
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 114 32 120 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 120 114 121 6 (set (pc)
        (label_ref 90)) main.c:39 565 {jump}
     (nil)
 -> 90)
;;  succ:       15 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 121 120 35)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 17 [flags]
(code_label 35 121 115 7 5 "" [1 uses])
(note 115 35 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 36 115 37 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ opc.0_13 ])
            (const_int 2 [0x2]))) main.c:17 7 {*cmpsi_1}
     (nil))
(jump_insn 37 36 116 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) main.c:17 533 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 57)
;;  succ:       11
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 17 [flags]
(note 116 37 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 116 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ opc.0_13 ])
            (const_int 3 [0x3]))) main.c:17 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 88 [ opc.0_13 ])
        (nil)))
(jump_insn 39 38 117 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) main.c:17 533 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 78)
;;  succ:       14
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 117 39 122 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 122 117 123 9 (set (pc)
        (label_ref 90)) main.c:39 565 {jump}
     (nil)
 -> 90)
;;  succ:       15 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 123 122 42)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 94 95
(code_label 42 123 43 10 4 "" [1 uses])
(note 43 42 44 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 10 (parallel [
            (set (reg:SI 94)
                (plus:SI (reg/f:SI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) main.c:19 195 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 45 44 46 10 (set (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg:SI 94)) main.c:19 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94)
        (nil)))
(insn 46 45 47 10 (parallel [
            (set (reg:SI 95)
                (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) main.c:19 195 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 47 46 48 10 (set (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg:SI 95)) main.c:19 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 95)
        (nil)))
(call_insn 48 47 49 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("InsertDicionary") [flags 0x43]  <function_decl 77ec9d80 InsertDicionary>) [0 InsertDicionary S1 A8])
            (const_int 8 [0x8]))) main.c:19 581 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 49 48 50 10 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC6") [flags 0x2]  <var_decl 068edaa8 *LC6>)) main.c:20 79 {*movsi_internal}
     (nil))
(call_insn 50 49 51 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 4 [0x4]))) main.c:20 581 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(call_insn 51 50 52 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getchar") [flags 0x43]  <function_decl 77ed9580 getchar>) [0 getchar S1 A8])
            (const_int 0 [0]))) main.c:21 581 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(call_insn 52 51 53 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getchar") [flags 0x43]  <function_decl 77ed9580 getchar>) [0 getchar S1 A8])
            (const_int 0 [0]))) main.c:22 581 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 53 52 54 10 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC7") [flags 0x2]  <var_decl 068edb00 *LC7>)) main.c:23 79 {*movsi_internal}
     (nil))
(call_insn 54 53 124 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("system") [flags 0x43]  <function_decl 77eb8300 system>) [0 system S1 A8])
            (const_int 4 [0x4]))) main.c:23 581 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(jump_insn 124 54 125 10 (set (pc)
        (label_ref 90)) main.c:24 565 {jump}
     (nil)
 -> 90)
;;  succ:       15 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 125 124 57)
;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 96
(code_label 57 125 58 11 7 "" [1 uses])
(note 58 57 59 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 11 (parallel [
            (set (reg:SI 96)
                (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) main.c:26 195 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 60 59 61 11 (set (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg:SI 96)) main.c:26 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 96)
        (nil)))
(call_insn 61 60 62 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("Show") [flags 0x43]  <function_decl 77ec9e80 Show>) [0 Show S1 A8])
            (const_int 4 [0x4]))) main.c:26 581 {*call_value}
     (nil)
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 62 61 63 11 (set (reg:SI 89 [ _20 ])
        (reg:SI 0 ax)) main.c:26 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 63 62 64 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _20 ])
            (const_int 0 [0]))) main.c:26 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 89 [ _20 ])
        (nil)))
(jump_insn 64 63 65 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) main.c:26 533 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 68)
;;  succ:       12 (FALLTHRU)
;;              13
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 65 64 66 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 12 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC8") [flags 0x2]  <var_decl 068edb58 *LC8>)) main.c:27 79 {*movsi_internal}
     (nil))
(call_insn 67 66 68 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x43]  <function_decl 77ed4480 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 4 [0x4]))) main.c:27 581 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
;;  succ:       13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
;;              12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 68 67 69 13 10 "" [1 uses])
(note 69 68 70 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 13 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC6") [flags 0x2]  <var_decl 068edaa8 *LC6>)) main.c:28 79 {*movsi_internal}
     (nil))
(call_insn 71 70 72 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x43]  <function_decl 77ed4100 printf>) [0 __builtin_printf S1 A8])
            (const_int 4 [0x4]))) main.c:28 581 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(call_insn 72 71 73 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getchar") [flags 0x43]  <function_decl 77ed9580 getchar>) [0 getchar S1 A8])
            (const_int 0 [0]))) main.c:29 581 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(call_insn 73 72 74 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getchar") [flags 0x43]  <function_decl 77ed9580 getchar>) [0 getchar S1 A8])
            (const_int 0 [0]))) main.c:30 581 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 74 73 75 13 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC7") [flags 0x2]  <var_decl 068edb00 *LC7>)) main.c:31 79 {*movsi_internal}
     (nil))
(call_insn 75 74 126 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("system") [flags 0x43]  <function_decl 77eb8300 system>) [0 system S1 A8])
            (const_int 4 [0x4]))) main.c:31 581 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(jump_insn 126 75 127 13 (set (pc)
        (label_ref 90)) main.c:32 565 {jump}
     (nil)
 -> 90)
;;  succ:       15 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 127 126 78)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 78 127 79 14 8 "" [1 uses])
(note 79 78 80 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 14 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC9") [flags 0x2]  <var_decl 068edbb0 *LC9>)) main.c:34 79 {*movsi_internal}
     (nil))
(call_insn 81 80 128 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x43]  <function_decl 77ed4480 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 4 [0x4]))) main.c:34 581 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(jump_insn 128 81 129 14 (set (pc)
        (label_ref 90)) main.c:35 565 {jump}
     (nil)
 -> 90)
;;  succ:       15 [100,0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 129 128 131)
;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 15, flags: (NEW, RTL, MODIFIED)
;;  pred:       5
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 131 129 130 18 13 "" [1 uses])
(note 130 131 132 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 132 130 90 18 (const_int 0 [0]) main.c:37 599 {nop}
     (nil))
;;  succ:       15 [100,0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 [100,0%] 
;;              10 [100,0%] 
;;              13 [100,0%] 
;;              6 [100,0%] 
;;              18 [100,0%]  (FALLTHRU)
;;              14 [100,0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 97
(code_label 90 132 91 15 9 "" [5 uses])
(note 91 90 92 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 15 (parallel [
            (set (reg:SI 97)
                (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) main.c:41 195 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 93 92 94 15 (set (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg:SI 97)) main.c:41 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 97)
        (nil)))
(call_insn 94 93 95 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("FreeVerbs") [flags 0x43]  <function_decl 77ec9e00 FreeVerbs>) [0 FreeVerbs S1 A8])
            (const_int 4 [0x4]))) main.c:41 581 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
;;  succ:       16 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU,DFS_BACK)
;;              2 [100,0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87
(code_label 95 94 96 16 2 "" [1 uses])
(note 96 95 97 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 99 16 (set (reg:SI 87 [ opc.1_12 ])
        (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [5 opc+0 S4 A32])) main.c:16 79 {*movsi_internal}
     (nil))
(insn 99 97 100 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ opc.1_12 ])
            (const_int 0 [0]))) main.c:16 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 87 [ opc.1_12 ])
        (nil)))
(jump_insn 100 99 101 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) main.c:16 533 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 98)
;;  succ:       3
;;              17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 90 91
(note 101 100 102 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 105 17 (set (reg:SI 90 [ _28 ])
        (const_int 0 [0])) main.c:44 79 {*movsi_internal}
     (nil))
(insn 105 102 109 17 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ _28 ])) 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90 [ _28 ])
        (nil)))
(insn 109 105 110 17 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) main.c:45 79 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91 [ <retval> ])
        (nil)))
(insn 110 109 0 17 (use (reg/i:SI 0 ax)) main.c:45 -1
     (nil))
;;  succ:       EXIT [100,0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

